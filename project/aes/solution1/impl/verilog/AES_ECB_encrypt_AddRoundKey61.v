// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module AES_ECB_encrypt_AddRoundKey61 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        p_read15,
        RoundKey16_dout,
        RoundKey16_empty_n,
        RoundKey16_read,
        RoundKey17_dout,
        RoundKey17_empty_n,
        RoundKey17_read,
        RoundKey18_dout,
        RoundKey18_empty_n,
        RoundKey18_read,
        RoundKey19_dout,
        RoundKey19_empty_n,
        RoundKey19_read,
        RoundKey20_dout,
        RoundKey20_empty_n,
        RoundKey20_read,
        RoundKey21_dout,
        RoundKey21_empty_n,
        RoundKey21_read,
        RoundKey22_dout,
        RoundKey22_empty_n,
        RoundKey22_read,
        RoundKey23_dout,
        RoundKey23_empty_n,
        RoundKey23_read,
        RoundKey24_dout,
        RoundKey24_empty_n,
        RoundKey24_read,
        RoundKey25_dout,
        RoundKey25_empty_n,
        RoundKey25_read,
        RoundKey26_dout,
        RoundKey26_empty_n,
        RoundKey26_read,
        RoundKey27_dout,
        RoundKey27_empty_n,
        RoundKey27_read,
        RoundKey28_dout,
        RoundKey28_empty_n,
        RoundKey28_read,
        RoundKey29_dout,
        RoundKey29_empty_n,
        RoundKey29_read,
        RoundKey30_dout,
        RoundKey30_empty_n,
        RoundKey30_read,
        RoundKey31_dout,
        RoundKey31_empty_n,
        RoundKey31_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] p_read;
input  [7:0] p_read1;
input  [7:0] p_read2;
input  [7:0] p_read3;
input  [7:0] p_read4;
input  [7:0] p_read5;
input  [7:0] p_read6;
input  [7:0] p_read7;
input  [7:0] p_read8;
input  [7:0] p_read9;
input  [7:0] p_read10;
input  [7:0] p_read11;
input  [7:0] p_read12;
input  [7:0] p_read13;
input  [7:0] p_read14;
input  [7:0] p_read15;
input  [7:0] RoundKey16_dout;
input   RoundKey16_empty_n;
output   RoundKey16_read;
input  [7:0] RoundKey17_dout;
input   RoundKey17_empty_n;
output   RoundKey17_read;
input  [7:0] RoundKey18_dout;
input   RoundKey18_empty_n;
output   RoundKey18_read;
input  [7:0] RoundKey19_dout;
input   RoundKey19_empty_n;
output   RoundKey19_read;
input  [7:0] RoundKey20_dout;
input   RoundKey20_empty_n;
output   RoundKey20_read;
input  [7:0] RoundKey21_dout;
input   RoundKey21_empty_n;
output   RoundKey21_read;
input  [7:0] RoundKey22_dout;
input   RoundKey22_empty_n;
output   RoundKey22_read;
input  [7:0] RoundKey23_dout;
input   RoundKey23_empty_n;
output   RoundKey23_read;
input  [7:0] RoundKey24_dout;
input   RoundKey24_empty_n;
output   RoundKey24_read;
input  [7:0] RoundKey25_dout;
input   RoundKey25_empty_n;
output   RoundKey25_read;
input  [7:0] RoundKey26_dout;
input   RoundKey26_empty_n;
output   RoundKey26_read;
input  [7:0] RoundKey27_dout;
input   RoundKey27_empty_n;
output   RoundKey27_read;
input  [7:0] RoundKey28_dout;
input   RoundKey28_empty_n;
output   RoundKey28_read;
input  [7:0] RoundKey29_dout;
input   RoundKey29_empty_n;
output   RoundKey29_read;
input  [7:0] RoundKey30_dout;
input   RoundKey30_empty_n;
output   RoundKey30_read;
input  [7:0] RoundKey31_dout;
input   RoundKey31_empty_n;
output   RoundKey31_read;
output  [7:0] ap_return_0;
output  [7:0] ap_return_1;
output  [7:0] ap_return_2;
output  [7:0] ap_return_3;
output  [7:0] ap_return_4;
output  [7:0] ap_return_5;
output  [7:0] ap_return_6;
output  [7:0] ap_return_7;
output  [7:0] ap_return_8;
output  [7:0] ap_return_9;
output  [7:0] ap_return_10;
output  [7:0] ap_return_11;
output  [7:0] ap_return_12;
output  [7:0] ap_return_13;
output  [7:0] ap_return_14;
output  [7:0] ap_return_15;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg RoundKey16_read;
reg RoundKey17_read;
reg RoundKey18_read;
reg RoundKey19_read;
reg RoundKey20_read;
reg RoundKey21_read;
reg RoundKey22_read;
reg RoundKey23_read;
reg RoundKey24_read;
reg RoundKey25_read;
reg RoundKey26_read;
reg RoundKey27_read;
reg RoundKey28_read;
reg RoundKey29_read;
reg RoundKey30_read;
reg RoundKey31_read;
reg[7:0] ap_return_0;
reg[7:0] ap_return_1;
reg[7:0] ap_return_2;
reg[7:0] ap_return_3;
reg[7:0] ap_return_4;
reg[7:0] ap_return_5;
reg[7:0] ap_return_6;
reg[7:0] ap_return_7;
reg[7:0] ap_return_8;
reg[7:0] ap_return_9;
reg[7:0] ap_return_10;
reg[7:0] ap_return_11;
reg[7:0] ap_return_12;
reg[7:0] ap_return_13;
reg[7:0] ap_return_14;
reg[7:0] ap_return_15;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    RoundKey16_blk_n;
reg    RoundKey17_blk_n;
reg    RoundKey18_blk_n;
reg    RoundKey19_blk_n;
reg    RoundKey20_blk_n;
reg    RoundKey21_blk_n;
reg    RoundKey22_blk_n;
reg    RoundKey23_blk_n;
reg    RoundKey24_blk_n;
reg    RoundKey25_blk_n;
reg    RoundKey26_blk_n;
reg    RoundKey27_blk_n;
reg    RoundKey28_blk_n;
reg    RoundKey29_blk_n;
reg    RoundKey30_blk_n;
reg    RoundKey31_blk_n;
reg    ap_block_state1;
wire   [7:0] xor_ln68_fu_276_p2;
wire   [7:0] xor_ln68_136_fu_282_p2;
wire   [7:0] xor_ln68_137_fu_288_p2;
wire   [7:0] xor_ln68_138_fu_294_p2;
wire   [7:0] xor_ln68_139_fu_300_p2;
wire   [7:0] xor_ln68_140_fu_306_p2;
wire   [7:0] xor_ln68_141_fu_312_p2;
wire   [7:0] xor_ln68_142_fu_318_p2;
wire   [7:0] xor_ln68_143_fu_324_p2;
wire   [7:0] xor_ln68_144_fu_330_p2;
wire   [7:0] xor_ln68_145_fu_336_p2;
wire   [7:0] xor_ln68_146_fu_342_p2;
wire   [7:0] xor_ln68_147_fu_348_p2;
wire   [7:0] xor_ln68_148_fu_354_p2;
wire   [7:0] xor_ln68_149_fu_360_p2;
wire   [7:0] xor_ln68_150_fu_366_p2;
reg   [7:0] ap_return_0_preg;
reg   [7:0] ap_return_1_preg;
reg   [7:0] ap_return_2_preg;
reg   [7:0] ap_return_3_preg;
reg   [7:0] ap_return_4_preg;
reg   [7:0] ap_return_5_preg;
reg   [7:0] ap_return_6_preg;
reg   [7:0] ap_return_7_preg;
reg   [7:0] ap_return_8_preg;
reg   [7:0] ap_return_9_preg;
reg   [7:0] ap_return_10_preg;
reg   [7:0] ap_return_11_preg;
reg   [7:0] ap_return_12_preg;
reg   [7:0] ap_return_13_preg;
reg   [7:0] ap_return_14_preg;
reg   [7:0] ap_return_15_preg;
reg   [0:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_return_0_preg = 8'd0;
#0 ap_return_1_preg = 8'd0;
#0 ap_return_2_preg = 8'd0;
#0 ap_return_3_preg = 8'd0;
#0 ap_return_4_preg = 8'd0;
#0 ap_return_5_preg = 8'd0;
#0 ap_return_6_preg = 8'd0;
#0 ap_return_7_preg = 8'd0;
#0 ap_return_8_preg = 8'd0;
#0 ap_return_9_preg = 8'd0;
#0 ap_return_10_preg = 8'd0;
#0 ap_return_11_preg = 8'd0;
#0 ap_return_12_preg = 8'd0;
#0 ap_return_13_preg = 8'd0;
#0 ap_return_14_preg = 8'd0;
#0 ap_return_15_preg = 8'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_0_preg <= xor_ln68_fu_276_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_10_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_10_preg <= xor_ln68_145_fu_336_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_11_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_11_preg <= xor_ln68_146_fu_342_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_12_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_12_preg <= xor_ln68_147_fu_348_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_13_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_13_preg <= xor_ln68_148_fu_354_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_14_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_14_preg <= xor_ln68_149_fu_360_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_15_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_15_preg <= xor_ln68_150_fu_366_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_1_preg <= xor_ln68_136_fu_282_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_2_preg <= xor_ln68_137_fu_288_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_3_preg <= xor_ln68_138_fu_294_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_4_preg <= xor_ln68_139_fu_300_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_5_preg <= xor_ln68_140_fu_306_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_6_preg <= xor_ln68_141_fu_312_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_7_preg <= xor_ln68_142_fu_318_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_8_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_8_preg <= xor_ln68_143_fu_324_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_9_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_9_preg <= xor_ln68_144_fu_330_p2;
        end
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey16_blk_n = RoundKey16_empty_n;
    end else begin
        RoundKey16_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey16_read = 1'b1;
    end else begin
        RoundKey16_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey17_blk_n = RoundKey17_empty_n;
    end else begin
        RoundKey17_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey17_read = 1'b1;
    end else begin
        RoundKey17_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey18_blk_n = RoundKey18_empty_n;
    end else begin
        RoundKey18_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey18_read = 1'b1;
    end else begin
        RoundKey18_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey19_blk_n = RoundKey19_empty_n;
    end else begin
        RoundKey19_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey19_read = 1'b1;
    end else begin
        RoundKey19_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey20_blk_n = RoundKey20_empty_n;
    end else begin
        RoundKey20_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey20_read = 1'b1;
    end else begin
        RoundKey20_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey21_blk_n = RoundKey21_empty_n;
    end else begin
        RoundKey21_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey21_read = 1'b1;
    end else begin
        RoundKey21_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey22_blk_n = RoundKey22_empty_n;
    end else begin
        RoundKey22_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey22_read = 1'b1;
    end else begin
        RoundKey22_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey23_blk_n = RoundKey23_empty_n;
    end else begin
        RoundKey23_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey23_read = 1'b1;
    end else begin
        RoundKey23_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey24_blk_n = RoundKey24_empty_n;
    end else begin
        RoundKey24_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey24_read = 1'b1;
    end else begin
        RoundKey24_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey25_blk_n = RoundKey25_empty_n;
    end else begin
        RoundKey25_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey25_read = 1'b1;
    end else begin
        RoundKey25_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey26_blk_n = RoundKey26_empty_n;
    end else begin
        RoundKey26_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey26_read = 1'b1;
    end else begin
        RoundKey26_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey27_blk_n = RoundKey27_empty_n;
    end else begin
        RoundKey27_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey27_read = 1'b1;
    end else begin
        RoundKey27_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey28_blk_n = RoundKey28_empty_n;
    end else begin
        RoundKey28_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey28_read = 1'b1;
    end else begin
        RoundKey28_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey29_blk_n = RoundKey29_empty_n;
    end else begin
        RoundKey29_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey29_read = 1'b1;
    end else begin
        RoundKey29_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey30_blk_n = RoundKey30_empty_n;
    end else begin
        RoundKey30_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey30_read = 1'b1;
    end else begin
        RoundKey30_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey31_blk_n = RoundKey31_empty_n;
    end else begin
        RoundKey31_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey31_read = 1'b1;
    end else begin
        RoundKey31_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_0 = xor_ln68_fu_276_p2;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_1 = xor_ln68_136_fu_282_p2;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_10 = xor_ln68_145_fu_336_p2;
    end else begin
        ap_return_10 = ap_return_10_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_11 = xor_ln68_146_fu_342_p2;
    end else begin
        ap_return_11 = ap_return_11_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_12 = xor_ln68_147_fu_348_p2;
    end else begin
        ap_return_12 = ap_return_12_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_13 = xor_ln68_148_fu_354_p2;
    end else begin
        ap_return_13 = ap_return_13_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_14 = xor_ln68_149_fu_360_p2;
    end else begin
        ap_return_14 = ap_return_14_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_15 = xor_ln68_150_fu_366_p2;
    end else begin
        ap_return_15 = ap_return_15_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_2 = xor_ln68_137_fu_288_p2;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_3 = xor_ln68_138_fu_294_p2;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_4 = xor_ln68_139_fu_300_p2;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_5 = xor_ln68_140_fu_306_p2;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_6 = xor_ln68_141_fu_312_p2;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_7 = xor_ln68_142_fu_318_p2;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_8 = xor_ln68_143_fu_324_p2;
    end else begin
        ap_return_8 = ap_return_8_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_9 = xor_ln68_144_fu_330_p2;
    end else begin
        ap_return_9 = ap_return_9_preg;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (1'b0 == RoundKey30_empty_n) | (1'b0 == RoundKey29_empty_n) | (1'b0 == RoundKey28_empty_n) | (1'b0 == RoundKey27_empty_n) | (1'b0 == RoundKey26_empty_n) | (1'b0 == RoundKey25_empty_n) | (1'b0 == RoundKey24_empty_n) | (1'b0 == RoundKey23_empty_n) | (1'b0 == RoundKey22_empty_n) | (1'b0 == RoundKey21_empty_n) | (1'b0 == RoundKey20_empty_n) | (1'b0 == RoundKey19_empty_n) | (1'b0 == RoundKey18_empty_n) | (1'b0 == RoundKey17_empty_n) | (1'b0 == RoundKey16_empty_n) | (1'b0 == RoundKey31_empty_n) | (ap_done_reg == 1'b1));
end

assign xor_ln68_136_fu_282_p2 = (p_read1 ^ RoundKey17_dout);

assign xor_ln68_137_fu_288_p2 = (p_read2 ^ RoundKey18_dout);

assign xor_ln68_138_fu_294_p2 = (p_read3 ^ RoundKey19_dout);

assign xor_ln68_139_fu_300_p2 = (p_read4 ^ RoundKey20_dout);

assign xor_ln68_140_fu_306_p2 = (p_read5 ^ RoundKey21_dout);

assign xor_ln68_141_fu_312_p2 = (p_read6 ^ RoundKey22_dout);

assign xor_ln68_142_fu_318_p2 = (p_read7 ^ RoundKey23_dout);

assign xor_ln68_143_fu_324_p2 = (p_read8 ^ RoundKey24_dout);

assign xor_ln68_144_fu_330_p2 = (p_read9 ^ RoundKey25_dout);

assign xor_ln68_145_fu_336_p2 = (p_read10 ^ RoundKey26_dout);

assign xor_ln68_146_fu_342_p2 = (p_read11 ^ RoundKey27_dout);

assign xor_ln68_147_fu_348_p2 = (p_read12 ^ RoundKey28_dout);

assign xor_ln68_148_fu_354_p2 = (p_read13 ^ RoundKey29_dout);

assign xor_ln68_149_fu_360_p2 = (p_read14 ^ RoundKey30_dout);

assign xor_ln68_150_fu_366_p2 = (p_read15 ^ RoundKey31_dout);

assign xor_ln68_fu_276_p2 = (p_read ^ RoundKey16_dout);

endmodule //AES_ECB_encrypt_AddRoundKey61
