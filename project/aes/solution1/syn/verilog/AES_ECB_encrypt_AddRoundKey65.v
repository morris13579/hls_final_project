// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module AES_ECB_encrypt_AddRoundKey65 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        p_read15,
        RoundKey32_dout,
        RoundKey32_empty_n,
        RoundKey32_read,
        RoundKey33_dout,
        RoundKey33_empty_n,
        RoundKey33_read,
        RoundKey34_dout,
        RoundKey34_empty_n,
        RoundKey34_read,
        RoundKey35_dout,
        RoundKey35_empty_n,
        RoundKey35_read,
        RoundKey36_dout,
        RoundKey36_empty_n,
        RoundKey36_read,
        RoundKey37_dout,
        RoundKey37_empty_n,
        RoundKey37_read,
        RoundKey38_dout,
        RoundKey38_empty_n,
        RoundKey38_read,
        RoundKey39_dout,
        RoundKey39_empty_n,
        RoundKey39_read,
        RoundKey40_dout,
        RoundKey40_empty_n,
        RoundKey40_read,
        RoundKey41_dout,
        RoundKey41_empty_n,
        RoundKey41_read,
        RoundKey42_dout,
        RoundKey42_empty_n,
        RoundKey42_read,
        RoundKey43_dout,
        RoundKey43_empty_n,
        RoundKey43_read,
        RoundKey44_dout,
        RoundKey44_empty_n,
        RoundKey44_read,
        RoundKey45_dout,
        RoundKey45_empty_n,
        RoundKey45_read,
        RoundKey46_dout,
        RoundKey46_empty_n,
        RoundKey46_read,
        RoundKey47_dout,
        RoundKey47_empty_n,
        RoundKey47_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] p_read;
input  [7:0] p_read1;
input  [7:0] p_read2;
input  [7:0] p_read3;
input  [7:0] p_read4;
input  [7:0] p_read5;
input  [7:0] p_read6;
input  [7:0] p_read7;
input  [7:0] p_read8;
input  [7:0] p_read9;
input  [7:0] p_read10;
input  [7:0] p_read11;
input  [7:0] p_read12;
input  [7:0] p_read13;
input  [7:0] p_read14;
input  [7:0] p_read15;
input  [7:0] RoundKey32_dout;
input   RoundKey32_empty_n;
output   RoundKey32_read;
input  [7:0] RoundKey33_dout;
input   RoundKey33_empty_n;
output   RoundKey33_read;
input  [7:0] RoundKey34_dout;
input   RoundKey34_empty_n;
output   RoundKey34_read;
input  [7:0] RoundKey35_dout;
input   RoundKey35_empty_n;
output   RoundKey35_read;
input  [7:0] RoundKey36_dout;
input   RoundKey36_empty_n;
output   RoundKey36_read;
input  [7:0] RoundKey37_dout;
input   RoundKey37_empty_n;
output   RoundKey37_read;
input  [7:0] RoundKey38_dout;
input   RoundKey38_empty_n;
output   RoundKey38_read;
input  [7:0] RoundKey39_dout;
input   RoundKey39_empty_n;
output   RoundKey39_read;
input  [7:0] RoundKey40_dout;
input   RoundKey40_empty_n;
output   RoundKey40_read;
input  [7:0] RoundKey41_dout;
input   RoundKey41_empty_n;
output   RoundKey41_read;
input  [7:0] RoundKey42_dout;
input   RoundKey42_empty_n;
output   RoundKey42_read;
input  [7:0] RoundKey43_dout;
input   RoundKey43_empty_n;
output   RoundKey43_read;
input  [7:0] RoundKey44_dout;
input   RoundKey44_empty_n;
output   RoundKey44_read;
input  [7:0] RoundKey45_dout;
input   RoundKey45_empty_n;
output   RoundKey45_read;
input  [7:0] RoundKey46_dout;
input   RoundKey46_empty_n;
output   RoundKey46_read;
input  [7:0] RoundKey47_dout;
input   RoundKey47_empty_n;
output   RoundKey47_read;
output  [7:0] ap_return_0;
output  [7:0] ap_return_1;
output  [7:0] ap_return_2;
output  [7:0] ap_return_3;
output  [7:0] ap_return_4;
output  [7:0] ap_return_5;
output  [7:0] ap_return_6;
output  [7:0] ap_return_7;
output  [7:0] ap_return_8;
output  [7:0] ap_return_9;
output  [7:0] ap_return_10;
output  [7:0] ap_return_11;
output  [7:0] ap_return_12;
output  [7:0] ap_return_13;
output  [7:0] ap_return_14;
output  [7:0] ap_return_15;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg RoundKey32_read;
reg RoundKey33_read;
reg RoundKey34_read;
reg RoundKey35_read;
reg RoundKey36_read;
reg RoundKey37_read;
reg RoundKey38_read;
reg RoundKey39_read;
reg RoundKey40_read;
reg RoundKey41_read;
reg RoundKey42_read;
reg RoundKey43_read;
reg RoundKey44_read;
reg RoundKey45_read;
reg RoundKey46_read;
reg RoundKey47_read;
reg[7:0] ap_return_0;
reg[7:0] ap_return_1;
reg[7:0] ap_return_2;
reg[7:0] ap_return_3;
reg[7:0] ap_return_4;
reg[7:0] ap_return_5;
reg[7:0] ap_return_6;
reg[7:0] ap_return_7;
reg[7:0] ap_return_8;
reg[7:0] ap_return_9;
reg[7:0] ap_return_10;
reg[7:0] ap_return_11;
reg[7:0] ap_return_12;
reg[7:0] ap_return_13;
reg[7:0] ap_return_14;
reg[7:0] ap_return_15;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    RoundKey32_blk_n;
reg    RoundKey33_blk_n;
reg    RoundKey34_blk_n;
reg    RoundKey35_blk_n;
reg    RoundKey36_blk_n;
reg    RoundKey37_blk_n;
reg    RoundKey38_blk_n;
reg    RoundKey39_blk_n;
reg    RoundKey40_blk_n;
reg    RoundKey41_blk_n;
reg    RoundKey42_blk_n;
reg    RoundKey43_blk_n;
reg    RoundKey44_blk_n;
reg    RoundKey45_blk_n;
reg    RoundKey46_blk_n;
reg    RoundKey47_blk_n;
reg    ap_block_state1;
wire   [7:0] xor_ln68_fu_276_p2;
wire   [7:0] xor_ln68_121_fu_282_p2;
wire   [7:0] xor_ln68_122_fu_288_p2;
wire   [7:0] xor_ln68_123_fu_294_p2;
wire   [7:0] xor_ln68_124_fu_300_p2;
wire   [7:0] xor_ln68_125_fu_306_p2;
wire   [7:0] xor_ln68_126_fu_312_p2;
wire   [7:0] xor_ln68_127_fu_318_p2;
wire   [7:0] xor_ln68_128_fu_324_p2;
wire   [7:0] xor_ln68_129_fu_330_p2;
wire   [7:0] xor_ln68_130_fu_336_p2;
wire   [7:0] xor_ln68_131_fu_342_p2;
wire   [7:0] xor_ln68_132_fu_348_p2;
wire   [7:0] xor_ln68_133_fu_354_p2;
wire   [7:0] xor_ln68_134_fu_360_p2;
wire   [7:0] xor_ln68_135_fu_366_p2;
reg   [7:0] ap_return_0_preg;
reg   [7:0] ap_return_1_preg;
reg   [7:0] ap_return_2_preg;
reg   [7:0] ap_return_3_preg;
reg   [7:0] ap_return_4_preg;
reg   [7:0] ap_return_5_preg;
reg   [7:0] ap_return_6_preg;
reg   [7:0] ap_return_7_preg;
reg   [7:0] ap_return_8_preg;
reg   [7:0] ap_return_9_preg;
reg   [7:0] ap_return_10_preg;
reg   [7:0] ap_return_11_preg;
reg   [7:0] ap_return_12_preg;
reg   [7:0] ap_return_13_preg;
reg   [7:0] ap_return_14_preg;
reg   [7:0] ap_return_15_preg;
reg   [0:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_return_0_preg = 8'd0;
#0 ap_return_1_preg = 8'd0;
#0 ap_return_2_preg = 8'd0;
#0 ap_return_3_preg = 8'd0;
#0 ap_return_4_preg = 8'd0;
#0 ap_return_5_preg = 8'd0;
#0 ap_return_6_preg = 8'd0;
#0 ap_return_7_preg = 8'd0;
#0 ap_return_8_preg = 8'd0;
#0 ap_return_9_preg = 8'd0;
#0 ap_return_10_preg = 8'd0;
#0 ap_return_11_preg = 8'd0;
#0 ap_return_12_preg = 8'd0;
#0 ap_return_13_preg = 8'd0;
#0 ap_return_14_preg = 8'd0;
#0 ap_return_15_preg = 8'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_0_preg <= xor_ln68_fu_276_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_10_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_10_preg <= xor_ln68_130_fu_336_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_11_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_11_preg <= xor_ln68_131_fu_342_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_12_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_12_preg <= xor_ln68_132_fu_348_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_13_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_13_preg <= xor_ln68_133_fu_354_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_14_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_14_preg <= xor_ln68_134_fu_360_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_15_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_15_preg <= xor_ln68_135_fu_366_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_1_preg <= xor_ln68_121_fu_282_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_2_preg <= xor_ln68_122_fu_288_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_3_preg <= xor_ln68_123_fu_294_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_4_preg <= xor_ln68_124_fu_300_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_5_preg <= xor_ln68_125_fu_306_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_6_preg <= xor_ln68_126_fu_312_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_7_preg <= xor_ln68_127_fu_318_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_8_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_8_preg <= xor_ln68_128_fu_324_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_9_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_9_preg <= xor_ln68_129_fu_330_p2;
        end
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey32_blk_n = RoundKey32_empty_n;
    end else begin
        RoundKey32_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey32_read = 1'b1;
    end else begin
        RoundKey32_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey33_blk_n = RoundKey33_empty_n;
    end else begin
        RoundKey33_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey33_read = 1'b1;
    end else begin
        RoundKey33_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey34_blk_n = RoundKey34_empty_n;
    end else begin
        RoundKey34_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey34_read = 1'b1;
    end else begin
        RoundKey34_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey35_blk_n = RoundKey35_empty_n;
    end else begin
        RoundKey35_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey35_read = 1'b1;
    end else begin
        RoundKey35_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey36_blk_n = RoundKey36_empty_n;
    end else begin
        RoundKey36_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey36_read = 1'b1;
    end else begin
        RoundKey36_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey37_blk_n = RoundKey37_empty_n;
    end else begin
        RoundKey37_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey37_read = 1'b1;
    end else begin
        RoundKey37_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey38_blk_n = RoundKey38_empty_n;
    end else begin
        RoundKey38_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey38_read = 1'b1;
    end else begin
        RoundKey38_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey39_blk_n = RoundKey39_empty_n;
    end else begin
        RoundKey39_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey39_read = 1'b1;
    end else begin
        RoundKey39_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey40_blk_n = RoundKey40_empty_n;
    end else begin
        RoundKey40_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey40_read = 1'b1;
    end else begin
        RoundKey40_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey41_blk_n = RoundKey41_empty_n;
    end else begin
        RoundKey41_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey41_read = 1'b1;
    end else begin
        RoundKey41_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey42_blk_n = RoundKey42_empty_n;
    end else begin
        RoundKey42_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey42_read = 1'b1;
    end else begin
        RoundKey42_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey43_blk_n = RoundKey43_empty_n;
    end else begin
        RoundKey43_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey43_read = 1'b1;
    end else begin
        RoundKey43_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey44_blk_n = RoundKey44_empty_n;
    end else begin
        RoundKey44_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey44_read = 1'b1;
    end else begin
        RoundKey44_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey45_blk_n = RoundKey45_empty_n;
    end else begin
        RoundKey45_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey45_read = 1'b1;
    end else begin
        RoundKey45_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey46_blk_n = RoundKey46_empty_n;
    end else begin
        RoundKey46_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey46_read = 1'b1;
    end else begin
        RoundKey46_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey47_blk_n = RoundKey47_empty_n;
    end else begin
        RoundKey47_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey47_read = 1'b1;
    end else begin
        RoundKey47_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_0 = xor_ln68_fu_276_p2;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_1 = xor_ln68_121_fu_282_p2;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_10 = xor_ln68_130_fu_336_p2;
    end else begin
        ap_return_10 = ap_return_10_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_11 = xor_ln68_131_fu_342_p2;
    end else begin
        ap_return_11 = ap_return_11_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_12 = xor_ln68_132_fu_348_p2;
    end else begin
        ap_return_12 = ap_return_12_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_13 = xor_ln68_133_fu_354_p2;
    end else begin
        ap_return_13 = ap_return_13_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_14 = xor_ln68_134_fu_360_p2;
    end else begin
        ap_return_14 = ap_return_14_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_15 = xor_ln68_135_fu_366_p2;
    end else begin
        ap_return_15 = ap_return_15_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_2 = xor_ln68_122_fu_288_p2;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_3 = xor_ln68_123_fu_294_p2;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_4 = xor_ln68_124_fu_300_p2;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_5 = xor_ln68_125_fu_306_p2;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_6 = xor_ln68_126_fu_312_p2;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_7 = xor_ln68_127_fu_318_p2;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_8 = xor_ln68_128_fu_324_p2;
    end else begin
        ap_return_8 = ap_return_8_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_9 = xor_ln68_129_fu_330_p2;
    end else begin
        ap_return_9 = ap_return_9_preg;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (1'b0 == RoundKey46_empty_n) | (1'b0 == RoundKey45_empty_n) | (1'b0 == RoundKey44_empty_n) | (1'b0 == RoundKey43_empty_n) | (1'b0 == RoundKey42_empty_n) | (1'b0 == RoundKey41_empty_n) | (1'b0 == RoundKey40_empty_n) | (1'b0 == RoundKey39_empty_n) | (1'b0 == RoundKey38_empty_n) | (1'b0 == RoundKey37_empty_n) | (1'b0 == RoundKey36_empty_n) | (1'b0 == RoundKey35_empty_n) | (1'b0 == RoundKey34_empty_n) | (1'b0 == RoundKey33_empty_n) | (1'b0 == RoundKey32_empty_n) | (1'b0 == RoundKey47_empty_n) | (ap_done_reg == 1'b1));
end

assign xor_ln68_121_fu_282_p2 = (p_read1 ^ RoundKey33_dout);

assign xor_ln68_122_fu_288_p2 = (p_read2 ^ RoundKey34_dout);

assign xor_ln68_123_fu_294_p2 = (p_read3 ^ RoundKey35_dout);

assign xor_ln68_124_fu_300_p2 = (p_read4 ^ RoundKey36_dout);

assign xor_ln68_125_fu_306_p2 = (p_read5 ^ RoundKey37_dout);

assign xor_ln68_126_fu_312_p2 = (p_read6 ^ RoundKey38_dout);

assign xor_ln68_127_fu_318_p2 = (p_read7 ^ RoundKey39_dout);

assign xor_ln68_128_fu_324_p2 = (p_read8 ^ RoundKey40_dout);

assign xor_ln68_129_fu_330_p2 = (p_read9 ^ RoundKey41_dout);

assign xor_ln68_130_fu_336_p2 = (p_read10 ^ RoundKey42_dout);

assign xor_ln68_131_fu_342_p2 = (p_read11 ^ RoundKey43_dout);

assign xor_ln68_132_fu_348_p2 = (p_read12 ^ RoundKey44_dout);

assign xor_ln68_133_fu_354_p2 = (p_read13 ^ RoundKey45_dout);

assign xor_ln68_134_fu_360_p2 = (p_read14 ^ RoundKey46_dout);

assign xor_ln68_135_fu_366_p2 = (p_read15 ^ RoundKey47_dout);

assign xor_ln68_fu_276_p2 = (p_read ^ RoundKey32_dout);

endmodule //AES_ECB_encrypt_AddRoundKey65
