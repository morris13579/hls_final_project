

================================================================
== Vitis HLS Report for 'MixColumns395'
================================================================
* Date:           Wed Dec 29 21:49:56 2021

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:45 MST 2020)
* Project:        aes
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  4.065 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        0|        0|      0 ns|      0 ns|    0|    0|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.06>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%p_read_177 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read15" [AES.cpp:65]   --->   Operation 2 'read' 'p_read_177' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%p_read_178 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read14" [AES.cpp:65]   --->   Operation 3 'read' 'p_read_178' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%p_read_179 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read13" [AES.cpp:65]   --->   Operation 4 'read' 'p_read_179' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%p_read_180 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read12" [AES.cpp:65]   --->   Operation 5 'read' 'p_read_180' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%p_read1127 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read11" [AES.cpp:65]   --->   Operation 6 'read' 'p_read1127' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%p_read1026 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read10" [AES.cpp:65]   --->   Operation 7 'read' 'p_read1026' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%p_read925 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read9" [AES.cpp:65]   --->   Operation 8 'read' 'p_read925' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%p_read824 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read8" [AES.cpp:65]   --->   Operation 9 'read' 'p_read824' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%p_read723 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read7" [AES.cpp:65]   --->   Operation 10 'read' 'p_read723' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%p_read622 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read6" [AES.cpp:65]   --->   Operation 11 'read' 'p_read622' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%p_read521 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read5" [AES.cpp:65]   --->   Operation 12 'read' 'p_read521' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%p_read420 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read4" [AES.cpp:65]   --->   Operation 13 'read' 'p_read420' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%p_read319 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read3" [AES.cpp:65]   --->   Operation 14 'read' 'p_read319' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%p_read218 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read2" [AES.cpp:65]   --->   Operation 15 'read' 'p_read218' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%p_read117 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read1" [AES.cpp:65]   --->   Operation 16 'read' 'p_read117' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%p_read16 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read" [AES.cpp:65]   --->   Operation 17 'read' 'p_read16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (4.06ns)   --->   "%call_ret = call i32 @Four_Term_Multiplication, i8 %p_read16, i8 %p_read420, i8 %p_read824, i8 %p_read_180" [AES.cpp:66]   --->   Operation 18 'call' 'call_ret' <Predicate = true> <Delay = 4.06> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%temp_0 = extractvalue i32 %call_ret" [AES.cpp:66]   --->   Operation 19 'extractvalue' 'temp_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%temp_1 = extractvalue i32 %call_ret" [AES.cpp:66]   --->   Operation 20 'extractvalue' 'temp_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%temp_2 = extractvalue i32 %call_ret" [AES.cpp:66]   --->   Operation 21 'extractvalue' 'temp_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%temp_3 = extractvalue i32 %call_ret" [AES.cpp:66]   --->   Operation 22 'extractvalue' 'temp_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (4.06ns)   --->   "%call_ret7 = call i32 @Four_Term_Multiplication, i8 %p_read117, i8 %p_read521, i8 %p_read925, i8 %p_read_179" [AES.cpp:66]   --->   Operation 23 'call' 'call_ret7' <Predicate = true> <Delay = 4.06> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%temp_0_16 = extractvalue i32 %call_ret7" [AES.cpp:66]   --->   Operation 24 'extractvalue' 'temp_0_16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%temp_1_16 = extractvalue i32 %call_ret7" [AES.cpp:66]   --->   Operation 25 'extractvalue' 'temp_1_16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%temp_2_16 = extractvalue i32 %call_ret7" [AES.cpp:66]   --->   Operation 26 'extractvalue' 'temp_2_16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%temp_3_16 = extractvalue i32 %call_ret7" [AES.cpp:66]   --->   Operation 27 'extractvalue' 'temp_3_16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (4.06ns)   --->   "%call_ret8 = call i32 @Four_Term_Multiplication, i8 %p_read218, i8 %p_read622, i8 %p_read1026, i8 %p_read_178" [AES.cpp:66]   --->   Operation 28 'call' 'call_ret8' <Predicate = true> <Delay = 4.06> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%temp_0_17 = extractvalue i32 %call_ret8" [AES.cpp:66]   --->   Operation 29 'extractvalue' 'temp_0_17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%temp_1_17 = extractvalue i32 %call_ret8" [AES.cpp:66]   --->   Operation 30 'extractvalue' 'temp_1_17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%temp_2_17 = extractvalue i32 %call_ret8" [AES.cpp:66]   --->   Operation 31 'extractvalue' 'temp_2_17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%temp_3_17 = extractvalue i32 %call_ret8" [AES.cpp:66]   --->   Operation 32 'extractvalue' 'temp_3_17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (4.06ns)   --->   "%call_ret9 = call i32 @Four_Term_Multiplication, i8 %p_read319, i8 %p_read723, i8 %p_read1127, i8 %p_read_177" [AES.cpp:66]   --->   Operation 33 'call' 'call_ret9' <Predicate = true> <Delay = 4.06> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%temp_0_18 = extractvalue i32 %call_ret9" [AES.cpp:66]   --->   Operation 34 'extractvalue' 'temp_0_18' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%temp_1_18 = extractvalue i32 %call_ret9" [AES.cpp:66]   --->   Operation 35 'extractvalue' 'temp_1_18' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%temp_2_18 = extractvalue i32 %call_ret9" [AES.cpp:66]   --->   Operation 36 'extractvalue' 'temp_2_18' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%temp_3_18 = extractvalue i32 %call_ret9" [AES.cpp:66]   --->   Operation 37 'extractvalue' 'temp_3_18' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%mrv = insertvalue i128 <undef>, i8 %temp_0" [AES.cpp:69]   --->   Operation 38 'insertvalue' 'mrv' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue i128 %mrv, i8 %temp_0_16" [AES.cpp:69]   --->   Operation 39 'insertvalue' 'mrv_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%mrv_2 = insertvalue i128 %mrv_1, i8 %temp_0_17" [AES.cpp:69]   --->   Operation 40 'insertvalue' 'mrv_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%mrv_3 = insertvalue i128 %mrv_2, i8 %temp_0_18" [AES.cpp:69]   --->   Operation 41 'insertvalue' 'mrv_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%mrv_4 = insertvalue i128 %mrv_3, i8 %temp_1" [AES.cpp:69]   --->   Operation 42 'insertvalue' 'mrv_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%mrv_5 = insertvalue i128 %mrv_4, i8 %temp_1_16" [AES.cpp:69]   --->   Operation 43 'insertvalue' 'mrv_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%mrv_6 = insertvalue i128 %mrv_5, i8 %temp_1_17" [AES.cpp:69]   --->   Operation 44 'insertvalue' 'mrv_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%mrv_7 = insertvalue i128 %mrv_6, i8 %temp_1_18" [AES.cpp:69]   --->   Operation 45 'insertvalue' 'mrv_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%mrv_8 = insertvalue i128 %mrv_7, i8 %temp_2" [AES.cpp:69]   --->   Operation 46 'insertvalue' 'mrv_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%mrv_9 = insertvalue i128 %mrv_8, i8 %temp_2_16" [AES.cpp:69]   --->   Operation 47 'insertvalue' 'mrv_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%mrv_10 = insertvalue i128 %mrv_9, i8 %temp_2_17" [AES.cpp:69]   --->   Operation 48 'insertvalue' 'mrv_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%mrv_11 = insertvalue i128 %mrv_10, i8 %temp_2_18" [AES.cpp:69]   --->   Operation 49 'insertvalue' 'mrv_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%mrv_12 = insertvalue i128 %mrv_11, i8 %temp_3" [AES.cpp:69]   --->   Operation 50 'insertvalue' 'mrv_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%mrv_13 = insertvalue i128 %mrv_12, i8 %temp_3_16" [AES.cpp:69]   --->   Operation 51 'insertvalue' 'mrv_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%mrv_14 = insertvalue i128 %mrv_13, i8 %temp_3_17" [AES.cpp:69]   --->   Operation 52 'insertvalue' 'mrv_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%mrv_s = insertvalue i128 %mrv_14, i8 %temp_3_18" [AES.cpp:69]   --->   Operation 53 'insertvalue' 'mrv_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%ret_ln69 = ret i128 %mrv_s" [AES.cpp:69]   --->   Operation 54 'ret' 'ret_ln69' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 4.06ns
The critical path consists of the following:
	wire read on port 'p_read12' (AES.cpp:65) [20]  (0 ns)
	'call' operation ('call_ret', AES.cpp:66) to 'Four_Term_Multiplication' [33]  (4.06 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
