

================================================================
== Vitis HLS Report for 'MixColumns60'
================================================================
* Date:           Thu Dec 30 15:46:26 2021

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:45 MST 2020)
* Project:        aes
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  4.158 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        0|        0|      0 ns|      0 ns|    0|    0|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.15>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%p_read_177 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read15" [AES_encrypt.cpp:45]   --->   Operation 2 'read' 'p_read_177' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%p_read_178 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read14" [AES_encrypt.cpp:45]   --->   Operation 3 'read' 'p_read_178' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%p_read_179 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read13" [AES_encrypt.cpp:45]   --->   Operation 4 'read' 'p_read_179' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%p_read_180 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read12" [AES_encrypt.cpp:45]   --->   Operation 5 'read' 'p_read_180' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%p_read1128 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read11" [AES_encrypt.cpp:45]   --->   Operation 6 'read' 'p_read1128' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%p_read1027 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read10" [AES_encrypt.cpp:45]   --->   Operation 7 'read' 'p_read1027' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%p_read926 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read9" [AES_encrypt.cpp:45]   --->   Operation 8 'read' 'p_read926' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%p_read825 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read8" [AES_encrypt.cpp:45]   --->   Operation 9 'read' 'p_read825' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%p_read724 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read7" [AES_encrypt.cpp:45]   --->   Operation 10 'read' 'p_read724' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%p_read623 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read6" [AES_encrypt.cpp:45]   --->   Operation 11 'read' 'p_read623' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%p_read522 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read5" [AES_encrypt.cpp:45]   --->   Operation 12 'read' 'p_read522' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%p_read421 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read4" [AES_encrypt.cpp:45]   --->   Operation 13 'read' 'p_read421' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%p_read320 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read3" [AES_encrypt.cpp:45]   --->   Operation 14 'read' 'p_read320' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%p_read219 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read2" [AES_encrypt.cpp:45]   --->   Operation 15 'read' 'p_read219' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%p_read118 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read1" [AES_encrypt.cpp:45]   --->   Operation 16 'read' 'p_read118' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%p_read17 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read" [AES_encrypt.cpp:45]   --->   Operation 17 'read' 'p_read17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.99ns)   --->   "%xor_ln50 = xor i8 %p_read118, i8 %p_read17" [AES_encrypt.cpp:50]   --->   Operation 18 'xor' 'xor_ln50' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.99ns)   --->   "%xor_ln50_78 = xor i8 %xor_ln50, i8 %p_read219" [AES_encrypt.cpp:50]   --->   Operation 19 'xor' 'xor_ln50_78' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.99ns)   --->   "%xor_ln50_79 = xor i8 %xor_ln50_78, i8 %p_read320" [AES_encrypt.cpp:50]   --->   Operation 20 'xor' 'xor_ln50_79' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_79)   --->   "%shl_ln75 = shl i8 %xor_ln50, i8 1" [AES_common.cpp:75]   --->   Operation 21 'shl' 'shl_ln75' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_79)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln50, i32 7" [AES_common.cpp:75]   --->   Operation 22 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_79)   --->   "%select_ln53 = select i1 %tmp, i8 27, i8 0" [AES_encrypt.cpp:53]   --->   Operation 23 'select' 'select_ln53' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_79)   --->   "%xor_ln53 = xor i8 %shl_ln75, i8 %p_read17" [AES_encrypt.cpp:53]   --->   Operation 24 'xor' 'xor_ln53' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_79)   --->   "%xor_ln53_78 = xor i8 %select_ln53, i8 %xor_ln50_79" [AES_encrypt.cpp:53]   --->   Operation 25 'xor' 'xor_ln53_78' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln53_79 = xor i8 %xor_ln53_78, i8 %xor_ln53" [AES_encrypt.cpp:53]   --->   Operation 26 'xor' 'xor_ln53_79' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.99ns)   --->   "%xor_ln55 = xor i8 %p_read219, i8 %p_read118" [AES_encrypt.cpp:55]   --->   Operation 27 'xor' 'xor_ln55' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_79)   --->   "%shl_ln75_106 = shl i8 %xor_ln55, i8 1" [AES_common.cpp:75]   --->   Operation 28 'shl' 'shl_ln75_106' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_79)   --->   "%tmp_106 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln55, i32 7" [AES_common.cpp:75]   --->   Operation 29 'bitselect' 'tmp_106' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_79)   --->   "%select_ln57 = select i1 %tmp_106, i8 27, i8 0" [AES_encrypt.cpp:57]   --->   Operation 30 'select' 'select_ln57' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_79)   --->   "%xor_ln57 = xor i8 %shl_ln75_106, i8 %p_read118" [AES_encrypt.cpp:57]   --->   Operation 31 'xor' 'xor_ln57' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_79)   --->   "%xor_ln57_78 = xor i8 %select_ln57, i8 %xor_ln50_79" [AES_encrypt.cpp:57]   --->   Operation 32 'xor' 'xor_ln57_78' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln57_79 = xor i8 %xor_ln57_78, i8 %xor_ln57" [AES_encrypt.cpp:57]   --->   Operation 33 'xor' 'xor_ln57_79' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.99ns)   --->   "%xor_ln59 = xor i8 %p_read320, i8 %p_read219" [AES_encrypt.cpp:59]   --->   Operation 34 'xor' 'xor_ln59' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_79)   --->   "%shl_ln75_107 = shl i8 %xor_ln59, i8 1" [AES_common.cpp:75]   --->   Operation 35 'shl' 'shl_ln75_107' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_79)   --->   "%tmp_107 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln59, i32 7" [AES_common.cpp:75]   --->   Operation 36 'bitselect' 'tmp_107' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_79)   --->   "%select_ln61 = select i1 %tmp_107, i8 27, i8 0" [AES_encrypt.cpp:61]   --->   Operation 37 'select' 'select_ln61' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_79)   --->   "%xor_ln61 = xor i8 %xor_ln50, i8 %p_read320" [AES_encrypt.cpp:61]   --->   Operation 38 'xor' 'xor_ln61' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_79)   --->   "%xor_ln61_78 = xor i8 %shl_ln75_107, i8 %select_ln61" [AES_encrypt.cpp:61]   --->   Operation 39 'xor' 'xor_ln61_78' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln61_79 = xor i8 %xor_ln61_78, i8 %xor_ln61" [AES_encrypt.cpp:61]   --->   Operation 40 'xor' 'xor_ln61_79' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (0.99ns)   --->   "%xor_ln63 = xor i8 %p_read320, i8 %p_read17" [AES_encrypt.cpp:63]   --->   Operation 41 'xor' 'xor_ln63' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_50)   --->   "%shl_ln75_108 = shl i8 %xor_ln63, i8 1" [AES_common.cpp:75]   --->   Operation 42 'shl' 'shl_ln75_108' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_50)   --->   "%tmp_108 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln63, i32 7" [AES_common.cpp:75]   --->   Operation 43 'bitselect' 'tmp_108' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_50)   --->   "%select_ln65 = select i1 %tmp_108, i8 27, i8 0" [AES_encrypt.cpp:65]   --->   Operation 44 'select' 'select_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_50)   --->   "%xor_ln65 = xor i8 %xor_ln50_78, i8 %select_ln65" [AES_encrypt.cpp:65]   --->   Operation 45 'xor' 'xor_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln65_50 = xor i8 %xor_ln65, i8 %shl_ln75_108" [AES_encrypt.cpp:65]   --->   Operation 46 'xor' 'xor_ln65_50' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 47 [1/1] (0.99ns)   --->   "%xor_ln50_80 = xor i8 %p_read522, i8 %p_read421" [AES_encrypt.cpp:50]   --->   Operation 47 'xor' 'xor_ln50_80' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 48 [1/1] (0.99ns)   --->   "%xor_ln50_81 = xor i8 %xor_ln50_80, i8 %p_read623" [AES_encrypt.cpp:50]   --->   Operation 48 'xor' 'xor_ln50_81' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 49 [1/1] (0.99ns)   --->   "%xor_ln50_82 = xor i8 %xor_ln50_81, i8 %p_read724" [AES_encrypt.cpp:50]   --->   Operation 49 'xor' 'xor_ln50_82' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_82)   --->   "%shl_ln75_109 = shl i8 %xor_ln50_80, i8 1" [AES_common.cpp:75]   --->   Operation 50 'shl' 'shl_ln75_109' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_82)   --->   "%tmp_109 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln50_80, i32 7" [AES_common.cpp:75]   --->   Operation 51 'bitselect' 'tmp_109' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_82)   --->   "%select_ln53_22 = select i1 %tmp_109, i8 27, i8 0" [AES_encrypt.cpp:53]   --->   Operation 52 'select' 'select_ln53_22' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_82)   --->   "%xor_ln53_80 = xor i8 %shl_ln75_109, i8 %p_read421" [AES_encrypt.cpp:53]   --->   Operation 53 'xor' 'xor_ln53_80' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_82)   --->   "%xor_ln53_81 = xor i8 %select_ln53_22, i8 %xor_ln50_82" [AES_encrypt.cpp:53]   --->   Operation 54 'xor' 'xor_ln53_81' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 55 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln53_82 = xor i8 %xor_ln53_81, i8 %xor_ln53_80" [AES_encrypt.cpp:53]   --->   Operation 55 'xor' 'xor_ln53_82' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 56 [1/1] (0.99ns)   --->   "%xor_ln55_22 = xor i8 %p_read623, i8 %p_read522" [AES_encrypt.cpp:55]   --->   Operation 56 'xor' 'xor_ln55_22' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_82)   --->   "%shl_ln75_110 = shl i8 %xor_ln55_22, i8 1" [AES_common.cpp:75]   --->   Operation 57 'shl' 'shl_ln75_110' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_82)   --->   "%tmp_110 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln55_22, i32 7" [AES_common.cpp:75]   --->   Operation 58 'bitselect' 'tmp_110' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_82)   --->   "%select_ln57_22 = select i1 %tmp_110, i8 27, i8 0" [AES_encrypt.cpp:57]   --->   Operation 59 'select' 'select_ln57_22' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_82)   --->   "%xor_ln57_80 = xor i8 %shl_ln75_110, i8 %p_read522" [AES_encrypt.cpp:57]   --->   Operation 60 'xor' 'xor_ln57_80' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_82)   --->   "%xor_ln57_81 = xor i8 %select_ln57_22, i8 %xor_ln50_82" [AES_encrypt.cpp:57]   --->   Operation 61 'xor' 'xor_ln57_81' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 62 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln57_82 = xor i8 %xor_ln57_81, i8 %xor_ln57_80" [AES_encrypt.cpp:57]   --->   Operation 62 'xor' 'xor_ln57_82' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 63 [1/1] (0.99ns)   --->   "%xor_ln59_22 = xor i8 %p_read724, i8 %p_read623" [AES_encrypt.cpp:59]   --->   Operation 63 'xor' 'xor_ln59_22' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_82)   --->   "%shl_ln75_111 = shl i8 %xor_ln59_22, i8 1" [AES_common.cpp:75]   --->   Operation 64 'shl' 'shl_ln75_111' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_82)   --->   "%tmp_111 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln59_22, i32 7" [AES_common.cpp:75]   --->   Operation 65 'bitselect' 'tmp_111' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_82)   --->   "%select_ln61_22 = select i1 %tmp_111, i8 27, i8 0" [AES_encrypt.cpp:61]   --->   Operation 66 'select' 'select_ln61_22' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_82)   --->   "%xor_ln61_80 = xor i8 %xor_ln50_80, i8 %p_read724" [AES_encrypt.cpp:61]   --->   Operation 67 'xor' 'xor_ln61_80' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_82)   --->   "%xor_ln61_81 = xor i8 %shl_ln75_111, i8 %select_ln61_22" [AES_encrypt.cpp:61]   --->   Operation 68 'xor' 'xor_ln61_81' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 69 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln61_82 = xor i8 %xor_ln61_81, i8 %xor_ln61_80" [AES_encrypt.cpp:61]   --->   Operation 69 'xor' 'xor_ln61_82' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 70 [1/1] (0.99ns)   --->   "%xor_ln63_22 = xor i8 %p_read724, i8 %p_read421" [AES_encrypt.cpp:63]   --->   Operation 70 'xor' 'xor_ln63_22' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_52)   --->   "%shl_ln75_112 = shl i8 %xor_ln63_22, i8 1" [AES_common.cpp:75]   --->   Operation 71 'shl' 'shl_ln75_112' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_52)   --->   "%tmp_112 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln63_22, i32 7" [AES_common.cpp:75]   --->   Operation 72 'bitselect' 'tmp_112' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_52)   --->   "%select_ln65_22 = select i1 %tmp_112, i8 27, i8 0" [AES_encrypt.cpp:65]   --->   Operation 73 'select' 'select_ln65_22' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_52)   --->   "%xor_ln65_51 = xor i8 %xor_ln50_81, i8 %select_ln65_22" [AES_encrypt.cpp:65]   --->   Operation 74 'xor' 'xor_ln65_51' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 75 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln65_52 = xor i8 %xor_ln65_51, i8 %shl_ln75_112" [AES_encrypt.cpp:65]   --->   Operation 75 'xor' 'xor_ln65_52' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 76 [1/1] (0.99ns)   --->   "%xor_ln50_83 = xor i8 %p_read926, i8 %p_read825" [AES_encrypt.cpp:50]   --->   Operation 76 'xor' 'xor_ln50_83' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 77 [1/1] (0.99ns)   --->   "%xor_ln50_84 = xor i8 %xor_ln50_83, i8 %p_read1027" [AES_encrypt.cpp:50]   --->   Operation 77 'xor' 'xor_ln50_84' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 78 [1/1] (0.99ns)   --->   "%xor_ln50_85 = xor i8 %xor_ln50_84, i8 %p_read1128" [AES_encrypt.cpp:50]   --->   Operation 78 'xor' 'xor_ln50_85' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_85)   --->   "%shl_ln75_113 = shl i8 %xor_ln50_83, i8 1" [AES_common.cpp:75]   --->   Operation 79 'shl' 'shl_ln75_113' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_85)   --->   "%tmp_113 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln50_83, i32 7" [AES_common.cpp:75]   --->   Operation 80 'bitselect' 'tmp_113' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_85)   --->   "%select_ln53_23 = select i1 %tmp_113, i8 27, i8 0" [AES_encrypt.cpp:53]   --->   Operation 81 'select' 'select_ln53_23' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_85)   --->   "%xor_ln53_83 = xor i8 %shl_ln75_113, i8 %p_read825" [AES_encrypt.cpp:53]   --->   Operation 82 'xor' 'xor_ln53_83' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_85)   --->   "%xor_ln53_84 = xor i8 %select_ln53_23, i8 %xor_ln50_85" [AES_encrypt.cpp:53]   --->   Operation 83 'xor' 'xor_ln53_84' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 84 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln53_85 = xor i8 %xor_ln53_84, i8 %xor_ln53_83" [AES_encrypt.cpp:53]   --->   Operation 84 'xor' 'xor_ln53_85' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 85 [1/1] (0.99ns)   --->   "%xor_ln55_23 = xor i8 %p_read1027, i8 %p_read926" [AES_encrypt.cpp:55]   --->   Operation 85 'xor' 'xor_ln55_23' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 86 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_85)   --->   "%shl_ln75_114 = shl i8 %xor_ln55_23, i8 1" [AES_common.cpp:75]   --->   Operation 86 'shl' 'shl_ln75_114' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_85)   --->   "%tmp_114 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln55_23, i32 7" [AES_common.cpp:75]   --->   Operation 87 'bitselect' 'tmp_114' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 88 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_85)   --->   "%select_ln57_23 = select i1 %tmp_114, i8 27, i8 0" [AES_encrypt.cpp:57]   --->   Operation 88 'select' 'select_ln57_23' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_85)   --->   "%xor_ln57_83 = xor i8 %shl_ln75_114, i8 %p_read926" [AES_encrypt.cpp:57]   --->   Operation 89 'xor' 'xor_ln57_83' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_85)   --->   "%xor_ln57_84 = xor i8 %select_ln57_23, i8 %xor_ln50_85" [AES_encrypt.cpp:57]   --->   Operation 90 'xor' 'xor_ln57_84' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 91 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln57_85 = xor i8 %xor_ln57_84, i8 %xor_ln57_83" [AES_encrypt.cpp:57]   --->   Operation 91 'xor' 'xor_ln57_85' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 92 [1/1] (0.99ns)   --->   "%xor_ln59_23 = xor i8 %p_read1128, i8 %p_read1027" [AES_encrypt.cpp:59]   --->   Operation 92 'xor' 'xor_ln59_23' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_85)   --->   "%shl_ln75_115 = shl i8 %xor_ln59_23, i8 1" [AES_common.cpp:75]   --->   Operation 93 'shl' 'shl_ln75_115' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 94 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_85)   --->   "%tmp_115 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln59_23, i32 7" [AES_common.cpp:75]   --->   Operation 94 'bitselect' 'tmp_115' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_85)   --->   "%select_ln61_23 = select i1 %tmp_115, i8 27, i8 0" [AES_encrypt.cpp:61]   --->   Operation 95 'select' 'select_ln61_23' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 96 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_85)   --->   "%xor_ln61_83 = xor i8 %xor_ln50_83, i8 %p_read1128" [AES_encrypt.cpp:61]   --->   Operation 96 'xor' 'xor_ln61_83' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 97 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_85)   --->   "%xor_ln61_84 = xor i8 %shl_ln75_115, i8 %select_ln61_23" [AES_encrypt.cpp:61]   --->   Operation 97 'xor' 'xor_ln61_84' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 98 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln61_85 = xor i8 %xor_ln61_84, i8 %xor_ln61_83" [AES_encrypt.cpp:61]   --->   Operation 98 'xor' 'xor_ln61_85' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 99 [1/1] (0.99ns)   --->   "%xor_ln63_23 = xor i8 %p_read1128, i8 %p_read825" [AES_encrypt.cpp:63]   --->   Operation 99 'xor' 'xor_ln63_23' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_54)   --->   "%shl_ln75_116 = shl i8 %xor_ln63_23, i8 1" [AES_common.cpp:75]   --->   Operation 100 'shl' 'shl_ln75_116' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_54)   --->   "%tmp_116 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln63_23, i32 7" [AES_common.cpp:75]   --->   Operation 101 'bitselect' 'tmp_116' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 102 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_54)   --->   "%select_ln65_23 = select i1 %tmp_116, i8 27, i8 0" [AES_encrypt.cpp:65]   --->   Operation 102 'select' 'select_ln65_23' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 103 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_54)   --->   "%xor_ln65_53 = xor i8 %xor_ln50_84, i8 %select_ln65_23" [AES_encrypt.cpp:65]   --->   Operation 103 'xor' 'xor_ln65_53' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 104 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln65_54 = xor i8 %xor_ln65_53, i8 %shl_ln75_116" [AES_encrypt.cpp:65]   --->   Operation 104 'xor' 'xor_ln65_54' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 105 [1/1] (0.99ns)   --->   "%xor_ln50_86 = xor i8 %p_read_179, i8 %p_read_180" [AES_encrypt.cpp:50]   --->   Operation 105 'xor' 'xor_ln50_86' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 106 [1/1] (0.99ns)   --->   "%xor_ln50_87 = xor i8 %xor_ln50_86, i8 %p_read_178" [AES_encrypt.cpp:50]   --->   Operation 106 'xor' 'xor_ln50_87' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 107 [1/1] (0.99ns)   --->   "%xor_ln50_88 = xor i8 %xor_ln50_87, i8 %p_read_177" [AES_encrypt.cpp:50]   --->   Operation 107 'xor' 'xor_ln50_88' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 108 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_88)   --->   "%shl_ln75_117 = shl i8 %xor_ln50_86, i8 1" [AES_common.cpp:75]   --->   Operation 108 'shl' 'shl_ln75_117' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 109 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_88)   --->   "%tmp_117 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln50_86, i32 7" [AES_common.cpp:75]   --->   Operation 109 'bitselect' 'tmp_117' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 110 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_88)   --->   "%select_ln53_24 = select i1 %tmp_117, i8 27, i8 0" [AES_encrypt.cpp:53]   --->   Operation 110 'select' 'select_ln53_24' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 111 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_88)   --->   "%xor_ln53_86 = xor i8 %shl_ln75_117, i8 %p_read_180" [AES_encrypt.cpp:53]   --->   Operation 111 'xor' 'xor_ln53_86' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 112 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_88)   --->   "%xor_ln53_87 = xor i8 %select_ln53_24, i8 %xor_ln50_88" [AES_encrypt.cpp:53]   --->   Operation 112 'xor' 'xor_ln53_87' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 113 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln53_88 = xor i8 %xor_ln53_87, i8 %xor_ln53_86" [AES_encrypt.cpp:53]   --->   Operation 113 'xor' 'xor_ln53_88' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 114 [1/1] (0.99ns)   --->   "%xor_ln55_24 = xor i8 %p_read_178, i8 %p_read_179" [AES_encrypt.cpp:55]   --->   Operation 114 'xor' 'xor_ln55_24' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 115 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_88)   --->   "%shl_ln75_118 = shl i8 %xor_ln55_24, i8 1" [AES_common.cpp:75]   --->   Operation 115 'shl' 'shl_ln75_118' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 116 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_88)   --->   "%tmp_118 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln55_24, i32 7" [AES_common.cpp:75]   --->   Operation 116 'bitselect' 'tmp_118' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_88)   --->   "%select_ln57_24 = select i1 %tmp_118, i8 27, i8 0" [AES_encrypt.cpp:57]   --->   Operation 117 'select' 'select_ln57_24' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_88)   --->   "%xor_ln57_86 = xor i8 %shl_ln75_118, i8 %p_read_179" [AES_encrypt.cpp:57]   --->   Operation 118 'xor' 'xor_ln57_86' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_88)   --->   "%xor_ln57_87 = xor i8 %select_ln57_24, i8 %xor_ln50_88" [AES_encrypt.cpp:57]   --->   Operation 119 'xor' 'xor_ln57_87' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 120 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln57_88 = xor i8 %xor_ln57_87, i8 %xor_ln57_86" [AES_encrypt.cpp:57]   --->   Operation 120 'xor' 'xor_ln57_88' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 121 [1/1] (0.99ns)   --->   "%xor_ln59_24 = xor i8 %p_read_177, i8 %p_read_178" [AES_encrypt.cpp:59]   --->   Operation 121 'xor' 'xor_ln59_24' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 122 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_88)   --->   "%shl_ln75_119 = shl i8 %xor_ln59_24, i8 1" [AES_common.cpp:75]   --->   Operation 122 'shl' 'shl_ln75_119' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 123 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_88)   --->   "%tmp_119 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln59_24, i32 7" [AES_common.cpp:75]   --->   Operation 123 'bitselect' 'tmp_119' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 124 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_88)   --->   "%select_ln61_24 = select i1 %tmp_119, i8 27, i8 0" [AES_encrypt.cpp:61]   --->   Operation 124 'select' 'select_ln61_24' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 125 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_88)   --->   "%xor_ln61_86 = xor i8 %xor_ln50_86, i8 %p_read_177" [AES_encrypt.cpp:61]   --->   Operation 125 'xor' 'xor_ln61_86' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 126 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_88)   --->   "%xor_ln61_87 = xor i8 %shl_ln75_119, i8 %select_ln61_24" [AES_encrypt.cpp:61]   --->   Operation 126 'xor' 'xor_ln61_87' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 127 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln61_88 = xor i8 %xor_ln61_87, i8 %xor_ln61_86" [AES_encrypt.cpp:61]   --->   Operation 127 'xor' 'xor_ln61_88' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 128 [1/1] (0.99ns)   --->   "%xor_ln63_24 = xor i8 %p_read_177, i8 %p_read_180" [AES_encrypt.cpp:63]   --->   Operation 128 'xor' 'xor_ln63_24' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 129 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_56)   --->   "%shl_ln75_120 = shl i8 %xor_ln63_24, i8 1" [AES_common.cpp:75]   --->   Operation 129 'shl' 'shl_ln75_120' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 130 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_56)   --->   "%tmp_120 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln63_24, i32 7" [AES_common.cpp:75]   --->   Operation 130 'bitselect' 'tmp_120' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_56)   --->   "%select_ln65_24 = select i1 %tmp_120, i8 27, i8 0" [AES_encrypt.cpp:65]   --->   Operation 131 'select' 'select_ln65_24' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_56)   --->   "%xor_ln65_55 = xor i8 %xor_ln50_87, i8 %select_ln65_24" [AES_encrypt.cpp:65]   --->   Operation 132 'xor' 'xor_ln65_55' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 133 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln65_56 = xor i8 %xor_ln65_55, i8 %shl_ln75_120" [AES_encrypt.cpp:65]   --->   Operation 133 'xor' 'xor_ln65_56' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 134 [1/1] (0.00ns)   --->   "%mrv = insertvalue i128 <undef>, i8 %xor_ln53_79" [AES_encrypt.cpp:67]   --->   Operation 134 'insertvalue' 'mrv' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 135 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue i128 %mrv, i8 %xor_ln57_79" [AES_encrypt.cpp:67]   --->   Operation 135 'insertvalue' 'mrv_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 136 [1/1] (0.00ns)   --->   "%mrv_2 = insertvalue i128 %mrv_1, i8 %xor_ln61_79" [AES_encrypt.cpp:67]   --->   Operation 136 'insertvalue' 'mrv_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 137 [1/1] (0.00ns)   --->   "%mrv_3 = insertvalue i128 %mrv_2, i8 %xor_ln65_50" [AES_encrypt.cpp:67]   --->   Operation 137 'insertvalue' 'mrv_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 138 [1/1] (0.00ns)   --->   "%mrv_4 = insertvalue i128 %mrv_3, i8 %xor_ln53_82" [AES_encrypt.cpp:67]   --->   Operation 138 'insertvalue' 'mrv_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 139 [1/1] (0.00ns)   --->   "%mrv_5 = insertvalue i128 %mrv_4, i8 %xor_ln57_82" [AES_encrypt.cpp:67]   --->   Operation 139 'insertvalue' 'mrv_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 140 [1/1] (0.00ns)   --->   "%mrv_6 = insertvalue i128 %mrv_5, i8 %xor_ln61_82" [AES_encrypt.cpp:67]   --->   Operation 140 'insertvalue' 'mrv_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 141 [1/1] (0.00ns)   --->   "%mrv_7 = insertvalue i128 %mrv_6, i8 %xor_ln65_52" [AES_encrypt.cpp:67]   --->   Operation 141 'insertvalue' 'mrv_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 142 [1/1] (0.00ns)   --->   "%mrv_8 = insertvalue i128 %mrv_7, i8 %xor_ln53_85" [AES_encrypt.cpp:67]   --->   Operation 142 'insertvalue' 'mrv_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 143 [1/1] (0.00ns)   --->   "%mrv_9 = insertvalue i128 %mrv_8, i8 %xor_ln57_85" [AES_encrypt.cpp:67]   --->   Operation 143 'insertvalue' 'mrv_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 144 [1/1] (0.00ns)   --->   "%mrv_10 = insertvalue i128 %mrv_9, i8 %xor_ln61_85" [AES_encrypt.cpp:67]   --->   Operation 144 'insertvalue' 'mrv_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 145 [1/1] (0.00ns)   --->   "%mrv_11 = insertvalue i128 %mrv_10, i8 %xor_ln65_54" [AES_encrypt.cpp:67]   --->   Operation 145 'insertvalue' 'mrv_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 146 [1/1] (0.00ns)   --->   "%mrv_12 = insertvalue i128 %mrv_11, i8 %xor_ln53_88" [AES_encrypt.cpp:67]   --->   Operation 146 'insertvalue' 'mrv_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 147 [1/1] (0.00ns)   --->   "%mrv_13 = insertvalue i128 %mrv_12, i8 %xor_ln57_88" [AES_encrypt.cpp:67]   --->   Operation 147 'insertvalue' 'mrv_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 148 [1/1] (0.00ns)   --->   "%mrv_14 = insertvalue i128 %mrv_13, i8 %xor_ln61_88" [AES_encrypt.cpp:67]   --->   Operation 148 'insertvalue' 'mrv_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 149 [1/1] (0.00ns)   --->   "%mrv_s = insertvalue i128 %mrv_14, i8 %xor_ln65_56" [AES_encrypt.cpp:67]   --->   Operation 149 'insertvalue' 'mrv_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 150 [1/1] (0.00ns)   --->   "%ret_ln67 = ret i128 %mrv_s" [AES_encrypt.cpp:67]   --->   Operation 150 'ret' 'ret_ln67' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 4.16ns
The critical path consists of the following:
	wire read on port 'p_read1' (AES_encrypt.cpp:45) [31]  (0 ns)
	'xor' operation ('xor_ln50', AES_encrypt.cpp:50) [33]  (0.99 ns)
	'xor' operation ('xor_ln50_78', AES_encrypt.cpp:50) [34]  (0.99 ns)
	'xor' operation ('xor_ln50_79', AES_encrypt.cpp:50) [35]  (0.99 ns)
	'xor' operation ('xor_ln53_78', AES_encrypt.cpp:53) [40]  (0 ns)
	'xor' operation ('out[0]', AES_encrypt.cpp:53) [41]  (1.19 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
