

================================================================
== Vitis HLS Report for 'Cipher_Block_split1657_proc'
================================================================
* Date:           Wed Dec 29 21:50:05 2021

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:45 MST 2020)
* Project:        aes
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|      0 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        0|        0|      0 ns|      0 ns|    0|    0|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.00>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%p_read_201 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read15" [AES.cpp:208]   --->   Operation 2 'read' 'p_read_201' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%p_read_202 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read14" [AES.cpp:208]   --->   Operation 3 'read' 'p_read_202' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%p_read_203 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read13" [AES.cpp:208]   --->   Operation 4 'read' 'p_read_203' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%p_read_204 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read12" [AES.cpp:208]   --->   Operation 5 'read' 'p_read_204' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%p_read1127 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read11" [AES.cpp:208]   --->   Operation 6 'read' 'p_read1127' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%p_read1026 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read10" [AES.cpp:208]   --->   Operation 7 'read' 'p_read1026' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%p_read925 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read9" [AES.cpp:208]   --->   Operation 8 'read' 'p_read925' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%p_read824 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read8" [AES.cpp:208]   --->   Operation 9 'read' 'p_read824' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%p_read723 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read7" [AES.cpp:208]   --->   Operation 10 'read' 'p_read723' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%p_read622 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read6" [AES.cpp:208]   --->   Operation 11 'read' 'p_read622' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%p_read521 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read5" [AES.cpp:208]   --->   Operation 12 'read' 'p_read521' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%p_read420 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read4" [AES.cpp:208]   --->   Operation 13 'read' 'p_read420' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%p_read319 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read3" [AES.cpp:208]   --->   Operation 14 'read' 'p_read319' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%p_read218 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read2" [AES.cpp:208]   --->   Operation 15 'read' 'p_read218' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%p_read117 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read1" [AES.cpp:208]   --->   Operation 16 'read' 'p_read117' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%p_read16 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read" [AES.cpp:208]   --->   Operation 17 'read' 'p_read16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%write_ln208 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %out_r, i8 %p_read16" [AES.cpp:208]   --->   Operation 18 'write' 'write_ln208' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%write_ln208 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %out16, i8 %p_read117" [AES.cpp:208]   --->   Operation 19 'write' 'write_ln208' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%write_ln208 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %out17, i8 %p_read218" [AES.cpp:208]   --->   Operation 20 'write' 'write_ln208' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%write_ln208 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %out18, i8 %p_read319" [AES.cpp:208]   --->   Operation 21 'write' 'write_ln208' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%write_ln208 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %out19, i8 %p_read420" [AES.cpp:208]   --->   Operation 22 'write' 'write_ln208' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%write_ln208 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %out20, i8 %p_read521" [AES.cpp:208]   --->   Operation 23 'write' 'write_ln208' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%write_ln208 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %out21, i8 %p_read622" [AES.cpp:208]   --->   Operation 24 'write' 'write_ln208' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%write_ln208 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %out22, i8 %p_read723" [AES.cpp:208]   --->   Operation 25 'write' 'write_ln208' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%write_ln208 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %out23, i8 %p_read824" [AES.cpp:208]   --->   Operation 26 'write' 'write_ln208' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%write_ln208 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %out24, i8 %p_read925" [AES.cpp:208]   --->   Operation 27 'write' 'write_ln208' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%write_ln208 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %out25, i8 %p_read1026" [AES.cpp:208]   --->   Operation 28 'write' 'write_ln208' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%write_ln208 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %out26, i8 %p_read1127" [AES.cpp:208]   --->   Operation 29 'write' 'write_ln208' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%write_ln208 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %out27, i8 %p_read_204" [AES.cpp:208]   --->   Operation 30 'write' 'write_ln208' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%write_ln208 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %out28, i8 %p_read_203" [AES.cpp:208]   --->   Operation 31 'write' 'write_ln208' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%write_ln208 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %out29, i8 %p_read_202" [AES.cpp:208]   --->   Operation 32 'write' 'write_ln208' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%write_ln208 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %out30, i8 %p_read_201" [AES.cpp:208]   --->   Operation 33 'write' 'write_ln208' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 34 'ret' 'ret_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
