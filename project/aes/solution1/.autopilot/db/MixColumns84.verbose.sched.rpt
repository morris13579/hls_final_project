

================================================================
== Vitis HLS Report for 'MixColumns84'
================================================================
* Date:           Thu Dec 30 15:46:34 2021

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:45 MST 2020)
* Project:        aes
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  4.158 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        0|        0|      0 ns|      0 ns|    0|    0|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.15>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%p_read_153 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read15" [AES_encrypt.cpp:45]   --->   Operation 2 'read' 'p_read_153' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%p_read_154 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read14" [AES_encrypt.cpp:45]   --->   Operation 3 'read' 'p_read_154' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%p_read_155 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read13" [AES_encrypt.cpp:45]   --->   Operation 4 'read' 'p_read_155' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%p_read_156 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read12" [AES_encrypt.cpp:45]   --->   Operation 5 'read' 'p_read_156' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%p_read1128 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read11" [AES_encrypt.cpp:45]   --->   Operation 6 'read' 'p_read1128' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%p_read1027 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read10" [AES_encrypt.cpp:45]   --->   Operation 7 'read' 'p_read1027' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%p_read926 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read9" [AES_encrypt.cpp:45]   --->   Operation 8 'read' 'p_read926' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%p_read825 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read8" [AES_encrypt.cpp:45]   --->   Operation 9 'read' 'p_read825' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%p_read724 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read7" [AES_encrypt.cpp:45]   --->   Operation 10 'read' 'p_read724' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%p_read623 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read6" [AES_encrypt.cpp:45]   --->   Operation 11 'read' 'p_read623' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%p_read522 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read5" [AES_encrypt.cpp:45]   --->   Operation 12 'read' 'p_read522' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%p_read421 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read4" [AES_encrypt.cpp:45]   --->   Operation 13 'read' 'p_read421' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%p_read320 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read3" [AES_encrypt.cpp:45]   --->   Operation 14 'read' 'p_read320' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%p_read219 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read2" [AES_encrypt.cpp:45]   --->   Operation 15 'read' 'p_read219' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%p_read118 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read1" [AES_encrypt.cpp:45]   --->   Operation 16 'read' 'p_read118' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%p_read17 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read" [AES_encrypt.cpp:45]   --->   Operation 17 'read' 'p_read17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.99ns)   --->   "%xor_ln50 = xor i8 %p_read118, i8 %p_read17" [AES_encrypt.cpp:50]   --->   Operation 18 'xor' 'xor_ln50' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.99ns)   --->   "%xor_ln50_12 = xor i8 %xor_ln50, i8 %p_read219" [AES_encrypt.cpp:50]   --->   Operation 19 'xor' 'xor_ln50_12' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.99ns)   --->   "%xor_ln50_13 = xor i8 %xor_ln50_12, i8 %p_read320" [AES_encrypt.cpp:50]   --->   Operation 20 'xor' 'xor_ln50_13' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_13)   --->   "%shl_ln75 = shl i8 %xor_ln50, i8 1" [AES_common.cpp:75]   --->   Operation 21 'shl' 'shl_ln75' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_13)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln50, i32 7" [AES_common.cpp:75]   --->   Operation 22 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_13)   --->   "%select_ln53 = select i1 %tmp, i8 27, i8 0" [AES_encrypt.cpp:53]   --->   Operation 23 'select' 'select_ln53' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_13)   --->   "%xor_ln53 = xor i8 %shl_ln75, i8 %p_read17" [AES_encrypt.cpp:53]   --->   Operation 24 'xor' 'xor_ln53' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_13)   --->   "%xor_ln53_12 = xor i8 %select_ln53, i8 %xor_ln50_13" [AES_encrypt.cpp:53]   --->   Operation 25 'xor' 'xor_ln53_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln53_13 = xor i8 %xor_ln53_12, i8 %xor_ln53" [AES_encrypt.cpp:53]   --->   Operation 26 'xor' 'xor_ln53_13' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.99ns)   --->   "%xor_ln55 = xor i8 %p_read219, i8 %p_read118" [AES_encrypt.cpp:55]   --->   Operation 27 'xor' 'xor_ln55' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_13)   --->   "%shl_ln75_16 = shl i8 %xor_ln55, i8 1" [AES_common.cpp:75]   --->   Operation 28 'shl' 'shl_ln75_16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_13)   --->   "%tmp_16 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln55, i32 7" [AES_common.cpp:75]   --->   Operation 29 'bitselect' 'tmp_16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_13)   --->   "%select_ln57 = select i1 %tmp_16, i8 27, i8 0" [AES_encrypt.cpp:57]   --->   Operation 30 'select' 'select_ln57' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_13)   --->   "%xor_ln57 = xor i8 %shl_ln75_16, i8 %p_read118" [AES_encrypt.cpp:57]   --->   Operation 31 'xor' 'xor_ln57' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_13)   --->   "%xor_ln57_12 = xor i8 %select_ln57, i8 %xor_ln50_13" [AES_encrypt.cpp:57]   --->   Operation 32 'xor' 'xor_ln57_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln57_13 = xor i8 %xor_ln57_12, i8 %xor_ln57" [AES_encrypt.cpp:57]   --->   Operation 33 'xor' 'xor_ln57_13' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.99ns)   --->   "%xor_ln59 = xor i8 %p_read320, i8 %p_read219" [AES_encrypt.cpp:59]   --->   Operation 34 'xor' 'xor_ln59' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_13)   --->   "%shl_ln75_17 = shl i8 %xor_ln59, i8 1" [AES_common.cpp:75]   --->   Operation 35 'shl' 'shl_ln75_17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_13)   --->   "%tmp_17 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln59, i32 7" [AES_common.cpp:75]   --->   Operation 36 'bitselect' 'tmp_17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_13)   --->   "%select_ln61 = select i1 %tmp_17, i8 27, i8 0" [AES_encrypt.cpp:61]   --->   Operation 37 'select' 'select_ln61' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_13)   --->   "%xor_ln61 = xor i8 %xor_ln50, i8 %p_read320" [AES_encrypt.cpp:61]   --->   Operation 38 'xor' 'xor_ln61' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_13)   --->   "%xor_ln61_12 = xor i8 %shl_ln75_17, i8 %select_ln61" [AES_encrypt.cpp:61]   --->   Operation 39 'xor' 'xor_ln61_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln61_13 = xor i8 %xor_ln61_12, i8 %xor_ln61" [AES_encrypt.cpp:61]   --->   Operation 40 'xor' 'xor_ln61_13' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (0.99ns)   --->   "%xor_ln63 = xor i8 %p_read320, i8 %p_read17" [AES_encrypt.cpp:63]   --->   Operation 41 'xor' 'xor_ln63' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_8)   --->   "%shl_ln75_18 = shl i8 %xor_ln63, i8 1" [AES_common.cpp:75]   --->   Operation 42 'shl' 'shl_ln75_18' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_8)   --->   "%tmp_18 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln63, i32 7" [AES_common.cpp:75]   --->   Operation 43 'bitselect' 'tmp_18' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_8)   --->   "%select_ln65 = select i1 %tmp_18, i8 27, i8 0" [AES_encrypt.cpp:65]   --->   Operation 44 'select' 'select_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_8)   --->   "%xor_ln65 = xor i8 %xor_ln50_12, i8 %select_ln65" [AES_encrypt.cpp:65]   --->   Operation 45 'xor' 'xor_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln65_8 = xor i8 %xor_ln65, i8 %shl_ln75_18" [AES_encrypt.cpp:65]   --->   Operation 46 'xor' 'xor_ln65_8' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 47 [1/1] (0.99ns)   --->   "%xor_ln50_14 = xor i8 %p_read522, i8 %p_read421" [AES_encrypt.cpp:50]   --->   Operation 47 'xor' 'xor_ln50_14' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 48 [1/1] (0.99ns)   --->   "%xor_ln50_15 = xor i8 %xor_ln50_14, i8 %p_read623" [AES_encrypt.cpp:50]   --->   Operation 48 'xor' 'xor_ln50_15' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 49 [1/1] (0.99ns)   --->   "%xor_ln50_16 = xor i8 %xor_ln50_15, i8 %p_read724" [AES_encrypt.cpp:50]   --->   Operation 49 'xor' 'xor_ln50_16' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_16)   --->   "%shl_ln75_19 = shl i8 %xor_ln50_14, i8 1" [AES_common.cpp:75]   --->   Operation 50 'shl' 'shl_ln75_19' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_16)   --->   "%tmp_19 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln50_14, i32 7" [AES_common.cpp:75]   --->   Operation 51 'bitselect' 'tmp_19' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_16)   --->   "%select_ln53_4 = select i1 %tmp_19, i8 27, i8 0" [AES_encrypt.cpp:53]   --->   Operation 52 'select' 'select_ln53_4' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_16)   --->   "%xor_ln53_14 = xor i8 %shl_ln75_19, i8 %p_read421" [AES_encrypt.cpp:53]   --->   Operation 53 'xor' 'xor_ln53_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_16)   --->   "%xor_ln53_15 = xor i8 %select_ln53_4, i8 %xor_ln50_16" [AES_encrypt.cpp:53]   --->   Operation 54 'xor' 'xor_ln53_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 55 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln53_16 = xor i8 %xor_ln53_15, i8 %xor_ln53_14" [AES_encrypt.cpp:53]   --->   Operation 55 'xor' 'xor_ln53_16' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 56 [1/1] (0.99ns)   --->   "%xor_ln55_4 = xor i8 %p_read623, i8 %p_read522" [AES_encrypt.cpp:55]   --->   Operation 56 'xor' 'xor_ln55_4' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_16)   --->   "%shl_ln75_20 = shl i8 %xor_ln55_4, i8 1" [AES_common.cpp:75]   --->   Operation 57 'shl' 'shl_ln75_20' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_16)   --->   "%tmp_20 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln55_4, i32 7" [AES_common.cpp:75]   --->   Operation 58 'bitselect' 'tmp_20' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_16)   --->   "%select_ln57_4 = select i1 %tmp_20, i8 27, i8 0" [AES_encrypt.cpp:57]   --->   Operation 59 'select' 'select_ln57_4' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_16)   --->   "%xor_ln57_14 = xor i8 %shl_ln75_20, i8 %p_read522" [AES_encrypt.cpp:57]   --->   Operation 60 'xor' 'xor_ln57_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_16)   --->   "%xor_ln57_15 = xor i8 %select_ln57_4, i8 %xor_ln50_16" [AES_encrypt.cpp:57]   --->   Operation 61 'xor' 'xor_ln57_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 62 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln57_16 = xor i8 %xor_ln57_15, i8 %xor_ln57_14" [AES_encrypt.cpp:57]   --->   Operation 62 'xor' 'xor_ln57_16' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 63 [1/1] (0.99ns)   --->   "%xor_ln59_4 = xor i8 %p_read724, i8 %p_read623" [AES_encrypt.cpp:59]   --->   Operation 63 'xor' 'xor_ln59_4' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_16)   --->   "%shl_ln75_21 = shl i8 %xor_ln59_4, i8 1" [AES_common.cpp:75]   --->   Operation 64 'shl' 'shl_ln75_21' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_16)   --->   "%tmp_21 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln59_4, i32 7" [AES_common.cpp:75]   --->   Operation 65 'bitselect' 'tmp_21' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_16)   --->   "%select_ln61_4 = select i1 %tmp_21, i8 27, i8 0" [AES_encrypt.cpp:61]   --->   Operation 66 'select' 'select_ln61_4' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_16)   --->   "%xor_ln61_14 = xor i8 %xor_ln50_14, i8 %p_read724" [AES_encrypt.cpp:61]   --->   Operation 67 'xor' 'xor_ln61_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_16)   --->   "%xor_ln61_15 = xor i8 %shl_ln75_21, i8 %select_ln61_4" [AES_encrypt.cpp:61]   --->   Operation 68 'xor' 'xor_ln61_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 69 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln61_16 = xor i8 %xor_ln61_15, i8 %xor_ln61_14" [AES_encrypt.cpp:61]   --->   Operation 69 'xor' 'xor_ln61_16' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 70 [1/1] (0.99ns)   --->   "%xor_ln63_4 = xor i8 %p_read724, i8 %p_read421" [AES_encrypt.cpp:63]   --->   Operation 70 'xor' 'xor_ln63_4' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_10)   --->   "%shl_ln75_22 = shl i8 %xor_ln63_4, i8 1" [AES_common.cpp:75]   --->   Operation 71 'shl' 'shl_ln75_22' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_10)   --->   "%tmp_22 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln63_4, i32 7" [AES_common.cpp:75]   --->   Operation 72 'bitselect' 'tmp_22' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_10)   --->   "%select_ln65_4 = select i1 %tmp_22, i8 27, i8 0" [AES_encrypt.cpp:65]   --->   Operation 73 'select' 'select_ln65_4' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_10)   --->   "%xor_ln65_9 = xor i8 %xor_ln50_15, i8 %select_ln65_4" [AES_encrypt.cpp:65]   --->   Operation 74 'xor' 'xor_ln65_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 75 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln65_10 = xor i8 %xor_ln65_9, i8 %shl_ln75_22" [AES_encrypt.cpp:65]   --->   Operation 75 'xor' 'xor_ln65_10' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 76 [1/1] (0.99ns)   --->   "%xor_ln50_17 = xor i8 %p_read926, i8 %p_read825" [AES_encrypt.cpp:50]   --->   Operation 76 'xor' 'xor_ln50_17' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 77 [1/1] (0.99ns)   --->   "%xor_ln50_18 = xor i8 %xor_ln50_17, i8 %p_read1027" [AES_encrypt.cpp:50]   --->   Operation 77 'xor' 'xor_ln50_18' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 78 [1/1] (0.99ns)   --->   "%xor_ln50_19 = xor i8 %xor_ln50_18, i8 %p_read1128" [AES_encrypt.cpp:50]   --->   Operation 78 'xor' 'xor_ln50_19' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_19)   --->   "%shl_ln75_23 = shl i8 %xor_ln50_17, i8 1" [AES_common.cpp:75]   --->   Operation 79 'shl' 'shl_ln75_23' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_19)   --->   "%tmp_23 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln50_17, i32 7" [AES_common.cpp:75]   --->   Operation 80 'bitselect' 'tmp_23' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_19)   --->   "%select_ln53_5 = select i1 %tmp_23, i8 27, i8 0" [AES_encrypt.cpp:53]   --->   Operation 81 'select' 'select_ln53_5' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_19)   --->   "%xor_ln53_17 = xor i8 %shl_ln75_23, i8 %p_read825" [AES_encrypt.cpp:53]   --->   Operation 82 'xor' 'xor_ln53_17' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_19)   --->   "%xor_ln53_18 = xor i8 %select_ln53_5, i8 %xor_ln50_19" [AES_encrypt.cpp:53]   --->   Operation 83 'xor' 'xor_ln53_18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 84 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln53_19 = xor i8 %xor_ln53_18, i8 %xor_ln53_17" [AES_encrypt.cpp:53]   --->   Operation 84 'xor' 'xor_ln53_19' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 85 [1/1] (0.99ns)   --->   "%xor_ln55_5 = xor i8 %p_read1027, i8 %p_read926" [AES_encrypt.cpp:55]   --->   Operation 85 'xor' 'xor_ln55_5' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 86 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_19)   --->   "%shl_ln75_24 = shl i8 %xor_ln55_5, i8 1" [AES_common.cpp:75]   --->   Operation 86 'shl' 'shl_ln75_24' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_19)   --->   "%tmp_24 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln55_5, i32 7" [AES_common.cpp:75]   --->   Operation 87 'bitselect' 'tmp_24' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 88 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_19)   --->   "%select_ln57_5 = select i1 %tmp_24, i8 27, i8 0" [AES_encrypt.cpp:57]   --->   Operation 88 'select' 'select_ln57_5' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_19)   --->   "%xor_ln57_17 = xor i8 %shl_ln75_24, i8 %p_read926" [AES_encrypt.cpp:57]   --->   Operation 89 'xor' 'xor_ln57_17' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_19)   --->   "%xor_ln57_18 = xor i8 %select_ln57_5, i8 %xor_ln50_19" [AES_encrypt.cpp:57]   --->   Operation 90 'xor' 'xor_ln57_18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 91 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln57_19 = xor i8 %xor_ln57_18, i8 %xor_ln57_17" [AES_encrypt.cpp:57]   --->   Operation 91 'xor' 'xor_ln57_19' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 92 [1/1] (0.99ns)   --->   "%xor_ln59_5 = xor i8 %p_read1128, i8 %p_read1027" [AES_encrypt.cpp:59]   --->   Operation 92 'xor' 'xor_ln59_5' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_19)   --->   "%shl_ln75_25 = shl i8 %xor_ln59_5, i8 1" [AES_common.cpp:75]   --->   Operation 93 'shl' 'shl_ln75_25' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 94 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_19)   --->   "%tmp_25 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln59_5, i32 7" [AES_common.cpp:75]   --->   Operation 94 'bitselect' 'tmp_25' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_19)   --->   "%select_ln61_5 = select i1 %tmp_25, i8 27, i8 0" [AES_encrypt.cpp:61]   --->   Operation 95 'select' 'select_ln61_5' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 96 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_19)   --->   "%xor_ln61_17 = xor i8 %xor_ln50_17, i8 %p_read1128" [AES_encrypt.cpp:61]   --->   Operation 96 'xor' 'xor_ln61_17' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 97 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_19)   --->   "%xor_ln61_18 = xor i8 %shl_ln75_25, i8 %select_ln61_5" [AES_encrypt.cpp:61]   --->   Operation 97 'xor' 'xor_ln61_18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 98 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln61_19 = xor i8 %xor_ln61_18, i8 %xor_ln61_17" [AES_encrypt.cpp:61]   --->   Operation 98 'xor' 'xor_ln61_19' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 99 [1/1] (0.99ns)   --->   "%xor_ln63_5 = xor i8 %p_read1128, i8 %p_read825" [AES_encrypt.cpp:63]   --->   Operation 99 'xor' 'xor_ln63_5' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_12)   --->   "%shl_ln75_26 = shl i8 %xor_ln63_5, i8 1" [AES_common.cpp:75]   --->   Operation 100 'shl' 'shl_ln75_26' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_12)   --->   "%tmp_26 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln63_5, i32 7" [AES_common.cpp:75]   --->   Operation 101 'bitselect' 'tmp_26' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 102 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_12)   --->   "%select_ln65_5 = select i1 %tmp_26, i8 27, i8 0" [AES_encrypt.cpp:65]   --->   Operation 102 'select' 'select_ln65_5' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 103 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_12)   --->   "%xor_ln65_11 = xor i8 %xor_ln50_18, i8 %select_ln65_5" [AES_encrypt.cpp:65]   --->   Operation 103 'xor' 'xor_ln65_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 104 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln65_12 = xor i8 %xor_ln65_11, i8 %shl_ln75_26" [AES_encrypt.cpp:65]   --->   Operation 104 'xor' 'xor_ln65_12' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 105 [1/1] (0.99ns)   --->   "%xor_ln50_20 = xor i8 %p_read_155, i8 %p_read_156" [AES_encrypt.cpp:50]   --->   Operation 105 'xor' 'xor_ln50_20' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 106 [1/1] (0.99ns)   --->   "%xor_ln50_21 = xor i8 %xor_ln50_20, i8 %p_read_154" [AES_encrypt.cpp:50]   --->   Operation 106 'xor' 'xor_ln50_21' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 107 [1/1] (0.99ns)   --->   "%xor_ln50_22 = xor i8 %xor_ln50_21, i8 %p_read_153" [AES_encrypt.cpp:50]   --->   Operation 107 'xor' 'xor_ln50_22' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 108 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_22)   --->   "%shl_ln75_27 = shl i8 %xor_ln50_20, i8 1" [AES_common.cpp:75]   --->   Operation 108 'shl' 'shl_ln75_27' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 109 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_22)   --->   "%tmp_27 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln50_20, i32 7" [AES_common.cpp:75]   --->   Operation 109 'bitselect' 'tmp_27' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 110 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_22)   --->   "%select_ln53_6 = select i1 %tmp_27, i8 27, i8 0" [AES_encrypt.cpp:53]   --->   Operation 110 'select' 'select_ln53_6' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 111 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_22)   --->   "%xor_ln53_20 = xor i8 %shl_ln75_27, i8 %p_read_156" [AES_encrypt.cpp:53]   --->   Operation 111 'xor' 'xor_ln53_20' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 112 [1/1] (0.00ns) (grouped into LUT with out node xor_ln53_22)   --->   "%xor_ln53_21 = xor i8 %select_ln53_6, i8 %xor_ln50_22" [AES_encrypt.cpp:53]   --->   Operation 112 'xor' 'xor_ln53_21' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 113 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln53_22 = xor i8 %xor_ln53_21, i8 %xor_ln53_20" [AES_encrypt.cpp:53]   --->   Operation 113 'xor' 'xor_ln53_22' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 114 [1/1] (0.99ns)   --->   "%xor_ln55_6 = xor i8 %p_read_154, i8 %p_read_155" [AES_encrypt.cpp:55]   --->   Operation 114 'xor' 'xor_ln55_6' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 115 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_22)   --->   "%shl_ln75_28 = shl i8 %xor_ln55_6, i8 1" [AES_common.cpp:75]   --->   Operation 115 'shl' 'shl_ln75_28' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 116 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_22)   --->   "%tmp_28 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln55_6, i32 7" [AES_common.cpp:75]   --->   Operation 116 'bitselect' 'tmp_28' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_22)   --->   "%select_ln57_6 = select i1 %tmp_28, i8 27, i8 0" [AES_encrypt.cpp:57]   --->   Operation 117 'select' 'select_ln57_6' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_22)   --->   "%xor_ln57_20 = xor i8 %shl_ln75_28, i8 %p_read_155" [AES_encrypt.cpp:57]   --->   Operation 118 'xor' 'xor_ln57_20' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_22)   --->   "%xor_ln57_21 = xor i8 %select_ln57_6, i8 %xor_ln50_22" [AES_encrypt.cpp:57]   --->   Operation 119 'xor' 'xor_ln57_21' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 120 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln57_22 = xor i8 %xor_ln57_21, i8 %xor_ln57_20" [AES_encrypt.cpp:57]   --->   Operation 120 'xor' 'xor_ln57_22' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 121 [1/1] (0.99ns)   --->   "%xor_ln59_6 = xor i8 %p_read_153, i8 %p_read_154" [AES_encrypt.cpp:59]   --->   Operation 121 'xor' 'xor_ln59_6' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 122 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_22)   --->   "%shl_ln75_29 = shl i8 %xor_ln59_6, i8 1" [AES_common.cpp:75]   --->   Operation 122 'shl' 'shl_ln75_29' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 123 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_22)   --->   "%tmp_29 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln59_6, i32 7" [AES_common.cpp:75]   --->   Operation 123 'bitselect' 'tmp_29' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 124 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_22)   --->   "%select_ln61_6 = select i1 %tmp_29, i8 27, i8 0" [AES_encrypt.cpp:61]   --->   Operation 124 'select' 'select_ln61_6' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 125 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_22)   --->   "%xor_ln61_20 = xor i8 %xor_ln50_20, i8 %p_read_153" [AES_encrypt.cpp:61]   --->   Operation 125 'xor' 'xor_ln61_20' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 126 [1/1] (0.00ns) (grouped into LUT with out node xor_ln61_22)   --->   "%xor_ln61_21 = xor i8 %shl_ln75_29, i8 %select_ln61_6" [AES_encrypt.cpp:61]   --->   Operation 126 'xor' 'xor_ln61_21' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 127 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln61_22 = xor i8 %xor_ln61_21, i8 %xor_ln61_20" [AES_encrypt.cpp:61]   --->   Operation 127 'xor' 'xor_ln61_22' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 128 [1/1] (0.99ns)   --->   "%xor_ln63_6 = xor i8 %p_read_153, i8 %p_read_156" [AES_encrypt.cpp:63]   --->   Operation 128 'xor' 'xor_ln63_6' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 129 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_14)   --->   "%shl_ln75_30 = shl i8 %xor_ln63_6, i8 1" [AES_common.cpp:75]   --->   Operation 129 'shl' 'shl_ln75_30' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 130 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_14)   --->   "%tmp_30 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln63_6, i32 7" [AES_common.cpp:75]   --->   Operation 130 'bitselect' 'tmp_30' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_14)   --->   "%select_ln65_6 = select i1 %tmp_30, i8 27, i8 0" [AES_encrypt.cpp:65]   --->   Operation 131 'select' 'select_ln65_6' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_14)   --->   "%xor_ln65_13 = xor i8 %xor_ln50_21, i8 %select_ln65_6" [AES_encrypt.cpp:65]   --->   Operation 132 'xor' 'xor_ln65_13' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 133 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln65_14 = xor i8 %xor_ln65_13, i8 %shl_ln75_30" [AES_encrypt.cpp:65]   --->   Operation 133 'xor' 'xor_ln65_14' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 134 [1/1] (0.00ns)   --->   "%mrv = insertvalue i128 <undef>, i8 %xor_ln53_13" [AES_encrypt.cpp:67]   --->   Operation 134 'insertvalue' 'mrv' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 135 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue i128 %mrv, i8 %xor_ln57_13" [AES_encrypt.cpp:67]   --->   Operation 135 'insertvalue' 'mrv_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 136 [1/1] (0.00ns)   --->   "%mrv_2 = insertvalue i128 %mrv_1, i8 %xor_ln61_13" [AES_encrypt.cpp:67]   --->   Operation 136 'insertvalue' 'mrv_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 137 [1/1] (0.00ns)   --->   "%mrv_3 = insertvalue i128 %mrv_2, i8 %xor_ln65_8" [AES_encrypt.cpp:67]   --->   Operation 137 'insertvalue' 'mrv_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 138 [1/1] (0.00ns)   --->   "%mrv_4 = insertvalue i128 %mrv_3, i8 %xor_ln53_16" [AES_encrypt.cpp:67]   --->   Operation 138 'insertvalue' 'mrv_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 139 [1/1] (0.00ns)   --->   "%mrv_5 = insertvalue i128 %mrv_4, i8 %xor_ln57_16" [AES_encrypt.cpp:67]   --->   Operation 139 'insertvalue' 'mrv_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 140 [1/1] (0.00ns)   --->   "%mrv_6 = insertvalue i128 %mrv_5, i8 %xor_ln61_16" [AES_encrypt.cpp:67]   --->   Operation 140 'insertvalue' 'mrv_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 141 [1/1] (0.00ns)   --->   "%mrv_7 = insertvalue i128 %mrv_6, i8 %xor_ln65_10" [AES_encrypt.cpp:67]   --->   Operation 141 'insertvalue' 'mrv_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 142 [1/1] (0.00ns)   --->   "%mrv_8 = insertvalue i128 %mrv_7, i8 %xor_ln53_19" [AES_encrypt.cpp:67]   --->   Operation 142 'insertvalue' 'mrv_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 143 [1/1] (0.00ns)   --->   "%mrv_9 = insertvalue i128 %mrv_8, i8 %xor_ln57_19" [AES_encrypt.cpp:67]   --->   Operation 143 'insertvalue' 'mrv_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 144 [1/1] (0.00ns)   --->   "%mrv_10 = insertvalue i128 %mrv_9, i8 %xor_ln61_19" [AES_encrypt.cpp:67]   --->   Operation 144 'insertvalue' 'mrv_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 145 [1/1] (0.00ns)   --->   "%mrv_11 = insertvalue i128 %mrv_10, i8 %xor_ln65_12" [AES_encrypt.cpp:67]   --->   Operation 145 'insertvalue' 'mrv_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 146 [1/1] (0.00ns)   --->   "%mrv_12 = insertvalue i128 %mrv_11, i8 %xor_ln53_22" [AES_encrypt.cpp:67]   --->   Operation 146 'insertvalue' 'mrv_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 147 [1/1] (0.00ns)   --->   "%mrv_13 = insertvalue i128 %mrv_12, i8 %xor_ln57_22" [AES_encrypt.cpp:67]   --->   Operation 147 'insertvalue' 'mrv_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 148 [1/1] (0.00ns)   --->   "%mrv_14 = insertvalue i128 %mrv_13, i8 %xor_ln61_22" [AES_encrypt.cpp:67]   --->   Operation 148 'insertvalue' 'mrv_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 149 [1/1] (0.00ns)   --->   "%mrv_s = insertvalue i128 %mrv_14, i8 %xor_ln65_14" [AES_encrypt.cpp:67]   --->   Operation 149 'insertvalue' 'mrv_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 150 [1/1] (0.00ns)   --->   "%ret_ln67 = ret i128 %mrv_s" [AES_encrypt.cpp:67]   --->   Operation 150 'ret' 'ret_ln67' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 4.16ns
The critical path consists of the following:
	wire read on port 'p_read1' (AES_encrypt.cpp:45) [31]  (0 ns)
	'xor' operation ('xor_ln50', AES_encrypt.cpp:50) [33]  (0.99 ns)
	'xor' operation ('xor_ln50_12', AES_encrypt.cpp:50) [34]  (0.99 ns)
	'xor' operation ('xor_ln50_13', AES_encrypt.cpp:50) [35]  (0.99 ns)
	'xor' operation ('xor_ln53_12', AES_encrypt.cpp:53) [40]  (0 ns)
	'xor' operation ('out[0]', AES_encrypt.cpp:53) [41]  (1.19 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
