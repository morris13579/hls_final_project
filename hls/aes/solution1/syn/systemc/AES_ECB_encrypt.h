// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _AES_ECB_encrypt_HH_
#define _AES_ECB_encrypt_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Cipher.h"
#include "AES_ECB_encrypt_ibkb.h"
#include "AES_ECB_encrypt_AXILiteS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 8,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct AES_ECB_encrypt : public sc_module {
    // Port declarations 26
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<8> > plain_V_V_TDATA;
    sc_in< sc_logic > plain_V_V_TVALID;
    sc_out< sc_logic > plain_V_V_TREADY;
    sc_out< sc_lv<8> > encrypt_V_V_TDATA;
    sc_out< sc_logic > encrypt_V_V_TVALID;
    sc_in< sc_logic > encrypt_V_V_TREADY;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<8> > ap_var_for_const1;


    // Module declarations
    AES_ECB_encrypt(sc_module_name name);
    SC_HAS_PROCESS(AES_ECB_encrypt);

    ~AES_ECB_encrypt();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    AES_ECB_encrypt_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* AES_ECB_encrypt_AXILiteS_s_axi_U;
    AES_ECB_encrypt_ibkb* in_V_U;
    AES_ECB_encrypt_ibkb* out_U;
    Cipher* grp_Cipher_fu_187;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<8> > plain_V_V_0_data_out;
    sc_signal< sc_logic > plain_V_V_0_vld_in;
    sc_signal< sc_logic > plain_V_V_0_vld_out;
    sc_signal< sc_logic > plain_V_V_0_ack_in;
    sc_signal< sc_logic > plain_V_V_0_ack_out;
    sc_signal< sc_lv<8> > plain_V_V_0_payload_A;
    sc_signal< sc_lv<8> > plain_V_V_0_payload_B;
    sc_signal< sc_logic > plain_V_V_0_sel_rd;
    sc_signal< sc_logic > plain_V_V_0_sel_wr;
    sc_signal< sc_logic > plain_V_V_0_sel;
    sc_signal< sc_logic > plain_V_V_0_load_A;
    sc_signal< sc_logic > plain_V_V_0_load_B;
    sc_signal< sc_lv<2> > plain_V_V_0_state;
    sc_signal< sc_logic > plain_V_V_0_state_cmp_full;
    sc_signal< sc_lv<8> > encrypt_V_V_1_data_out;
    sc_signal< sc_logic > encrypt_V_V_1_vld_in;
    sc_signal< sc_logic > encrypt_V_V_1_vld_out;
    sc_signal< sc_logic > encrypt_V_V_1_ack_in;
    sc_signal< sc_logic > encrypt_V_V_1_ack_out;
    sc_signal< sc_lv<8> > encrypt_V_V_1_payload_A;
    sc_signal< sc_lv<8> > encrypt_V_V_1_payload_B;
    sc_signal< sc_logic > encrypt_V_V_1_sel_rd;
    sc_signal< sc_logic > encrypt_V_V_1_sel_wr;
    sc_signal< sc_logic > encrypt_V_V_1_sel;
    sc_signal< sc_logic > encrypt_V_V_1_load_A;
    sc_signal< sc_logic > encrypt_V_V_1_load_B;
    sc_signal< sc_lv<2> > encrypt_V_V_1_state;
    sc_signal< sc_logic > encrypt_V_V_1_state_cmp_full;
    sc_signal< sc_lv<8> > key_0_V_q0;
    sc_signal< sc_lv<8> > key_1_V_q0;
    sc_signal< sc_lv<8> > key_2_V_q0;
    sc_signal< sc_lv<8> > key_3_V_q0;
    sc_signal< sc_lv<8> > key_4_V_q0;
    sc_signal< sc_lv<8> > key_5_V_q0;
    sc_signal< sc_lv<8> > key_6_V_q0;
    sc_signal< sc_lv<8> > key_7_V_q0;
    sc_signal< sc_lv<8> > key_8_V_q0;
    sc_signal< sc_lv<8> > key_9_V_q0;
    sc_signal< sc_lv<8> > key_10_V_q0;
    sc_signal< sc_lv<32> > len;
    sc_signal< sc_logic > plain_V_V_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > exitcond1_fu_240_p2;
    sc_signal< sc_logic > encrypt_V_V_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > len_read_reg_280;
    sc_signal< sc_lv<5> > j_1_fu_246_p2;
    sc_signal< bool > ap_block_state3;
    sc_signal< sc_lv<5> > j_2_fu_263_p2;
    sc_signal< sc_lv<5> > j_2_reg_299;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > exitcond_fu_257_p2;
    sc_signal< sc_lv<32> > i_1_fu_274_p2;
    sc_signal< sc_lv<8> > out_q0;
    sc_signal< sc_lv<4> > in_V_address0;
    sc_signal< sc_logic > in_V_ce0;
    sc_signal< sc_logic > in_V_we0;
    sc_signal< sc_lv<8> > in_V_q0;
    sc_signal< sc_lv<4> > out_address0;
    sc_signal< sc_logic > out_ce0;
    sc_signal< sc_logic > out_we0;
    sc_signal< sc_lv<4> > grp_Cipher_fu_187_plain_V_address0;
    sc_signal< sc_logic > grp_Cipher_fu_187_plain_V_ce0;
    sc_signal< sc_lv<8> > grp_Cipher_fu_187_plain_V_d0;
    sc_signal< sc_logic > grp_Cipher_fu_187_plain_V_we0;
    sc_signal< sc_lv<4> > grp_Cipher_fu_187_plain_V_address1;
    sc_signal< sc_logic > grp_Cipher_fu_187_plain_V_ce1;
    sc_signal< sc_lv<8> > grp_Cipher_fu_187_plain_V_d1;
    sc_signal< sc_logic > grp_Cipher_fu_187_plain_V_we1;
    sc_signal< sc_lv<4> > grp_Cipher_fu_187_encrypt_V_address0;
    sc_signal< sc_logic > grp_Cipher_fu_187_encrypt_V_ce0;
    sc_signal< sc_lv<8> > grp_Cipher_fu_187_encrypt_V_d0;
    sc_signal< sc_logic > grp_Cipher_fu_187_encrypt_V_we0;
    sc_signal< sc_lv<4> > grp_Cipher_fu_187_encrypt_V_address1;
    sc_signal< sc_logic > grp_Cipher_fu_187_encrypt_V_ce1;
    sc_signal< sc_lv<8> > grp_Cipher_fu_187_encrypt_V_d1;
    sc_signal< sc_logic > grp_Cipher_fu_187_encrypt_V_we1;
    sc_signal< sc_lv<4> > grp_Cipher_fu_187_key_0_V_address0;
    sc_signal< sc_logic > grp_Cipher_fu_187_key_0_V_ce0;
    sc_signal< sc_lv<8> > grp_Cipher_fu_187_key_0_V_d0;
    sc_signal< sc_logic > grp_Cipher_fu_187_key_0_V_we0;
    sc_signal< sc_lv<4> > grp_Cipher_fu_187_key_1_V_address0;
    sc_signal< sc_logic > grp_Cipher_fu_187_key_1_V_ce0;
    sc_signal< sc_lv<8> > grp_Cipher_fu_187_key_1_V_d0;
    sc_signal< sc_logic > grp_Cipher_fu_187_key_1_V_we0;
    sc_signal< sc_lv<4> > grp_Cipher_fu_187_key_2_V_address0;
    sc_signal< sc_logic > grp_Cipher_fu_187_key_2_V_ce0;
    sc_signal< sc_lv<8> > grp_Cipher_fu_187_key_2_V_d0;
    sc_signal< sc_logic > grp_Cipher_fu_187_key_2_V_we0;
    sc_signal< sc_lv<4> > grp_Cipher_fu_187_key_3_V_address0;
    sc_signal< sc_logic > grp_Cipher_fu_187_key_3_V_ce0;
    sc_signal< sc_lv<8> > grp_Cipher_fu_187_key_3_V_d0;
    sc_signal< sc_logic > grp_Cipher_fu_187_key_3_V_we0;
    sc_signal< sc_lv<4> > grp_Cipher_fu_187_key_4_V_address0;
    sc_signal< sc_logic > grp_Cipher_fu_187_key_4_V_ce0;
    sc_signal< sc_lv<8> > grp_Cipher_fu_187_key_4_V_d0;
    sc_signal< sc_logic > grp_Cipher_fu_187_key_4_V_we0;
    sc_signal< sc_lv<4> > grp_Cipher_fu_187_key_5_V_address0;
    sc_signal< sc_logic > grp_Cipher_fu_187_key_5_V_ce0;
    sc_signal< sc_lv<8> > grp_Cipher_fu_187_key_5_V_d0;
    sc_signal< sc_logic > grp_Cipher_fu_187_key_5_V_we0;
    sc_signal< sc_lv<4> > grp_Cipher_fu_187_key_6_V_address0;
    sc_signal< sc_logic > grp_Cipher_fu_187_key_6_V_ce0;
    sc_signal< sc_lv<8> > grp_Cipher_fu_187_key_6_V_d0;
    sc_signal< sc_logic > grp_Cipher_fu_187_key_6_V_we0;
    sc_signal< sc_lv<4> > grp_Cipher_fu_187_key_7_V_address0;
    sc_signal< sc_logic > grp_Cipher_fu_187_key_7_V_ce0;
    sc_signal< sc_lv<8> > grp_Cipher_fu_187_key_7_V_d0;
    sc_signal< sc_logic > grp_Cipher_fu_187_key_7_V_we0;
    sc_signal< sc_lv<4> > grp_Cipher_fu_187_key_8_V_address0;
    sc_signal< sc_logic > grp_Cipher_fu_187_key_8_V_ce0;
    sc_signal< sc_lv<8> > grp_Cipher_fu_187_key_8_V_d0;
    sc_signal< sc_logic > grp_Cipher_fu_187_key_8_V_we0;
    sc_signal< sc_lv<4> > grp_Cipher_fu_187_key_9_V_address0;
    sc_signal< sc_logic > grp_Cipher_fu_187_key_9_V_ce0;
    sc_signal< sc_lv<8> > grp_Cipher_fu_187_key_9_V_d0;
    sc_signal< sc_logic > grp_Cipher_fu_187_key_9_V_we0;
    sc_signal< sc_lv<4> > grp_Cipher_fu_187_key_10_V_address0;
    sc_signal< sc_logic > grp_Cipher_fu_187_key_10_V_ce0;
    sc_signal< sc_lv<8> > grp_Cipher_fu_187_key_10_V_d0;
    sc_signal< sc_logic > grp_Cipher_fu_187_key_10_V_we0;
    sc_signal< sc_logic > grp_Cipher_fu_187_ap_start;
    sc_signal< sc_logic > grp_Cipher_fu_187_ap_done;
    sc_signal< sc_logic > grp_Cipher_fu_187_ap_ready;
    sc_signal< sc_logic > grp_Cipher_fu_187_ap_idle;
    sc_signal< sc_logic > grp_Cipher_fu_187_ap_continue;
    sc_signal< sc_lv<32> > i_reg_153;
    sc_signal< sc_lv<5> > j_reg_165;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > tmp_fu_235_p2;
    sc_signal< sc_lv<5> > j2_reg_176;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_sync_grp_Cipher_fu_187_ap_ready;
    sc_signal< sc_logic > ap_sync_grp_Cipher_fu_187_ap_done;
    sc_signal< bool > ap_block_state4_on_subcall_done;
    sc_signal< sc_logic > grp_Cipher_fu_187_ap_start_reg;
    sc_signal< bool > ap_block_state3_ignore_call0;
    sc_signal< sc_logic > ap_sync_reg_grp_Cipher_fu_187_ap_ready;
    sc_signal< sc_logic > ap_sync_reg_grp_Cipher_fu_187_ap_done;
    sc_signal< sc_lv<64> > tmp_s_fu_252_p1;
    sc_signal< sc_lv<64> > tmp_3_fu_269_p1;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_0;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<8> ap_const_lv8_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_state3();
    void thread_ap_block_state3_ignore_call0();
    void thread_ap_block_state4_on_subcall_done();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sync_grp_Cipher_fu_187_ap_done();
    void thread_ap_sync_grp_Cipher_fu_187_ap_ready();
    void thread_encrypt_V_V_1_ack_in();
    void thread_encrypt_V_V_1_ack_out();
    void thread_encrypt_V_V_1_data_out();
    void thread_encrypt_V_V_1_load_A();
    void thread_encrypt_V_V_1_load_B();
    void thread_encrypt_V_V_1_sel();
    void thread_encrypt_V_V_1_state_cmp_full();
    void thread_encrypt_V_V_1_vld_in();
    void thread_encrypt_V_V_1_vld_out();
    void thread_encrypt_V_V_TDATA();
    void thread_encrypt_V_V_TDATA_blk_n();
    void thread_encrypt_V_V_TVALID();
    void thread_exitcond1_fu_240_p2();
    void thread_exitcond_fu_257_p2();
    void thread_grp_Cipher_fu_187_ap_continue();
    void thread_grp_Cipher_fu_187_ap_start();
    void thread_i_1_fu_274_p2();
    void thread_in_V_address0();
    void thread_in_V_ce0();
    void thread_in_V_we0();
    void thread_j_1_fu_246_p2();
    void thread_j_2_fu_263_p2();
    void thread_out_address0();
    void thread_out_ce0();
    void thread_out_we0();
    void thread_plain_V_V_0_ack_in();
    void thread_plain_V_V_0_ack_out();
    void thread_plain_V_V_0_data_out();
    void thread_plain_V_V_0_load_A();
    void thread_plain_V_V_0_load_B();
    void thread_plain_V_V_0_sel();
    void thread_plain_V_V_0_state_cmp_full();
    void thread_plain_V_V_0_vld_in();
    void thread_plain_V_V_0_vld_out();
    void thread_plain_V_V_TDATA_blk_n();
    void thread_plain_V_V_TREADY();
    void thread_tmp_3_fu_269_p1();
    void thread_tmp_fu_235_p2();
    void thread_tmp_s_fu_252_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
