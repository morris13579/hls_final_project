// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="AES_ECB_encrypt,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.028000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=33,HLS_SYN_DSP=0,HLS_SYN_FF=31573,HLS_SYN_LUT=281467,HLS_VERSION=2018_3}" *)

module AES_ECB_encrypt (
        ap_clk,
        ap_rst_n,
        plain_V_TDATA,
        plain_V_TVALID,
        plain_V_TREADY,
        encrypt_V_TDATA,
        encrypt_V_TVALID,
        encrypt_V_TREADY,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [7:0] plain_V_TDATA;
input   plain_V_TVALID;
output   plain_V_TREADY;
output  [7:0] encrypt_V_TDATA;
output   encrypt_V_TVALID;
input   encrypt_V_TREADY;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [7:0] plain_V_0_data_out;
wire    plain_V_0_vld_in;
wire    plain_V_0_vld_out;
wire    plain_V_0_ack_in;
reg    plain_V_0_ack_out;
reg   [7:0] plain_V_0_payload_A;
reg   [7:0] plain_V_0_payload_B;
reg    plain_V_0_sel_rd;
reg    plain_V_0_sel_wr;
wire    plain_V_0_sel;
wire    plain_V_0_load_A;
wire    plain_V_0_load_B;
reg   [1:0] plain_V_0_state;
wire    plain_V_0_state_cmp_full;
reg   [7:0] encrypt_V_1_data_out;
reg    encrypt_V_1_vld_in;
wire    encrypt_V_1_vld_out;
wire    encrypt_V_1_ack_in;
wire    encrypt_V_1_ack_out;
reg   [7:0] encrypt_V_1_payload_A;
reg   [7:0] encrypt_V_1_payload_B;
reg    encrypt_V_1_sel_rd;
reg    encrypt_V_1_sel_wr;
wire    encrypt_V_1_sel;
wire    encrypt_V_1_load_A;
wire    encrypt_V_1_load_B;
reg   [1:0] encrypt_V_1_state;
wire    encrypt_V_1_state_cmp_full;
wire   [7:0] key_q0;
wire   [31:0] length_r;
reg    plain_V_TDATA_blk_n;
wire    ap_CS_fsm_state4;
wire   [0:0] exitcond4_fu_1094_p2;
reg    encrypt_V_TDATA_blk_n;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
reg   [31:0] length_read_reg_1134;
wire    ap_CS_fsm_state2;
wire    grp_KeyExpansion_fu_173_ap_ready;
wire    grp_KeyExpansion_fu_173_ap_done;
reg   [7:0] RoundKey_0_reg_1139;
reg   [7:0] RoundKey_1_reg_1144;
reg   [7:0] RoundKey_2_reg_1149;
reg   [7:0] RoundKey_3_reg_1154;
reg   [7:0] RoundKey_4_reg_1159;
reg   [7:0] RoundKey_5_reg_1164;
reg   [7:0] RoundKey_6_reg_1169;
reg   [7:0] RoundKey_7_reg_1174;
reg   [7:0] RoundKey_8_reg_1179;
reg   [7:0] RoundKey_9_reg_1184;
reg   [7:0] RoundKey_10_reg_1189;
reg   [7:0] RoundKey_11_reg_1194;
reg   [7:0] RoundKey_12_reg_1199;
reg   [7:0] RoundKey_13_reg_1204;
reg   [7:0] RoundKey_14_reg_1209;
reg   [7:0] RoundKey_15_reg_1214;
reg   [7:0] RoundKey_16_reg_1219;
reg   [7:0] RoundKey_17_reg_1224;
reg   [7:0] RoundKey_18_reg_1229;
reg   [7:0] RoundKey_19_reg_1234;
reg   [7:0] RoundKey_20_reg_1239;
reg   [7:0] RoundKey_21_reg_1244;
reg   [7:0] RoundKey_22_reg_1249;
reg   [7:0] RoundKey_23_reg_1254;
reg   [7:0] RoundKey_24_reg_1259;
reg   [7:0] RoundKey_25_reg_1264;
reg   [7:0] RoundKey_26_reg_1269;
reg   [7:0] RoundKey_27_reg_1274;
reg   [7:0] RoundKey_28_reg_1279;
reg   [7:0] RoundKey_29_reg_1284;
reg   [7:0] RoundKey_30_reg_1289;
reg   [7:0] RoundKey_31_reg_1294;
reg   [7:0] RoundKey_32_reg_1299;
reg   [7:0] RoundKey_33_reg_1304;
reg   [7:0] RoundKey_34_reg_1309;
reg   [7:0] RoundKey_35_reg_1314;
reg   [7:0] RoundKey_36_reg_1319;
reg   [7:0] RoundKey_37_reg_1324;
reg   [7:0] RoundKey_38_reg_1329;
reg   [7:0] RoundKey_39_reg_1334;
reg   [7:0] RoundKey_40_reg_1339;
reg   [7:0] RoundKey_41_reg_1344;
reg   [7:0] RoundKey_42_reg_1349;
reg   [7:0] RoundKey_43_reg_1354;
reg   [7:0] RoundKey_44_reg_1359;
reg   [7:0] RoundKey_45_reg_1364;
reg   [7:0] RoundKey_46_reg_1369;
reg   [7:0] RoundKey_47_reg_1374;
reg   [7:0] RoundKey_48_reg_1379;
reg   [7:0] RoundKey_49_reg_1384;
reg   [7:0] RoundKey_50_reg_1389;
reg   [7:0] RoundKey_51_reg_1394;
reg   [7:0] RoundKey_52_reg_1399;
reg   [7:0] RoundKey_53_reg_1404;
reg   [7:0] RoundKey_54_reg_1409;
reg   [7:0] RoundKey_55_reg_1414;
reg   [7:0] RoundKey_56_reg_1419;
reg   [7:0] RoundKey_57_reg_1424;
reg   [7:0] RoundKey_58_reg_1429;
reg   [7:0] RoundKey_59_reg_1434;
reg   [7:0] RoundKey_60_reg_1439;
reg   [7:0] RoundKey_61_reg_1444;
reg   [7:0] RoundKey_62_reg_1449;
reg   [7:0] RoundKey_63_reg_1454;
reg   [7:0] RoundKey_64_reg_1459;
reg   [7:0] RoundKey_65_reg_1464;
reg   [7:0] RoundKey_66_reg_1469;
reg   [7:0] RoundKey_67_reg_1474;
reg   [7:0] RoundKey_68_reg_1479;
reg   [7:0] RoundKey_69_reg_1484;
reg   [7:0] RoundKey_70_reg_1489;
reg   [7:0] RoundKey_71_reg_1494;
reg   [7:0] RoundKey_72_reg_1499;
reg   [7:0] RoundKey_73_reg_1504;
reg   [7:0] RoundKey_74_reg_1509;
reg   [7:0] RoundKey_75_reg_1514;
reg   [7:0] RoundKey_76_reg_1519;
reg   [7:0] RoundKey_77_reg_1524;
reg   [7:0] RoundKey_78_reg_1529;
reg   [7:0] RoundKey_79_reg_1534;
reg   [7:0] RoundKey_80_reg_1539;
reg   [7:0] RoundKey_81_reg_1544;
reg   [7:0] RoundKey_82_reg_1549;
reg   [7:0] RoundKey_83_reg_1554;
reg   [7:0] RoundKey_84_reg_1559;
reg   [7:0] RoundKey_85_reg_1564;
reg   [7:0] RoundKey_86_reg_1569;
reg   [7:0] RoundKey_87_reg_1574;
reg   [7:0] RoundKey_88_reg_1579;
reg   [7:0] RoundKey_89_reg_1584;
reg   [7:0] RoundKey_90_reg_1589;
reg   [7:0] RoundKey_91_reg_1594;
reg   [7:0] RoundKey_92_reg_1599;
reg   [7:0] RoundKey_93_reg_1604;
reg   [7:0] RoundKey_94_reg_1609;
reg   [7:0] RoundKey_95_reg_1614;
reg   [7:0] RoundKey_96_reg_1619;
reg   [7:0] RoundKey_97_reg_1624;
reg   [7:0] RoundKey_98_reg_1629;
reg   [7:0] RoundKey_99_reg_1634;
reg   [7:0] RoundKey_100_reg_1639;
reg   [7:0] RoundKey_101_reg_1644;
reg   [7:0] RoundKey_102_reg_1649;
reg   [7:0] RoundKey_103_reg_1654;
reg   [7:0] RoundKey_104_reg_1659;
reg   [7:0] RoundKey_105_reg_1664;
reg   [7:0] RoundKey_106_reg_1669;
reg   [7:0] RoundKey_107_reg_1674;
reg   [7:0] RoundKey_108_reg_1679;
reg   [7:0] RoundKey_109_reg_1684;
reg   [7:0] RoundKey_110_reg_1689;
reg   [7:0] RoundKey_111_reg_1694;
reg   [7:0] RoundKey_112_reg_1699;
reg   [7:0] RoundKey_113_reg_1704;
reg   [7:0] RoundKey_114_reg_1709;
reg   [7:0] RoundKey_115_reg_1714;
reg   [7:0] RoundKey_116_reg_1719;
reg   [7:0] RoundKey_117_reg_1724;
reg   [7:0] RoundKey_118_reg_1729;
reg   [7:0] RoundKey_119_reg_1734;
reg   [7:0] RoundKey_120_reg_1739;
reg   [7:0] RoundKey_121_reg_1744;
reg   [7:0] RoundKey_122_reg_1749;
reg   [7:0] RoundKey_123_reg_1754;
reg   [7:0] RoundKey_124_reg_1759;
reg   [7:0] RoundKey_125_reg_1764;
reg   [7:0] RoundKey_126_reg_1769;
reg   [7:0] RoundKey_127_reg_1774;
reg   [7:0] RoundKey_128_reg_1779;
reg   [7:0] RoundKey_129_reg_1784;
reg   [7:0] RoundKey_130_reg_1789;
reg   [7:0] RoundKey_131_reg_1794;
reg   [7:0] RoundKey_132_reg_1799;
reg   [7:0] RoundKey_133_reg_1804;
reg   [7:0] RoundKey_134_reg_1809;
reg   [7:0] RoundKey_135_reg_1814;
reg   [7:0] RoundKey_136_reg_1819;
reg   [7:0] RoundKey_137_reg_1824;
reg   [7:0] RoundKey_138_reg_1829;
reg   [7:0] RoundKey_139_reg_1834;
reg   [7:0] RoundKey_140_reg_1839;
reg   [7:0] RoundKey_141_reg_1844;
reg   [7:0] RoundKey_142_reg_1849;
reg   [7:0] RoundKey_143_reg_1854;
reg   [7:0] RoundKey_144_reg_1859;
reg   [7:0] RoundKey_145_reg_1864;
reg   [7:0] RoundKey_146_reg_1869;
reg   [7:0] RoundKey_147_reg_1874;
reg   [7:0] RoundKey_148_reg_1879;
reg   [7:0] RoundKey_149_reg_1884;
reg   [7:0] RoundKey_150_reg_1889;
reg   [7:0] RoundKey_151_reg_1894;
reg   [7:0] RoundKey_152_reg_1899;
reg   [7:0] RoundKey_153_reg_1904;
reg   [7:0] RoundKey_154_reg_1909;
reg   [7:0] RoundKey_155_reg_1914;
reg   [7:0] RoundKey_156_reg_1919;
reg   [7:0] RoundKey_157_reg_1924;
reg   [7:0] RoundKey_158_reg_1929;
reg   [7:0] RoundKey_159_reg_1934;
reg   [7:0] RoundKey_160_reg_1939;
reg   [7:0] RoundKey_161_reg_1944;
reg   [7:0] RoundKey_162_reg_1949;
reg   [7:0] RoundKey_163_reg_1954;
reg   [7:0] RoundKey_164_reg_1959;
reg   [7:0] RoundKey_165_reg_1964;
reg   [7:0] RoundKey_166_reg_1969;
reg   [7:0] RoundKey_167_reg_1974;
reg   [7:0] RoundKey_168_reg_1979;
reg   [7:0] RoundKey_169_reg_1984;
reg   [7:0] RoundKey_170_reg_1989;
reg   [7:0] RoundKey_171_reg_1994;
reg   [7:0] RoundKey_172_reg_1999;
reg   [7:0] RoundKey_173_reg_2004;
reg   [7:0] RoundKey_174_reg_2009;
reg   [7:0] RoundKey_175_reg_2014;
wire   [4:0] j_1_fu_1100_p2;
reg    ap_block_state4;
wire   [4:0] j_2_fu_1117_p2;
reg   [4:0] j_2_reg_2033;
wire    ap_CS_fsm_state6;
wire   [0:0] exitcond_fu_1111_p2;
wire   [31:0] i_4_fu_1128_p2;
wire   [7:0] out_q0;
reg   [3:0] in_address0;
reg    in_ce0;
reg    in_we0;
wire   [7:0] in_q0;
reg   [3:0] out_address0;
reg    out_ce0;
reg    out_we0;
wire    grp_KeyExpansion_fu_173_ap_start;
wire    grp_KeyExpansion_fu_173_ap_idle;
wire   [3:0] grp_KeyExpansion_fu_173_Key_address0;
wire    grp_KeyExpansion_fu_173_Key_ce0;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_0;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_1;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_2;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_3;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_4;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_5;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_6;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_7;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_8;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_9;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_10;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_11;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_12;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_13;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_14;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_15;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_16;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_17;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_18;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_19;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_20;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_21;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_22;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_23;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_24;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_25;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_26;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_27;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_28;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_29;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_30;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_31;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_32;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_33;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_34;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_35;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_36;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_37;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_38;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_39;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_40;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_41;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_42;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_43;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_44;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_45;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_46;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_47;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_48;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_49;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_50;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_51;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_52;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_53;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_54;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_55;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_56;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_57;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_58;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_59;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_60;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_61;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_62;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_63;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_64;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_65;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_66;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_67;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_68;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_69;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_70;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_71;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_72;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_73;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_74;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_75;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_76;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_77;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_78;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_79;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_80;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_81;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_82;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_83;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_84;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_85;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_86;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_87;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_88;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_89;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_90;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_91;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_92;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_93;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_94;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_95;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_96;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_97;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_98;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_99;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_100;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_101;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_102;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_103;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_104;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_105;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_106;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_107;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_108;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_109;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_110;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_111;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_112;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_113;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_114;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_115;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_116;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_117;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_118;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_119;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_120;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_121;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_122;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_123;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_124;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_125;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_126;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_127;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_128;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_129;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_130;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_131;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_132;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_133;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_134;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_135;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_136;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_137;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_138;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_139;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_140;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_141;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_142;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_143;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_144;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_145;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_146;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_147;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_148;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_149;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_150;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_151;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_152;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_153;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_154;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_155;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_156;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_157;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_158;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_159;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_160;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_161;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_162;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_163;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_164;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_165;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_166;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_167;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_168;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_169;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_170;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_171;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_172;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_173;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_174;
wire   [7:0] grp_KeyExpansion_fu_173_ap_return_175;
wire   [3:0] grp_Cipher_fu_183_plain_address0;
wire    grp_Cipher_fu_183_plain_ce0;
wire   [7:0] grp_Cipher_fu_183_plain_d0;
wire    grp_Cipher_fu_183_plain_we0;
wire   [3:0] grp_Cipher_fu_183_plain_address1;
wire    grp_Cipher_fu_183_plain_ce1;
wire   [7:0] grp_Cipher_fu_183_plain_d1;
wire    grp_Cipher_fu_183_plain_we1;
wire   [3:0] grp_Cipher_fu_183_encrypt_address0;
wire    grp_Cipher_fu_183_encrypt_ce0;
wire   [7:0] grp_Cipher_fu_183_encrypt_d0;
wire    grp_Cipher_fu_183_encrypt_we0;
wire   [3:0] grp_Cipher_fu_183_encrypt_address1;
wire    grp_Cipher_fu_183_encrypt_ce1;
wire   [7:0] grp_Cipher_fu_183_encrypt_d1;
wire    grp_Cipher_fu_183_encrypt_we1;
wire    grp_Cipher_fu_183_ap_start;
wire    grp_Cipher_fu_183_ap_done;
wire    grp_Cipher_fu_183_ap_ready;
wire    grp_Cipher_fu_183_ap_idle;
reg    grp_Cipher_fu_183_ap_continue;
reg   [31:0] i_reg_139;
reg   [4:0] j_reg_151;
wire    ap_CS_fsm_state3;
wire   [0:0] tmp_fu_1089_p2;
reg   [4:0] j1_reg_162;
wire    ap_CS_fsm_state5;
wire    ap_sync_grp_Cipher_fu_183_ap_ready;
wire    ap_sync_grp_Cipher_fu_183_ap_done;
reg    ap_block_state5_on_subcall_done;
reg    grp_KeyExpansion_fu_173_ap_start_reg;
reg    grp_Cipher_fu_183_ap_start_reg;
reg    ap_block_state4_ignore_call0;
reg    ap_sync_reg_grp_Cipher_fu_183_ap_ready;
reg    ap_sync_reg_grp_Cipher_fu_183_ap_done;
wire   [63:0] tmp_s_fu_1106_p1;
wire   [63:0] tmp_33_fu_1123_p1;
reg   [7:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 plain_V_0_sel_rd = 1'b0;
#0 plain_V_0_sel_wr = 1'b0;
#0 plain_V_0_state = 2'd0;
#0 encrypt_V_1_sel_rd = 1'b0;
#0 encrypt_V_1_sel_wr = 1'b0;
#0 encrypt_V_1_state = 2'd0;
#0 grp_KeyExpansion_fu_173_ap_start_reg = 1'b0;
#0 grp_Cipher_fu_183_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_Cipher_fu_183_ap_ready = 1'b0;
#0 ap_sync_reg_grp_Cipher_fu_183_ap_done = 1'b0;
end

AES_ECB_encrypt_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
AES_ECB_encrypt_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .key_address0(grp_KeyExpansion_fu_173_Key_address0),
    .key_ce0(grp_KeyExpansion_fu_173_Key_ce0),
    .key_q0(key_q0),
    .length_r(length_r)
);

AES_ECB_encrypt_in #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
in_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(in_address0),
    .ce0(in_ce0),
    .we0(in_we0),
    .d0(plain_V_0_data_out),
    .q0(in_q0)
);

AES_ECB_encrypt_in #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(out_address0),
    .ce0(out_ce0),
    .we0(out_we0),
    .d0(grp_Cipher_fu_183_encrypt_d0),
    .q0(out_q0)
);

KeyExpansion grp_KeyExpansion_fu_173(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_KeyExpansion_fu_173_ap_start),
    .ap_done(grp_KeyExpansion_fu_173_ap_done),
    .ap_idle(grp_KeyExpansion_fu_173_ap_idle),
    .ap_ready(grp_KeyExpansion_fu_173_ap_ready),
    .Key_address0(grp_KeyExpansion_fu_173_Key_address0),
    .Key_ce0(grp_KeyExpansion_fu_173_Key_ce0),
    .Key_q0(key_q0),
    .ap_return_0(grp_KeyExpansion_fu_173_ap_return_0),
    .ap_return_1(grp_KeyExpansion_fu_173_ap_return_1),
    .ap_return_2(grp_KeyExpansion_fu_173_ap_return_2),
    .ap_return_3(grp_KeyExpansion_fu_173_ap_return_3),
    .ap_return_4(grp_KeyExpansion_fu_173_ap_return_4),
    .ap_return_5(grp_KeyExpansion_fu_173_ap_return_5),
    .ap_return_6(grp_KeyExpansion_fu_173_ap_return_6),
    .ap_return_7(grp_KeyExpansion_fu_173_ap_return_7),
    .ap_return_8(grp_KeyExpansion_fu_173_ap_return_8),
    .ap_return_9(grp_KeyExpansion_fu_173_ap_return_9),
    .ap_return_10(grp_KeyExpansion_fu_173_ap_return_10),
    .ap_return_11(grp_KeyExpansion_fu_173_ap_return_11),
    .ap_return_12(grp_KeyExpansion_fu_173_ap_return_12),
    .ap_return_13(grp_KeyExpansion_fu_173_ap_return_13),
    .ap_return_14(grp_KeyExpansion_fu_173_ap_return_14),
    .ap_return_15(grp_KeyExpansion_fu_173_ap_return_15),
    .ap_return_16(grp_KeyExpansion_fu_173_ap_return_16),
    .ap_return_17(grp_KeyExpansion_fu_173_ap_return_17),
    .ap_return_18(grp_KeyExpansion_fu_173_ap_return_18),
    .ap_return_19(grp_KeyExpansion_fu_173_ap_return_19),
    .ap_return_20(grp_KeyExpansion_fu_173_ap_return_20),
    .ap_return_21(grp_KeyExpansion_fu_173_ap_return_21),
    .ap_return_22(grp_KeyExpansion_fu_173_ap_return_22),
    .ap_return_23(grp_KeyExpansion_fu_173_ap_return_23),
    .ap_return_24(grp_KeyExpansion_fu_173_ap_return_24),
    .ap_return_25(grp_KeyExpansion_fu_173_ap_return_25),
    .ap_return_26(grp_KeyExpansion_fu_173_ap_return_26),
    .ap_return_27(grp_KeyExpansion_fu_173_ap_return_27),
    .ap_return_28(grp_KeyExpansion_fu_173_ap_return_28),
    .ap_return_29(grp_KeyExpansion_fu_173_ap_return_29),
    .ap_return_30(grp_KeyExpansion_fu_173_ap_return_30),
    .ap_return_31(grp_KeyExpansion_fu_173_ap_return_31),
    .ap_return_32(grp_KeyExpansion_fu_173_ap_return_32),
    .ap_return_33(grp_KeyExpansion_fu_173_ap_return_33),
    .ap_return_34(grp_KeyExpansion_fu_173_ap_return_34),
    .ap_return_35(grp_KeyExpansion_fu_173_ap_return_35),
    .ap_return_36(grp_KeyExpansion_fu_173_ap_return_36),
    .ap_return_37(grp_KeyExpansion_fu_173_ap_return_37),
    .ap_return_38(grp_KeyExpansion_fu_173_ap_return_38),
    .ap_return_39(grp_KeyExpansion_fu_173_ap_return_39),
    .ap_return_40(grp_KeyExpansion_fu_173_ap_return_40),
    .ap_return_41(grp_KeyExpansion_fu_173_ap_return_41),
    .ap_return_42(grp_KeyExpansion_fu_173_ap_return_42),
    .ap_return_43(grp_KeyExpansion_fu_173_ap_return_43),
    .ap_return_44(grp_KeyExpansion_fu_173_ap_return_44),
    .ap_return_45(grp_KeyExpansion_fu_173_ap_return_45),
    .ap_return_46(grp_KeyExpansion_fu_173_ap_return_46),
    .ap_return_47(grp_KeyExpansion_fu_173_ap_return_47),
    .ap_return_48(grp_KeyExpansion_fu_173_ap_return_48),
    .ap_return_49(grp_KeyExpansion_fu_173_ap_return_49),
    .ap_return_50(grp_KeyExpansion_fu_173_ap_return_50),
    .ap_return_51(grp_KeyExpansion_fu_173_ap_return_51),
    .ap_return_52(grp_KeyExpansion_fu_173_ap_return_52),
    .ap_return_53(grp_KeyExpansion_fu_173_ap_return_53),
    .ap_return_54(grp_KeyExpansion_fu_173_ap_return_54),
    .ap_return_55(grp_KeyExpansion_fu_173_ap_return_55),
    .ap_return_56(grp_KeyExpansion_fu_173_ap_return_56),
    .ap_return_57(grp_KeyExpansion_fu_173_ap_return_57),
    .ap_return_58(grp_KeyExpansion_fu_173_ap_return_58),
    .ap_return_59(grp_KeyExpansion_fu_173_ap_return_59),
    .ap_return_60(grp_KeyExpansion_fu_173_ap_return_60),
    .ap_return_61(grp_KeyExpansion_fu_173_ap_return_61),
    .ap_return_62(grp_KeyExpansion_fu_173_ap_return_62),
    .ap_return_63(grp_KeyExpansion_fu_173_ap_return_63),
    .ap_return_64(grp_KeyExpansion_fu_173_ap_return_64),
    .ap_return_65(grp_KeyExpansion_fu_173_ap_return_65),
    .ap_return_66(grp_KeyExpansion_fu_173_ap_return_66),
    .ap_return_67(grp_KeyExpansion_fu_173_ap_return_67),
    .ap_return_68(grp_KeyExpansion_fu_173_ap_return_68),
    .ap_return_69(grp_KeyExpansion_fu_173_ap_return_69),
    .ap_return_70(grp_KeyExpansion_fu_173_ap_return_70),
    .ap_return_71(grp_KeyExpansion_fu_173_ap_return_71),
    .ap_return_72(grp_KeyExpansion_fu_173_ap_return_72),
    .ap_return_73(grp_KeyExpansion_fu_173_ap_return_73),
    .ap_return_74(grp_KeyExpansion_fu_173_ap_return_74),
    .ap_return_75(grp_KeyExpansion_fu_173_ap_return_75),
    .ap_return_76(grp_KeyExpansion_fu_173_ap_return_76),
    .ap_return_77(grp_KeyExpansion_fu_173_ap_return_77),
    .ap_return_78(grp_KeyExpansion_fu_173_ap_return_78),
    .ap_return_79(grp_KeyExpansion_fu_173_ap_return_79),
    .ap_return_80(grp_KeyExpansion_fu_173_ap_return_80),
    .ap_return_81(grp_KeyExpansion_fu_173_ap_return_81),
    .ap_return_82(grp_KeyExpansion_fu_173_ap_return_82),
    .ap_return_83(grp_KeyExpansion_fu_173_ap_return_83),
    .ap_return_84(grp_KeyExpansion_fu_173_ap_return_84),
    .ap_return_85(grp_KeyExpansion_fu_173_ap_return_85),
    .ap_return_86(grp_KeyExpansion_fu_173_ap_return_86),
    .ap_return_87(grp_KeyExpansion_fu_173_ap_return_87),
    .ap_return_88(grp_KeyExpansion_fu_173_ap_return_88),
    .ap_return_89(grp_KeyExpansion_fu_173_ap_return_89),
    .ap_return_90(grp_KeyExpansion_fu_173_ap_return_90),
    .ap_return_91(grp_KeyExpansion_fu_173_ap_return_91),
    .ap_return_92(grp_KeyExpansion_fu_173_ap_return_92),
    .ap_return_93(grp_KeyExpansion_fu_173_ap_return_93),
    .ap_return_94(grp_KeyExpansion_fu_173_ap_return_94),
    .ap_return_95(grp_KeyExpansion_fu_173_ap_return_95),
    .ap_return_96(grp_KeyExpansion_fu_173_ap_return_96),
    .ap_return_97(grp_KeyExpansion_fu_173_ap_return_97),
    .ap_return_98(grp_KeyExpansion_fu_173_ap_return_98),
    .ap_return_99(grp_KeyExpansion_fu_173_ap_return_99),
    .ap_return_100(grp_KeyExpansion_fu_173_ap_return_100),
    .ap_return_101(grp_KeyExpansion_fu_173_ap_return_101),
    .ap_return_102(grp_KeyExpansion_fu_173_ap_return_102),
    .ap_return_103(grp_KeyExpansion_fu_173_ap_return_103),
    .ap_return_104(grp_KeyExpansion_fu_173_ap_return_104),
    .ap_return_105(grp_KeyExpansion_fu_173_ap_return_105),
    .ap_return_106(grp_KeyExpansion_fu_173_ap_return_106),
    .ap_return_107(grp_KeyExpansion_fu_173_ap_return_107),
    .ap_return_108(grp_KeyExpansion_fu_173_ap_return_108),
    .ap_return_109(grp_KeyExpansion_fu_173_ap_return_109),
    .ap_return_110(grp_KeyExpansion_fu_173_ap_return_110),
    .ap_return_111(grp_KeyExpansion_fu_173_ap_return_111),
    .ap_return_112(grp_KeyExpansion_fu_173_ap_return_112),
    .ap_return_113(grp_KeyExpansion_fu_173_ap_return_113),
    .ap_return_114(grp_KeyExpansion_fu_173_ap_return_114),
    .ap_return_115(grp_KeyExpansion_fu_173_ap_return_115),
    .ap_return_116(grp_KeyExpansion_fu_173_ap_return_116),
    .ap_return_117(grp_KeyExpansion_fu_173_ap_return_117),
    .ap_return_118(grp_KeyExpansion_fu_173_ap_return_118),
    .ap_return_119(grp_KeyExpansion_fu_173_ap_return_119),
    .ap_return_120(grp_KeyExpansion_fu_173_ap_return_120),
    .ap_return_121(grp_KeyExpansion_fu_173_ap_return_121),
    .ap_return_122(grp_KeyExpansion_fu_173_ap_return_122),
    .ap_return_123(grp_KeyExpansion_fu_173_ap_return_123),
    .ap_return_124(grp_KeyExpansion_fu_173_ap_return_124),
    .ap_return_125(grp_KeyExpansion_fu_173_ap_return_125),
    .ap_return_126(grp_KeyExpansion_fu_173_ap_return_126),
    .ap_return_127(grp_KeyExpansion_fu_173_ap_return_127),
    .ap_return_128(grp_KeyExpansion_fu_173_ap_return_128),
    .ap_return_129(grp_KeyExpansion_fu_173_ap_return_129),
    .ap_return_130(grp_KeyExpansion_fu_173_ap_return_130),
    .ap_return_131(grp_KeyExpansion_fu_173_ap_return_131),
    .ap_return_132(grp_KeyExpansion_fu_173_ap_return_132),
    .ap_return_133(grp_KeyExpansion_fu_173_ap_return_133),
    .ap_return_134(grp_KeyExpansion_fu_173_ap_return_134),
    .ap_return_135(grp_KeyExpansion_fu_173_ap_return_135),
    .ap_return_136(grp_KeyExpansion_fu_173_ap_return_136),
    .ap_return_137(grp_KeyExpansion_fu_173_ap_return_137),
    .ap_return_138(grp_KeyExpansion_fu_173_ap_return_138),
    .ap_return_139(grp_KeyExpansion_fu_173_ap_return_139),
    .ap_return_140(grp_KeyExpansion_fu_173_ap_return_140),
    .ap_return_141(grp_KeyExpansion_fu_173_ap_return_141),
    .ap_return_142(grp_KeyExpansion_fu_173_ap_return_142),
    .ap_return_143(grp_KeyExpansion_fu_173_ap_return_143),
    .ap_return_144(grp_KeyExpansion_fu_173_ap_return_144),
    .ap_return_145(grp_KeyExpansion_fu_173_ap_return_145),
    .ap_return_146(grp_KeyExpansion_fu_173_ap_return_146),
    .ap_return_147(grp_KeyExpansion_fu_173_ap_return_147),
    .ap_return_148(grp_KeyExpansion_fu_173_ap_return_148),
    .ap_return_149(grp_KeyExpansion_fu_173_ap_return_149),
    .ap_return_150(grp_KeyExpansion_fu_173_ap_return_150),
    .ap_return_151(grp_KeyExpansion_fu_173_ap_return_151),
    .ap_return_152(grp_KeyExpansion_fu_173_ap_return_152),
    .ap_return_153(grp_KeyExpansion_fu_173_ap_return_153),
    .ap_return_154(grp_KeyExpansion_fu_173_ap_return_154),
    .ap_return_155(grp_KeyExpansion_fu_173_ap_return_155),
    .ap_return_156(grp_KeyExpansion_fu_173_ap_return_156),
    .ap_return_157(grp_KeyExpansion_fu_173_ap_return_157),
    .ap_return_158(grp_KeyExpansion_fu_173_ap_return_158),
    .ap_return_159(grp_KeyExpansion_fu_173_ap_return_159),
    .ap_return_160(grp_KeyExpansion_fu_173_ap_return_160),
    .ap_return_161(grp_KeyExpansion_fu_173_ap_return_161),
    .ap_return_162(grp_KeyExpansion_fu_173_ap_return_162),
    .ap_return_163(grp_KeyExpansion_fu_173_ap_return_163),
    .ap_return_164(grp_KeyExpansion_fu_173_ap_return_164),
    .ap_return_165(grp_KeyExpansion_fu_173_ap_return_165),
    .ap_return_166(grp_KeyExpansion_fu_173_ap_return_166),
    .ap_return_167(grp_KeyExpansion_fu_173_ap_return_167),
    .ap_return_168(grp_KeyExpansion_fu_173_ap_return_168),
    .ap_return_169(grp_KeyExpansion_fu_173_ap_return_169),
    .ap_return_170(grp_KeyExpansion_fu_173_ap_return_170),
    .ap_return_171(grp_KeyExpansion_fu_173_ap_return_171),
    .ap_return_172(grp_KeyExpansion_fu_173_ap_return_172),
    .ap_return_173(grp_KeyExpansion_fu_173_ap_return_173),
    .ap_return_174(grp_KeyExpansion_fu_173_ap_return_174),
    .ap_return_175(grp_KeyExpansion_fu_173_ap_return_175)
);

Cipher grp_Cipher_fu_183(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .plain_address0(grp_Cipher_fu_183_plain_address0),
    .plain_ce0(grp_Cipher_fu_183_plain_ce0),
    .plain_d0(grp_Cipher_fu_183_plain_d0),
    .plain_q0(in_q0),
    .plain_we0(grp_Cipher_fu_183_plain_we0),
    .plain_address1(grp_Cipher_fu_183_plain_address1),
    .plain_ce1(grp_Cipher_fu_183_plain_ce1),
    .plain_d1(grp_Cipher_fu_183_plain_d1),
    .plain_q1(8'd0),
    .plain_we1(grp_Cipher_fu_183_plain_we1),
    .encrypt_address0(grp_Cipher_fu_183_encrypt_address0),
    .encrypt_ce0(grp_Cipher_fu_183_encrypt_ce0),
    .encrypt_d0(grp_Cipher_fu_183_encrypt_d0),
    .encrypt_q0(8'd0),
    .encrypt_we0(grp_Cipher_fu_183_encrypt_we0),
    .encrypt_address1(grp_Cipher_fu_183_encrypt_address1),
    .encrypt_ce1(grp_Cipher_fu_183_encrypt_ce1),
    .encrypt_d1(grp_Cipher_fu_183_encrypt_d1),
    .encrypt_q1(8'd0),
    .encrypt_we1(grp_Cipher_fu_183_encrypt_we1),
    .RoundKey_0_read(RoundKey_0_reg_1139),
    .RoundKey_1_read(RoundKey_1_reg_1144),
    .RoundKey_2_read(RoundKey_2_reg_1149),
    .RoundKey_3_read(RoundKey_3_reg_1154),
    .RoundKey_4_read(RoundKey_4_reg_1159),
    .RoundKey_5_read(RoundKey_5_reg_1164),
    .RoundKey_6_read(RoundKey_6_reg_1169),
    .RoundKey_7_read(RoundKey_7_reg_1174),
    .RoundKey_8_read(RoundKey_8_reg_1179),
    .RoundKey_9_read(RoundKey_9_reg_1184),
    .RoundKey_10_read(RoundKey_10_reg_1189),
    .RoundKey_11_read(RoundKey_11_reg_1194),
    .RoundKey_12_read(RoundKey_12_reg_1199),
    .RoundKey_13_read(RoundKey_13_reg_1204),
    .RoundKey_14_read(RoundKey_14_reg_1209),
    .RoundKey_15_read(RoundKey_15_reg_1214),
    .RoundKey_16_read(RoundKey_16_reg_1219),
    .RoundKey_17_read(RoundKey_17_reg_1224),
    .RoundKey_18_read(RoundKey_18_reg_1229),
    .RoundKey_19_read(RoundKey_19_reg_1234),
    .RoundKey_20_read(RoundKey_20_reg_1239),
    .RoundKey_21_read(RoundKey_21_reg_1244),
    .RoundKey_22_read(RoundKey_22_reg_1249),
    .RoundKey_23_read(RoundKey_23_reg_1254),
    .RoundKey_24_read(RoundKey_24_reg_1259),
    .RoundKey_25_read(RoundKey_25_reg_1264),
    .RoundKey_26_read(RoundKey_26_reg_1269),
    .RoundKey_27_read(RoundKey_27_reg_1274),
    .RoundKey_28_read(RoundKey_28_reg_1279),
    .RoundKey_29_read(RoundKey_29_reg_1284),
    .RoundKey_30_read(RoundKey_30_reg_1289),
    .RoundKey_31_read(RoundKey_31_reg_1294),
    .RoundKey_32_read(RoundKey_32_reg_1299),
    .RoundKey_33_read(RoundKey_33_reg_1304),
    .RoundKey_34_read(RoundKey_34_reg_1309),
    .RoundKey_35_read(RoundKey_35_reg_1314),
    .RoundKey_36_read(RoundKey_36_reg_1319),
    .RoundKey_37_read(RoundKey_37_reg_1324),
    .RoundKey_38_read(RoundKey_38_reg_1329),
    .RoundKey_39_read(RoundKey_39_reg_1334),
    .RoundKey_40_read(RoundKey_40_reg_1339),
    .RoundKey_41_read(RoundKey_41_reg_1344),
    .RoundKey_42_read(RoundKey_42_reg_1349),
    .RoundKey_43_read(RoundKey_43_reg_1354),
    .RoundKey_44_read(RoundKey_44_reg_1359),
    .RoundKey_45_read(RoundKey_45_reg_1364),
    .RoundKey_46_read(RoundKey_46_reg_1369),
    .RoundKey_47_read(RoundKey_47_reg_1374),
    .RoundKey_48_read(RoundKey_48_reg_1379),
    .RoundKey_49_read(RoundKey_49_reg_1384),
    .RoundKey_50_read(RoundKey_50_reg_1389),
    .RoundKey_51_read(RoundKey_51_reg_1394),
    .RoundKey_52_read(RoundKey_52_reg_1399),
    .RoundKey_53_read(RoundKey_53_reg_1404),
    .RoundKey_54_read(RoundKey_54_reg_1409),
    .RoundKey_55_read(RoundKey_55_reg_1414),
    .RoundKey_56_read(RoundKey_56_reg_1419),
    .RoundKey_57_read(RoundKey_57_reg_1424),
    .RoundKey_58_read(RoundKey_58_reg_1429),
    .RoundKey_59_read(RoundKey_59_reg_1434),
    .RoundKey_60_read(RoundKey_60_reg_1439),
    .RoundKey_61_read(RoundKey_61_reg_1444),
    .RoundKey_62_read(RoundKey_62_reg_1449),
    .RoundKey_63_read(RoundKey_63_reg_1454),
    .RoundKey_64_read(RoundKey_64_reg_1459),
    .RoundKey_65_read(RoundKey_65_reg_1464),
    .RoundKey_66_read(RoundKey_66_reg_1469),
    .RoundKey_67_read(RoundKey_67_reg_1474),
    .RoundKey_68_read(RoundKey_68_reg_1479),
    .RoundKey_69_read(RoundKey_69_reg_1484),
    .RoundKey_70_read(RoundKey_70_reg_1489),
    .RoundKey_71_read(RoundKey_71_reg_1494),
    .RoundKey_72_read(RoundKey_72_reg_1499),
    .RoundKey_73_read(RoundKey_73_reg_1504),
    .RoundKey_74_read(RoundKey_74_reg_1509),
    .RoundKey_75_read(RoundKey_75_reg_1514),
    .RoundKey_76_read(RoundKey_76_reg_1519),
    .RoundKey_77_read(RoundKey_77_reg_1524),
    .RoundKey_78_read(RoundKey_78_reg_1529),
    .RoundKey_79_read(RoundKey_79_reg_1534),
    .RoundKey_80_read(RoundKey_80_reg_1539),
    .RoundKey_81_read(RoundKey_81_reg_1544),
    .RoundKey_82_read(RoundKey_82_reg_1549),
    .RoundKey_83_read(RoundKey_83_reg_1554),
    .RoundKey_84_read(RoundKey_84_reg_1559),
    .RoundKey_85_read(RoundKey_85_reg_1564),
    .RoundKey_86_read(RoundKey_86_reg_1569),
    .RoundKey_87_read(RoundKey_87_reg_1574),
    .RoundKey_88_read(RoundKey_88_reg_1579),
    .RoundKey_89_read(RoundKey_89_reg_1584),
    .RoundKey_90_read(RoundKey_90_reg_1589),
    .RoundKey_91_read(RoundKey_91_reg_1594),
    .RoundKey_92_read(RoundKey_92_reg_1599),
    .RoundKey_93_read(RoundKey_93_reg_1604),
    .RoundKey_94_read(RoundKey_94_reg_1609),
    .RoundKey_95_read(RoundKey_95_reg_1614),
    .RoundKey_96_read(RoundKey_96_reg_1619),
    .RoundKey_97_read(RoundKey_97_reg_1624),
    .RoundKey_98_read(RoundKey_98_reg_1629),
    .RoundKey_99_read(RoundKey_99_reg_1634),
    .RoundKey_100_read(RoundKey_100_reg_1639),
    .RoundKey_101_read(RoundKey_101_reg_1644),
    .RoundKey_102_read(RoundKey_102_reg_1649),
    .RoundKey_103_read(RoundKey_103_reg_1654),
    .RoundKey_104_read(RoundKey_104_reg_1659),
    .RoundKey_105_read(RoundKey_105_reg_1664),
    .RoundKey_106_read(RoundKey_106_reg_1669),
    .RoundKey_107_read(RoundKey_107_reg_1674),
    .RoundKey_108_read(RoundKey_108_reg_1679),
    .RoundKey_109_read(RoundKey_109_reg_1684),
    .RoundKey_110_read(RoundKey_110_reg_1689),
    .RoundKey_111_read(RoundKey_111_reg_1694),
    .RoundKey_112_read(RoundKey_112_reg_1699),
    .RoundKey_113_read(RoundKey_113_reg_1704),
    .RoundKey_114_read(RoundKey_114_reg_1709),
    .RoundKey_115_read(RoundKey_115_reg_1714),
    .RoundKey_116_read(RoundKey_116_reg_1719),
    .RoundKey_117_read(RoundKey_117_reg_1724),
    .RoundKey_118_read(RoundKey_118_reg_1729),
    .RoundKey_119_read(RoundKey_119_reg_1734),
    .RoundKey_120_read(RoundKey_120_reg_1739),
    .RoundKey_121_read(RoundKey_121_reg_1744),
    .RoundKey_122_read(RoundKey_122_reg_1749),
    .RoundKey_123_read(RoundKey_123_reg_1754),
    .RoundKey_124_read(RoundKey_124_reg_1759),
    .RoundKey_125_read(RoundKey_125_reg_1764),
    .RoundKey_126_read(RoundKey_126_reg_1769),
    .RoundKey_127_read(RoundKey_127_reg_1774),
    .RoundKey_128_read(RoundKey_128_reg_1779),
    .RoundKey_129_read(RoundKey_129_reg_1784),
    .RoundKey_130_read(RoundKey_130_reg_1789),
    .RoundKey_131_read(RoundKey_131_reg_1794),
    .RoundKey_132_read(RoundKey_132_reg_1799),
    .RoundKey_133_read(RoundKey_133_reg_1804),
    .RoundKey_134_read(RoundKey_134_reg_1809),
    .RoundKey_135_read(RoundKey_135_reg_1814),
    .RoundKey_136_read(RoundKey_136_reg_1819),
    .RoundKey_137_read(RoundKey_137_reg_1824),
    .RoundKey_138_read(RoundKey_138_reg_1829),
    .RoundKey_139_read(RoundKey_139_reg_1834),
    .RoundKey_140_read(RoundKey_140_reg_1839),
    .RoundKey_141_read(RoundKey_141_reg_1844),
    .RoundKey_142_read(RoundKey_142_reg_1849),
    .RoundKey_143_read(RoundKey_143_reg_1854),
    .RoundKey_144_read(RoundKey_144_reg_1859),
    .RoundKey_145_read(RoundKey_145_reg_1864),
    .RoundKey_146_read(RoundKey_146_reg_1869),
    .RoundKey_147_read(RoundKey_147_reg_1874),
    .RoundKey_148_read(RoundKey_148_reg_1879),
    .RoundKey_149_read(RoundKey_149_reg_1884),
    .RoundKey_150_read(RoundKey_150_reg_1889),
    .RoundKey_151_read(RoundKey_151_reg_1894),
    .RoundKey_152_read(RoundKey_152_reg_1899),
    .RoundKey_153_read(RoundKey_153_reg_1904),
    .RoundKey_154_read(RoundKey_154_reg_1909),
    .RoundKey_155_read(RoundKey_155_reg_1914),
    .RoundKey_156_read(RoundKey_156_reg_1919),
    .RoundKey_157_read(RoundKey_157_reg_1924),
    .RoundKey_158_read(RoundKey_158_reg_1929),
    .RoundKey_159_read(RoundKey_159_reg_1934),
    .RoundKey_160_read(RoundKey_160_reg_1939),
    .RoundKey_161_read(RoundKey_161_reg_1944),
    .RoundKey_162_read(RoundKey_162_reg_1949),
    .RoundKey_163_read(RoundKey_163_reg_1954),
    .RoundKey_164_read(RoundKey_164_reg_1959),
    .RoundKey_165_read(RoundKey_165_reg_1964),
    .RoundKey_166_read(RoundKey_166_reg_1969),
    .RoundKey_167_read(RoundKey_167_reg_1974),
    .RoundKey_168_read(RoundKey_168_reg_1979),
    .RoundKey_169_read(RoundKey_169_reg_1984),
    .RoundKey_170_read(RoundKey_170_reg_1989),
    .RoundKey_171_read(RoundKey_171_reg_1994),
    .RoundKey_172_read(RoundKey_172_reg_1999),
    .RoundKey_173_read(RoundKey_173_reg_2004),
    .RoundKey_174_read(RoundKey_174_reg_2009),
    .RoundKey_175_read(RoundKey_175_reg_2014),
    .RoundKey_0_read_ap_vld(1'b1),
    .RoundKey_1_read_ap_vld(1'b1),
    .RoundKey_2_read_ap_vld(1'b1),
    .RoundKey_3_read_ap_vld(1'b1),
    .RoundKey_4_read_ap_vld(1'b1),
    .RoundKey_5_read_ap_vld(1'b1),
    .RoundKey_6_read_ap_vld(1'b1),
    .RoundKey_7_read_ap_vld(1'b1),
    .RoundKey_8_read_ap_vld(1'b1),
    .RoundKey_9_read_ap_vld(1'b1),
    .RoundKey_10_read_ap_vld(1'b1),
    .RoundKey_11_read_ap_vld(1'b1),
    .RoundKey_12_read_ap_vld(1'b1),
    .RoundKey_13_read_ap_vld(1'b1),
    .RoundKey_14_read_ap_vld(1'b1),
    .RoundKey_15_read_ap_vld(1'b1),
    .RoundKey_16_read_ap_vld(1'b1),
    .RoundKey_17_read_ap_vld(1'b1),
    .RoundKey_18_read_ap_vld(1'b1),
    .RoundKey_19_read_ap_vld(1'b1),
    .RoundKey_20_read_ap_vld(1'b1),
    .RoundKey_21_read_ap_vld(1'b1),
    .RoundKey_22_read_ap_vld(1'b1),
    .RoundKey_23_read_ap_vld(1'b1),
    .RoundKey_24_read_ap_vld(1'b1),
    .RoundKey_25_read_ap_vld(1'b1),
    .RoundKey_26_read_ap_vld(1'b1),
    .RoundKey_27_read_ap_vld(1'b1),
    .RoundKey_28_read_ap_vld(1'b1),
    .RoundKey_29_read_ap_vld(1'b1),
    .RoundKey_30_read_ap_vld(1'b1),
    .RoundKey_31_read_ap_vld(1'b1),
    .RoundKey_32_read_ap_vld(1'b1),
    .RoundKey_33_read_ap_vld(1'b1),
    .RoundKey_34_read_ap_vld(1'b1),
    .RoundKey_35_read_ap_vld(1'b1),
    .RoundKey_36_read_ap_vld(1'b1),
    .RoundKey_37_read_ap_vld(1'b1),
    .RoundKey_38_read_ap_vld(1'b1),
    .RoundKey_39_read_ap_vld(1'b1),
    .RoundKey_40_read_ap_vld(1'b1),
    .RoundKey_41_read_ap_vld(1'b1),
    .RoundKey_42_read_ap_vld(1'b1),
    .RoundKey_43_read_ap_vld(1'b1),
    .RoundKey_44_read_ap_vld(1'b1),
    .RoundKey_45_read_ap_vld(1'b1),
    .RoundKey_46_read_ap_vld(1'b1),
    .RoundKey_47_read_ap_vld(1'b1),
    .RoundKey_48_read_ap_vld(1'b1),
    .RoundKey_49_read_ap_vld(1'b1),
    .RoundKey_50_read_ap_vld(1'b1),
    .RoundKey_51_read_ap_vld(1'b1),
    .RoundKey_52_read_ap_vld(1'b1),
    .RoundKey_53_read_ap_vld(1'b1),
    .RoundKey_54_read_ap_vld(1'b1),
    .RoundKey_55_read_ap_vld(1'b1),
    .RoundKey_56_read_ap_vld(1'b1),
    .RoundKey_57_read_ap_vld(1'b1),
    .RoundKey_58_read_ap_vld(1'b1),
    .RoundKey_59_read_ap_vld(1'b1),
    .RoundKey_60_read_ap_vld(1'b1),
    .RoundKey_61_read_ap_vld(1'b1),
    .RoundKey_62_read_ap_vld(1'b1),
    .RoundKey_63_read_ap_vld(1'b1),
    .RoundKey_64_read_ap_vld(1'b1),
    .RoundKey_65_read_ap_vld(1'b1),
    .RoundKey_66_read_ap_vld(1'b1),
    .RoundKey_67_read_ap_vld(1'b1),
    .RoundKey_68_read_ap_vld(1'b1),
    .RoundKey_69_read_ap_vld(1'b1),
    .RoundKey_70_read_ap_vld(1'b1),
    .RoundKey_71_read_ap_vld(1'b1),
    .RoundKey_72_read_ap_vld(1'b1),
    .RoundKey_73_read_ap_vld(1'b1),
    .RoundKey_74_read_ap_vld(1'b1),
    .RoundKey_75_read_ap_vld(1'b1),
    .RoundKey_76_read_ap_vld(1'b1),
    .RoundKey_77_read_ap_vld(1'b1),
    .RoundKey_78_read_ap_vld(1'b1),
    .RoundKey_79_read_ap_vld(1'b1),
    .RoundKey_80_read_ap_vld(1'b1),
    .RoundKey_81_read_ap_vld(1'b1),
    .RoundKey_82_read_ap_vld(1'b1),
    .RoundKey_83_read_ap_vld(1'b1),
    .RoundKey_84_read_ap_vld(1'b1),
    .RoundKey_85_read_ap_vld(1'b1),
    .RoundKey_86_read_ap_vld(1'b1),
    .RoundKey_87_read_ap_vld(1'b1),
    .RoundKey_88_read_ap_vld(1'b1),
    .RoundKey_89_read_ap_vld(1'b1),
    .RoundKey_90_read_ap_vld(1'b1),
    .RoundKey_91_read_ap_vld(1'b1),
    .RoundKey_92_read_ap_vld(1'b1),
    .RoundKey_93_read_ap_vld(1'b1),
    .RoundKey_94_read_ap_vld(1'b1),
    .RoundKey_95_read_ap_vld(1'b1),
    .RoundKey_96_read_ap_vld(1'b1),
    .RoundKey_97_read_ap_vld(1'b1),
    .RoundKey_98_read_ap_vld(1'b1),
    .RoundKey_99_read_ap_vld(1'b1),
    .RoundKey_100_read_ap_vld(1'b1),
    .RoundKey_101_read_ap_vld(1'b1),
    .RoundKey_102_read_ap_vld(1'b1),
    .RoundKey_103_read_ap_vld(1'b1),
    .RoundKey_104_read_ap_vld(1'b1),
    .RoundKey_105_read_ap_vld(1'b1),
    .RoundKey_106_read_ap_vld(1'b1),
    .RoundKey_107_read_ap_vld(1'b1),
    .RoundKey_108_read_ap_vld(1'b1),
    .RoundKey_109_read_ap_vld(1'b1),
    .RoundKey_110_read_ap_vld(1'b1),
    .RoundKey_111_read_ap_vld(1'b1),
    .RoundKey_112_read_ap_vld(1'b1),
    .RoundKey_113_read_ap_vld(1'b1),
    .RoundKey_114_read_ap_vld(1'b1),
    .RoundKey_115_read_ap_vld(1'b1),
    .RoundKey_116_read_ap_vld(1'b1),
    .RoundKey_117_read_ap_vld(1'b1),
    .RoundKey_118_read_ap_vld(1'b1),
    .RoundKey_119_read_ap_vld(1'b1),
    .RoundKey_120_read_ap_vld(1'b1),
    .RoundKey_121_read_ap_vld(1'b1),
    .RoundKey_122_read_ap_vld(1'b1),
    .RoundKey_123_read_ap_vld(1'b1),
    .RoundKey_124_read_ap_vld(1'b1),
    .RoundKey_125_read_ap_vld(1'b1),
    .RoundKey_126_read_ap_vld(1'b1),
    .RoundKey_127_read_ap_vld(1'b1),
    .RoundKey_128_read_ap_vld(1'b1),
    .RoundKey_129_read_ap_vld(1'b1),
    .RoundKey_130_read_ap_vld(1'b1),
    .RoundKey_131_read_ap_vld(1'b1),
    .RoundKey_132_read_ap_vld(1'b1),
    .RoundKey_133_read_ap_vld(1'b1),
    .RoundKey_134_read_ap_vld(1'b1),
    .RoundKey_135_read_ap_vld(1'b1),
    .RoundKey_136_read_ap_vld(1'b1),
    .RoundKey_137_read_ap_vld(1'b1),
    .RoundKey_138_read_ap_vld(1'b1),
    .RoundKey_139_read_ap_vld(1'b1),
    .RoundKey_140_read_ap_vld(1'b1),
    .RoundKey_141_read_ap_vld(1'b1),
    .RoundKey_142_read_ap_vld(1'b1),
    .RoundKey_143_read_ap_vld(1'b1),
    .RoundKey_144_read_ap_vld(1'b1),
    .RoundKey_145_read_ap_vld(1'b1),
    .RoundKey_146_read_ap_vld(1'b1),
    .RoundKey_147_read_ap_vld(1'b1),
    .RoundKey_148_read_ap_vld(1'b1),
    .RoundKey_149_read_ap_vld(1'b1),
    .RoundKey_150_read_ap_vld(1'b1),
    .RoundKey_151_read_ap_vld(1'b1),
    .RoundKey_152_read_ap_vld(1'b1),
    .RoundKey_153_read_ap_vld(1'b1),
    .RoundKey_154_read_ap_vld(1'b1),
    .RoundKey_155_read_ap_vld(1'b1),
    .RoundKey_156_read_ap_vld(1'b1),
    .RoundKey_157_read_ap_vld(1'b1),
    .RoundKey_158_read_ap_vld(1'b1),
    .RoundKey_159_read_ap_vld(1'b1),
    .RoundKey_160_read_ap_vld(1'b1),
    .RoundKey_161_read_ap_vld(1'b1),
    .RoundKey_162_read_ap_vld(1'b1),
    .RoundKey_163_read_ap_vld(1'b1),
    .RoundKey_164_read_ap_vld(1'b1),
    .RoundKey_165_read_ap_vld(1'b1),
    .RoundKey_166_read_ap_vld(1'b1),
    .RoundKey_167_read_ap_vld(1'b1),
    .RoundKey_168_read_ap_vld(1'b1),
    .RoundKey_169_read_ap_vld(1'b1),
    .RoundKey_170_read_ap_vld(1'b1),
    .RoundKey_171_read_ap_vld(1'b1),
    .RoundKey_172_read_ap_vld(1'b1),
    .RoundKey_173_read_ap_vld(1'b1),
    .RoundKey_174_read_ap_vld(1'b1),
    .RoundKey_175_read_ap_vld(1'b1),
    .ap_start(grp_Cipher_fu_183_ap_start),
    .ap_done(grp_Cipher_fu_183_ap_done),
    .ap_ready(grp_Cipher_fu_183_ap_ready),
    .ap_idle(grp_Cipher_fu_183_ap_idle),
    .ap_continue(grp_Cipher_fu_183_ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_Cipher_fu_183_ap_done <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5_on_subcall_done))) begin
            ap_sync_reg_grp_Cipher_fu_183_ap_done <= 1'b0;
        end else if ((grp_Cipher_fu_183_ap_done == 1'b1)) begin
            ap_sync_reg_grp_Cipher_fu_183_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_Cipher_fu_183_ap_ready <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5_on_subcall_done))) begin
            ap_sync_reg_grp_Cipher_fu_183_ap_ready <= 1'b0;
        end else if ((grp_Cipher_fu_183_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_Cipher_fu_183_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        encrypt_V_1_sel_rd <= 1'b0;
    end else begin
        if (((encrypt_V_1_ack_out == 1'b1) & (encrypt_V_1_vld_out == 1'b1))) begin
            encrypt_V_1_sel_rd <= ~encrypt_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        encrypt_V_1_sel_wr <= 1'b0;
    end else begin
        if (((encrypt_V_1_ack_in == 1'b1) & (encrypt_V_1_vld_in == 1'b1))) begin
            encrypt_V_1_sel_wr <= ~encrypt_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        encrypt_V_1_state <= 2'd0;
    end else begin
        if ((((encrypt_V_1_state == 2'd2) & (encrypt_V_1_vld_in == 1'b0)) | ((encrypt_V_1_state == 2'd3) & (encrypt_V_1_vld_in == 1'b0) & (encrypt_V_1_ack_out == 1'b1)))) begin
            encrypt_V_1_state <= 2'd2;
        end else if ((((encrypt_V_1_state == 2'd1) & (encrypt_V_1_ack_out == 1'b0)) | ((encrypt_V_1_state == 2'd3) & (encrypt_V_1_ack_out == 1'b0) & (encrypt_V_1_vld_in == 1'b1)))) begin
            encrypt_V_1_state <= 2'd1;
        end else if (((~((encrypt_V_1_vld_in == 1'b0) & (encrypt_V_1_ack_out == 1'b1)) & ~((encrypt_V_1_ack_out == 1'b0) & (encrypt_V_1_vld_in == 1'b1)) & (encrypt_V_1_state == 2'd3)) | ((encrypt_V_1_state == 2'd1) & (encrypt_V_1_ack_out == 1'b1)) | ((encrypt_V_1_state == 2'd2) & (encrypt_V_1_vld_in == 1'b1)))) begin
            encrypt_V_1_state <= 2'd3;
        end else begin
            encrypt_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_Cipher_fu_183_ap_start_reg <= 1'b0;
    end else begin
        if (((~((exitcond4_fu_1094_p2 == 1'd0) & (plain_V_0_vld_out == 1'b0)) & (exitcond4_fu_1094_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4)) | ((ap_sync_grp_Cipher_fu_183_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state5)))) begin
            grp_Cipher_fu_183_ap_start_reg <= 1'b1;
        end else if ((grp_Cipher_fu_183_ap_ready == 1'b1)) begin
            grp_Cipher_fu_183_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_KeyExpansion_fu_173_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_KeyExpansion_fu_173_ap_start_reg <= 1'b1;
        end else if ((grp_KeyExpansion_fu_173_ap_ready == 1'b1)) begin
            grp_KeyExpansion_fu_173_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        plain_V_0_sel_rd <= 1'b0;
    end else begin
        if (((plain_V_0_ack_out == 1'b1) & (plain_V_0_vld_out == 1'b1))) begin
            plain_V_0_sel_rd <= ~plain_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        plain_V_0_sel_wr <= 1'b0;
    end else begin
        if (((plain_V_0_ack_in == 1'b1) & (plain_V_0_vld_in == 1'b1))) begin
            plain_V_0_sel_wr <= ~plain_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        plain_V_0_state <= 2'd0;
    end else begin
        if ((((plain_V_0_state == 2'd2) & (plain_V_0_vld_in == 1'b0)) | ((plain_V_0_state == 2'd3) & (plain_V_0_vld_in == 1'b0) & (plain_V_0_ack_out == 1'b1)))) begin
            plain_V_0_state <= 2'd2;
        end else if ((((plain_V_0_state == 2'd1) & (plain_V_0_ack_out == 1'b0)) | ((plain_V_0_state == 2'd3) & (plain_V_0_ack_out == 1'b0) & (plain_V_0_vld_in == 1'b1)))) begin
            plain_V_0_state <= 2'd1;
        end else if (((~((plain_V_0_vld_in == 1'b0) & (plain_V_0_ack_out == 1'b1)) & ~((plain_V_0_ack_out == 1'b0) & (plain_V_0_vld_in == 1'b1)) & (plain_V_0_state == 2'd3)) | ((plain_V_0_state == 2'd1) & (plain_V_0_ack_out == 1'b1)) | ((plain_V_0_state == 2'd2) & (plain_V_0_vld_in == 1'b1)))) begin
            plain_V_0_state <= 2'd3;
        end else begin
            plain_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_1111_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        i_reg_139 <= i_4_fu_1128_p2;
    end else if (((grp_KeyExpansion_fu_173_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_139 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (encrypt_V_1_ack_in == 1'b1))) begin
        j1_reg_162 <= j_2_reg_2033;
    end else if (((1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5_on_subcall_done))) begin
        j1_reg_162 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_1089_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (encrypt_V_1_ack_in == 1'b1))) begin
        j_reg_151 <= 5'd0;
    end else if ((~((exitcond4_fu_1094_p2 == 1'd0) & (plain_V_0_vld_out == 1'b0)) & (exitcond4_fu_1094_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        j_reg_151 <= j_1_fu_1100_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_KeyExpansion_fu_173_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        RoundKey_0_reg_1139 <= grp_KeyExpansion_fu_173_ap_return_0;
        RoundKey_100_reg_1639 <= grp_KeyExpansion_fu_173_ap_return_100;
        RoundKey_101_reg_1644 <= grp_KeyExpansion_fu_173_ap_return_101;
        RoundKey_102_reg_1649 <= grp_KeyExpansion_fu_173_ap_return_102;
        RoundKey_103_reg_1654 <= grp_KeyExpansion_fu_173_ap_return_103;
        RoundKey_104_reg_1659 <= grp_KeyExpansion_fu_173_ap_return_104;
        RoundKey_105_reg_1664 <= grp_KeyExpansion_fu_173_ap_return_105;
        RoundKey_106_reg_1669 <= grp_KeyExpansion_fu_173_ap_return_106;
        RoundKey_107_reg_1674 <= grp_KeyExpansion_fu_173_ap_return_107;
        RoundKey_108_reg_1679 <= grp_KeyExpansion_fu_173_ap_return_108;
        RoundKey_109_reg_1684 <= grp_KeyExpansion_fu_173_ap_return_109;
        RoundKey_10_reg_1189 <= grp_KeyExpansion_fu_173_ap_return_10;
        RoundKey_110_reg_1689 <= grp_KeyExpansion_fu_173_ap_return_110;
        RoundKey_111_reg_1694 <= grp_KeyExpansion_fu_173_ap_return_111;
        RoundKey_112_reg_1699 <= grp_KeyExpansion_fu_173_ap_return_112;
        RoundKey_113_reg_1704 <= grp_KeyExpansion_fu_173_ap_return_113;
        RoundKey_114_reg_1709 <= grp_KeyExpansion_fu_173_ap_return_114;
        RoundKey_115_reg_1714 <= grp_KeyExpansion_fu_173_ap_return_115;
        RoundKey_116_reg_1719 <= grp_KeyExpansion_fu_173_ap_return_116;
        RoundKey_117_reg_1724 <= grp_KeyExpansion_fu_173_ap_return_117;
        RoundKey_118_reg_1729 <= grp_KeyExpansion_fu_173_ap_return_118;
        RoundKey_119_reg_1734 <= grp_KeyExpansion_fu_173_ap_return_119;
        RoundKey_11_reg_1194 <= grp_KeyExpansion_fu_173_ap_return_11;
        RoundKey_120_reg_1739 <= grp_KeyExpansion_fu_173_ap_return_120;
        RoundKey_121_reg_1744 <= grp_KeyExpansion_fu_173_ap_return_121;
        RoundKey_122_reg_1749 <= grp_KeyExpansion_fu_173_ap_return_122;
        RoundKey_123_reg_1754 <= grp_KeyExpansion_fu_173_ap_return_123;
        RoundKey_124_reg_1759 <= grp_KeyExpansion_fu_173_ap_return_124;
        RoundKey_125_reg_1764 <= grp_KeyExpansion_fu_173_ap_return_125;
        RoundKey_126_reg_1769 <= grp_KeyExpansion_fu_173_ap_return_126;
        RoundKey_127_reg_1774 <= grp_KeyExpansion_fu_173_ap_return_127;
        RoundKey_128_reg_1779 <= grp_KeyExpansion_fu_173_ap_return_128;
        RoundKey_129_reg_1784 <= grp_KeyExpansion_fu_173_ap_return_129;
        RoundKey_12_reg_1199 <= grp_KeyExpansion_fu_173_ap_return_12;
        RoundKey_130_reg_1789 <= grp_KeyExpansion_fu_173_ap_return_130;
        RoundKey_131_reg_1794 <= grp_KeyExpansion_fu_173_ap_return_131;
        RoundKey_132_reg_1799 <= grp_KeyExpansion_fu_173_ap_return_132;
        RoundKey_133_reg_1804 <= grp_KeyExpansion_fu_173_ap_return_133;
        RoundKey_134_reg_1809 <= grp_KeyExpansion_fu_173_ap_return_134;
        RoundKey_135_reg_1814 <= grp_KeyExpansion_fu_173_ap_return_135;
        RoundKey_136_reg_1819 <= grp_KeyExpansion_fu_173_ap_return_136;
        RoundKey_137_reg_1824 <= grp_KeyExpansion_fu_173_ap_return_137;
        RoundKey_138_reg_1829 <= grp_KeyExpansion_fu_173_ap_return_138;
        RoundKey_139_reg_1834 <= grp_KeyExpansion_fu_173_ap_return_139;
        RoundKey_13_reg_1204 <= grp_KeyExpansion_fu_173_ap_return_13;
        RoundKey_140_reg_1839 <= grp_KeyExpansion_fu_173_ap_return_140;
        RoundKey_141_reg_1844 <= grp_KeyExpansion_fu_173_ap_return_141;
        RoundKey_142_reg_1849 <= grp_KeyExpansion_fu_173_ap_return_142;
        RoundKey_143_reg_1854 <= grp_KeyExpansion_fu_173_ap_return_143;
        RoundKey_144_reg_1859 <= grp_KeyExpansion_fu_173_ap_return_144;
        RoundKey_145_reg_1864 <= grp_KeyExpansion_fu_173_ap_return_145;
        RoundKey_146_reg_1869 <= grp_KeyExpansion_fu_173_ap_return_146;
        RoundKey_147_reg_1874 <= grp_KeyExpansion_fu_173_ap_return_147;
        RoundKey_148_reg_1879 <= grp_KeyExpansion_fu_173_ap_return_148;
        RoundKey_149_reg_1884 <= grp_KeyExpansion_fu_173_ap_return_149;
        RoundKey_14_reg_1209 <= grp_KeyExpansion_fu_173_ap_return_14;
        RoundKey_150_reg_1889 <= grp_KeyExpansion_fu_173_ap_return_150;
        RoundKey_151_reg_1894 <= grp_KeyExpansion_fu_173_ap_return_151;
        RoundKey_152_reg_1899 <= grp_KeyExpansion_fu_173_ap_return_152;
        RoundKey_153_reg_1904 <= grp_KeyExpansion_fu_173_ap_return_153;
        RoundKey_154_reg_1909 <= grp_KeyExpansion_fu_173_ap_return_154;
        RoundKey_155_reg_1914 <= grp_KeyExpansion_fu_173_ap_return_155;
        RoundKey_156_reg_1919 <= grp_KeyExpansion_fu_173_ap_return_156;
        RoundKey_157_reg_1924 <= grp_KeyExpansion_fu_173_ap_return_157;
        RoundKey_158_reg_1929 <= grp_KeyExpansion_fu_173_ap_return_158;
        RoundKey_159_reg_1934 <= grp_KeyExpansion_fu_173_ap_return_159;
        RoundKey_15_reg_1214 <= grp_KeyExpansion_fu_173_ap_return_15;
        RoundKey_160_reg_1939 <= grp_KeyExpansion_fu_173_ap_return_160;
        RoundKey_161_reg_1944 <= grp_KeyExpansion_fu_173_ap_return_161;
        RoundKey_162_reg_1949 <= grp_KeyExpansion_fu_173_ap_return_162;
        RoundKey_163_reg_1954 <= grp_KeyExpansion_fu_173_ap_return_163;
        RoundKey_164_reg_1959 <= grp_KeyExpansion_fu_173_ap_return_164;
        RoundKey_165_reg_1964 <= grp_KeyExpansion_fu_173_ap_return_165;
        RoundKey_166_reg_1969 <= grp_KeyExpansion_fu_173_ap_return_166;
        RoundKey_167_reg_1974 <= grp_KeyExpansion_fu_173_ap_return_167;
        RoundKey_168_reg_1979 <= grp_KeyExpansion_fu_173_ap_return_168;
        RoundKey_169_reg_1984 <= grp_KeyExpansion_fu_173_ap_return_169;
        RoundKey_16_reg_1219 <= grp_KeyExpansion_fu_173_ap_return_16;
        RoundKey_170_reg_1989 <= grp_KeyExpansion_fu_173_ap_return_170;
        RoundKey_171_reg_1994 <= grp_KeyExpansion_fu_173_ap_return_171;
        RoundKey_172_reg_1999 <= grp_KeyExpansion_fu_173_ap_return_172;
        RoundKey_173_reg_2004 <= grp_KeyExpansion_fu_173_ap_return_173;
        RoundKey_174_reg_2009 <= grp_KeyExpansion_fu_173_ap_return_174;
        RoundKey_175_reg_2014 <= grp_KeyExpansion_fu_173_ap_return_175;
        RoundKey_17_reg_1224 <= grp_KeyExpansion_fu_173_ap_return_17;
        RoundKey_18_reg_1229 <= grp_KeyExpansion_fu_173_ap_return_18;
        RoundKey_19_reg_1234 <= grp_KeyExpansion_fu_173_ap_return_19;
        RoundKey_1_reg_1144 <= grp_KeyExpansion_fu_173_ap_return_1;
        RoundKey_20_reg_1239 <= grp_KeyExpansion_fu_173_ap_return_20;
        RoundKey_21_reg_1244 <= grp_KeyExpansion_fu_173_ap_return_21;
        RoundKey_22_reg_1249 <= grp_KeyExpansion_fu_173_ap_return_22;
        RoundKey_23_reg_1254 <= grp_KeyExpansion_fu_173_ap_return_23;
        RoundKey_24_reg_1259 <= grp_KeyExpansion_fu_173_ap_return_24;
        RoundKey_25_reg_1264 <= grp_KeyExpansion_fu_173_ap_return_25;
        RoundKey_26_reg_1269 <= grp_KeyExpansion_fu_173_ap_return_26;
        RoundKey_27_reg_1274 <= grp_KeyExpansion_fu_173_ap_return_27;
        RoundKey_28_reg_1279 <= grp_KeyExpansion_fu_173_ap_return_28;
        RoundKey_29_reg_1284 <= grp_KeyExpansion_fu_173_ap_return_29;
        RoundKey_2_reg_1149 <= grp_KeyExpansion_fu_173_ap_return_2;
        RoundKey_30_reg_1289 <= grp_KeyExpansion_fu_173_ap_return_30;
        RoundKey_31_reg_1294 <= grp_KeyExpansion_fu_173_ap_return_31;
        RoundKey_32_reg_1299 <= grp_KeyExpansion_fu_173_ap_return_32;
        RoundKey_33_reg_1304 <= grp_KeyExpansion_fu_173_ap_return_33;
        RoundKey_34_reg_1309 <= grp_KeyExpansion_fu_173_ap_return_34;
        RoundKey_35_reg_1314 <= grp_KeyExpansion_fu_173_ap_return_35;
        RoundKey_36_reg_1319 <= grp_KeyExpansion_fu_173_ap_return_36;
        RoundKey_37_reg_1324 <= grp_KeyExpansion_fu_173_ap_return_37;
        RoundKey_38_reg_1329 <= grp_KeyExpansion_fu_173_ap_return_38;
        RoundKey_39_reg_1334 <= grp_KeyExpansion_fu_173_ap_return_39;
        RoundKey_3_reg_1154 <= grp_KeyExpansion_fu_173_ap_return_3;
        RoundKey_40_reg_1339 <= grp_KeyExpansion_fu_173_ap_return_40;
        RoundKey_41_reg_1344 <= grp_KeyExpansion_fu_173_ap_return_41;
        RoundKey_42_reg_1349 <= grp_KeyExpansion_fu_173_ap_return_42;
        RoundKey_43_reg_1354 <= grp_KeyExpansion_fu_173_ap_return_43;
        RoundKey_44_reg_1359 <= grp_KeyExpansion_fu_173_ap_return_44;
        RoundKey_45_reg_1364 <= grp_KeyExpansion_fu_173_ap_return_45;
        RoundKey_46_reg_1369 <= grp_KeyExpansion_fu_173_ap_return_46;
        RoundKey_47_reg_1374 <= grp_KeyExpansion_fu_173_ap_return_47;
        RoundKey_48_reg_1379 <= grp_KeyExpansion_fu_173_ap_return_48;
        RoundKey_49_reg_1384 <= grp_KeyExpansion_fu_173_ap_return_49;
        RoundKey_4_reg_1159 <= grp_KeyExpansion_fu_173_ap_return_4;
        RoundKey_50_reg_1389 <= grp_KeyExpansion_fu_173_ap_return_50;
        RoundKey_51_reg_1394 <= grp_KeyExpansion_fu_173_ap_return_51;
        RoundKey_52_reg_1399 <= grp_KeyExpansion_fu_173_ap_return_52;
        RoundKey_53_reg_1404 <= grp_KeyExpansion_fu_173_ap_return_53;
        RoundKey_54_reg_1409 <= grp_KeyExpansion_fu_173_ap_return_54;
        RoundKey_55_reg_1414 <= grp_KeyExpansion_fu_173_ap_return_55;
        RoundKey_56_reg_1419 <= grp_KeyExpansion_fu_173_ap_return_56;
        RoundKey_57_reg_1424 <= grp_KeyExpansion_fu_173_ap_return_57;
        RoundKey_58_reg_1429 <= grp_KeyExpansion_fu_173_ap_return_58;
        RoundKey_59_reg_1434 <= grp_KeyExpansion_fu_173_ap_return_59;
        RoundKey_5_reg_1164 <= grp_KeyExpansion_fu_173_ap_return_5;
        RoundKey_60_reg_1439 <= grp_KeyExpansion_fu_173_ap_return_60;
        RoundKey_61_reg_1444 <= grp_KeyExpansion_fu_173_ap_return_61;
        RoundKey_62_reg_1449 <= grp_KeyExpansion_fu_173_ap_return_62;
        RoundKey_63_reg_1454 <= grp_KeyExpansion_fu_173_ap_return_63;
        RoundKey_64_reg_1459 <= grp_KeyExpansion_fu_173_ap_return_64;
        RoundKey_65_reg_1464 <= grp_KeyExpansion_fu_173_ap_return_65;
        RoundKey_66_reg_1469 <= grp_KeyExpansion_fu_173_ap_return_66;
        RoundKey_67_reg_1474 <= grp_KeyExpansion_fu_173_ap_return_67;
        RoundKey_68_reg_1479 <= grp_KeyExpansion_fu_173_ap_return_68;
        RoundKey_69_reg_1484 <= grp_KeyExpansion_fu_173_ap_return_69;
        RoundKey_6_reg_1169 <= grp_KeyExpansion_fu_173_ap_return_6;
        RoundKey_70_reg_1489 <= grp_KeyExpansion_fu_173_ap_return_70;
        RoundKey_71_reg_1494 <= grp_KeyExpansion_fu_173_ap_return_71;
        RoundKey_72_reg_1499 <= grp_KeyExpansion_fu_173_ap_return_72;
        RoundKey_73_reg_1504 <= grp_KeyExpansion_fu_173_ap_return_73;
        RoundKey_74_reg_1509 <= grp_KeyExpansion_fu_173_ap_return_74;
        RoundKey_75_reg_1514 <= grp_KeyExpansion_fu_173_ap_return_75;
        RoundKey_76_reg_1519 <= grp_KeyExpansion_fu_173_ap_return_76;
        RoundKey_77_reg_1524 <= grp_KeyExpansion_fu_173_ap_return_77;
        RoundKey_78_reg_1529 <= grp_KeyExpansion_fu_173_ap_return_78;
        RoundKey_79_reg_1534 <= grp_KeyExpansion_fu_173_ap_return_79;
        RoundKey_7_reg_1174 <= grp_KeyExpansion_fu_173_ap_return_7;
        RoundKey_80_reg_1539 <= grp_KeyExpansion_fu_173_ap_return_80;
        RoundKey_81_reg_1544 <= grp_KeyExpansion_fu_173_ap_return_81;
        RoundKey_82_reg_1549 <= grp_KeyExpansion_fu_173_ap_return_82;
        RoundKey_83_reg_1554 <= grp_KeyExpansion_fu_173_ap_return_83;
        RoundKey_84_reg_1559 <= grp_KeyExpansion_fu_173_ap_return_84;
        RoundKey_85_reg_1564 <= grp_KeyExpansion_fu_173_ap_return_85;
        RoundKey_86_reg_1569 <= grp_KeyExpansion_fu_173_ap_return_86;
        RoundKey_87_reg_1574 <= grp_KeyExpansion_fu_173_ap_return_87;
        RoundKey_88_reg_1579 <= grp_KeyExpansion_fu_173_ap_return_88;
        RoundKey_89_reg_1584 <= grp_KeyExpansion_fu_173_ap_return_89;
        RoundKey_8_reg_1179 <= grp_KeyExpansion_fu_173_ap_return_8;
        RoundKey_90_reg_1589 <= grp_KeyExpansion_fu_173_ap_return_90;
        RoundKey_91_reg_1594 <= grp_KeyExpansion_fu_173_ap_return_91;
        RoundKey_92_reg_1599 <= grp_KeyExpansion_fu_173_ap_return_92;
        RoundKey_93_reg_1604 <= grp_KeyExpansion_fu_173_ap_return_93;
        RoundKey_94_reg_1609 <= grp_KeyExpansion_fu_173_ap_return_94;
        RoundKey_95_reg_1614 <= grp_KeyExpansion_fu_173_ap_return_95;
        RoundKey_96_reg_1619 <= grp_KeyExpansion_fu_173_ap_return_96;
        RoundKey_97_reg_1624 <= grp_KeyExpansion_fu_173_ap_return_97;
        RoundKey_98_reg_1629 <= grp_KeyExpansion_fu_173_ap_return_98;
        RoundKey_99_reg_1634 <= grp_KeyExpansion_fu_173_ap_return_99;
        RoundKey_9_reg_1184 <= grp_KeyExpansion_fu_173_ap_return_9;
        length_read_reg_1134 <= length_r;
    end
end

always @ (posedge ap_clk) begin
    if ((encrypt_V_1_load_A == 1'b1)) begin
        encrypt_V_1_payload_A <= out_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((encrypt_V_1_load_B == 1'b1)) begin
        encrypt_V_1_payload_B <= out_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        j_2_reg_2033 <= j_2_fu_1117_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((plain_V_0_load_A == 1'b1)) begin
        plain_V_0_payload_A <= plain_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((plain_V_0_load_B == 1'b1)) begin
        plain_V_0_payload_B <= plain_V_TDATA;
    end
end

always @ (*) begin
    if (((tmp_fu_1089_p2 == 1'd0) & (encrypt_V_1_state[1'd0] == 1'b0) & (1'b1 == ap_CS_fsm_state3) & (encrypt_V_1_ack_in == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_1089_p2 == 1'd0) & (encrypt_V_1_state[1'd0] == 1'b0) & (1'b1 == ap_CS_fsm_state3) & (encrypt_V_1_ack_in == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((encrypt_V_1_sel == 1'b1)) begin
        encrypt_V_1_data_out = encrypt_V_1_payload_B;
    end else begin
        encrypt_V_1_data_out = encrypt_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (encrypt_V_1_ack_in == 1'b1))) begin
        encrypt_V_1_vld_in = 1'b1;
    end else begin
        encrypt_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        encrypt_V_TDATA_blk_n = encrypt_V_1_state[1'd1];
    end else begin
        encrypt_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5_on_subcall_done))) begin
        grp_Cipher_fu_183_ap_continue = 1'b1;
    end else begin
        grp_Cipher_fu_183_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond4_fu_1094_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        in_address0 = tmp_s_fu_1106_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        in_address0 = grp_Cipher_fu_183_plain_address0;
    end else begin
        in_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((exitcond4_fu_1094_p2 == 1'd0) & (plain_V_0_vld_out == 1'b0)) & (exitcond4_fu_1094_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        in_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        in_ce0 = grp_Cipher_fu_183_plain_ce0;
    end else begin
        in_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond4_fu_1094_p2 == 1'd0) & (plain_V_0_vld_out == 1'b0)) & (exitcond4_fu_1094_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        in_we0 = 1'b1;
    end else begin
        in_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        out_address0 = tmp_33_fu_1123_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        out_address0 = grp_Cipher_fu_183_encrypt_address0;
    end else begin
        out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        out_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        out_ce0 = grp_Cipher_fu_183_encrypt_ce0;
    end else begin
        out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        out_we0 = grp_Cipher_fu_183_encrypt_we0;
    end else begin
        out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond4_fu_1094_p2 == 1'd0) & (plain_V_0_vld_out == 1'b0)) & (exitcond4_fu_1094_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        plain_V_0_ack_out = 1'b1;
    end else begin
        plain_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((plain_V_0_sel == 1'b1)) begin
        plain_V_0_data_out = plain_V_0_payload_B;
    end else begin
        plain_V_0_data_out = plain_V_0_payload_A;
    end
end

always @ (*) begin
    if (((exitcond4_fu_1094_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        plain_V_TDATA_blk_n = plain_V_0_state[1'd0];
    end else begin
        plain_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_KeyExpansion_fu_173_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((tmp_fu_1089_p2 == 1'd0) & (encrypt_V_1_state[1'd0] == 1'b0) & (1'b1 == ap_CS_fsm_state3) & (encrypt_V_1_ack_in == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((tmp_fu_1089_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (encrypt_V_1_ack_in == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((exitcond4_fu_1094_p2 == 1'd0) & (plain_V_0_vld_out == 1'b0)) & (exitcond4_fu_1094_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if ((~((exitcond4_fu_1094_p2 == 1'd0) & (plain_V_0_vld_out == 1'b0)) & (exitcond4_fu_1094_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((exitcond_fu_1111_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (encrypt_V_1_ack_in == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (encrypt_V_1_ack_in == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state4 = ((exitcond4_fu_1094_p2 == 1'd0) & (plain_V_0_vld_out == 1'b0));
end

always @ (*) begin
    ap_block_state4_ignore_call0 = ((exitcond4_fu_1094_p2 == 1'd0) & (plain_V_0_vld_out == 1'b0));
end

always @ (*) begin
    ap_block_state5_on_subcall_done = ((ap_sync_grp_Cipher_fu_183_ap_ready & ap_sync_grp_Cipher_fu_183_ap_done) == 1'b0);
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_grp_Cipher_fu_183_ap_done = (grp_Cipher_fu_183_ap_done | ap_sync_reg_grp_Cipher_fu_183_ap_done);

assign ap_sync_grp_Cipher_fu_183_ap_ready = (grp_Cipher_fu_183_ap_ready | ap_sync_reg_grp_Cipher_fu_183_ap_ready);

assign encrypt_V_1_ack_in = encrypt_V_1_state[1'd1];

assign encrypt_V_1_ack_out = encrypt_V_TREADY;

assign encrypt_V_1_load_A = (~encrypt_V_1_sel_wr & encrypt_V_1_state_cmp_full);

assign encrypt_V_1_load_B = (encrypt_V_1_state_cmp_full & encrypt_V_1_sel_wr);

assign encrypt_V_1_sel = encrypt_V_1_sel_rd;

assign encrypt_V_1_state_cmp_full = ((encrypt_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign encrypt_V_1_vld_out = encrypt_V_1_state[1'd0];

assign encrypt_V_TDATA = encrypt_V_1_data_out;

assign encrypt_V_TVALID = encrypt_V_1_state[1'd0];

assign exitcond4_fu_1094_p2 = ((j_reg_151 == 5'd16) ? 1'b1 : 1'b0);

assign exitcond_fu_1111_p2 = ((j1_reg_162 == 5'd16) ? 1'b1 : 1'b0);

assign grp_Cipher_fu_183_ap_start = grp_Cipher_fu_183_ap_start_reg;

assign grp_KeyExpansion_fu_173_ap_start = grp_KeyExpansion_fu_173_ap_start_reg;

assign i_4_fu_1128_p2 = (i_reg_139 + 32'd16);

assign j_1_fu_1100_p2 = (j_reg_151 + 5'd1);

assign j_2_fu_1117_p2 = (j1_reg_162 + 5'd1);

assign plain_V_0_ack_in = plain_V_0_state[1'd1];

assign plain_V_0_load_A = (plain_V_0_state_cmp_full & ~plain_V_0_sel_wr);

assign plain_V_0_load_B = (plain_V_0_state_cmp_full & plain_V_0_sel_wr);

assign plain_V_0_sel = plain_V_0_sel_rd;

assign plain_V_0_state_cmp_full = ((plain_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign plain_V_0_vld_in = plain_V_TVALID;

assign plain_V_0_vld_out = plain_V_0_state[1'd0];

assign plain_V_TREADY = plain_V_0_state[1'd1];

assign tmp_33_fu_1123_p1 = j1_reg_162;

assign tmp_fu_1089_p2 = ((i_reg_139 < length_read_reg_1134) ? 1'b1 : 1'b0);

assign tmp_s_fu_1106_p1 = j_reg_151;

endmodule //AES_ECB_encrypt
