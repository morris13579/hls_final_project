// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module AES_ECB_encrypt_AddRoundKey81 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        p_read15,
        RoundKey96_dout,
        RoundKey96_empty_n,
        RoundKey96_read,
        RoundKey97_dout,
        RoundKey97_empty_n,
        RoundKey97_read,
        RoundKey98_dout,
        RoundKey98_empty_n,
        RoundKey98_read,
        RoundKey99_dout,
        RoundKey99_empty_n,
        RoundKey99_read,
        RoundKey100_dout,
        RoundKey100_empty_n,
        RoundKey100_read,
        RoundKey101_dout,
        RoundKey101_empty_n,
        RoundKey101_read,
        RoundKey102_dout,
        RoundKey102_empty_n,
        RoundKey102_read,
        RoundKey103_dout,
        RoundKey103_empty_n,
        RoundKey103_read,
        RoundKey104_dout,
        RoundKey104_empty_n,
        RoundKey104_read,
        RoundKey105_dout,
        RoundKey105_empty_n,
        RoundKey105_read,
        RoundKey106_dout,
        RoundKey106_empty_n,
        RoundKey106_read,
        RoundKey107_dout,
        RoundKey107_empty_n,
        RoundKey107_read,
        RoundKey108_dout,
        RoundKey108_empty_n,
        RoundKey108_read,
        RoundKey109_dout,
        RoundKey109_empty_n,
        RoundKey109_read,
        RoundKey110_dout,
        RoundKey110_empty_n,
        RoundKey110_read,
        RoundKey111_dout,
        RoundKey111_empty_n,
        RoundKey111_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] p_read;
input  [7:0] p_read1;
input  [7:0] p_read2;
input  [7:0] p_read3;
input  [7:0] p_read4;
input  [7:0] p_read5;
input  [7:0] p_read6;
input  [7:0] p_read7;
input  [7:0] p_read8;
input  [7:0] p_read9;
input  [7:0] p_read10;
input  [7:0] p_read11;
input  [7:0] p_read12;
input  [7:0] p_read13;
input  [7:0] p_read14;
input  [7:0] p_read15;
input  [7:0] RoundKey96_dout;
input   RoundKey96_empty_n;
output   RoundKey96_read;
input  [7:0] RoundKey97_dout;
input   RoundKey97_empty_n;
output   RoundKey97_read;
input  [7:0] RoundKey98_dout;
input   RoundKey98_empty_n;
output   RoundKey98_read;
input  [7:0] RoundKey99_dout;
input   RoundKey99_empty_n;
output   RoundKey99_read;
input  [7:0] RoundKey100_dout;
input   RoundKey100_empty_n;
output   RoundKey100_read;
input  [7:0] RoundKey101_dout;
input   RoundKey101_empty_n;
output   RoundKey101_read;
input  [7:0] RoundKey102_dout;
input   RoundKey102_empty_n;
output   RoundKey102_read;
input  [7:0] RoundKey103_dout;
input   RoundKey103_empty_n;
output   RoundKey103_read;
input  [7:0] RoundKey104_dout;
input   RoundKey104_empty_n;
output   RoundKey104_read;
input  [7:0] RoundKey105_dout;
input   RoundKey105_empty_n;
output   RoundKey105_read;
input  [7:0] RoundKey106_dout;
input   RoundKey106_empty_n;
output   RoundKey106_read;
input  [7:0] RoundKey107_dout;
input   RoundKey107_empty_n;
output   RoundKey107_read;
input  [7:0] RoundKey108_dout;
input   RoundKey108_empty_n;
output   RoundKey108_read;
input  [7:0] RoundKey109_dout;
input   RoundKey109_empty_n;
output   RoundKey109_read;
input  [7:0] RoundKey110_dout;
input   RoundKey110_empty_n;
output   RoundKey110_read;
input  [7:0] RoundKey111_dout;
input   RoundKey111_empty_n;
output   RoundKey111_read;
output  [7:0] ap_return_0;
output  [7:0] ap_return_1;
output  [7:0] ap_return_2;
output  [7:0] ap_return_3;
output  [7:0] ap_return_4;
output  [7:0] ap_return_5;
output  [7:0] ap_return_6;
output  [7:0] ap_return_7;
output  [7:0] ap_return_8;
output  [7:0] ap_return_9;
output  [7:0] ap_return_10;
output  [7:0] ap_return_11;
output  [7:0] ap_return_12;
output  [7:0] ap_return_13;
output  [7:0] ap_return_14;
output  [7:0] ap_return_15;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg RoundKey96_read;
reg RoundKey97_read;
reg RoundKey98_read;
reg RoundKey99_read;
reg RoundKey100_read;
reg RoundKey101_read;
reg RoundKey102_read;
reg RoundKey103_read;
reg RoundKey104_read;
reg RoundKey105_read;
reg RoundKey106_read;
reg RoundKey107_read;
reg RoundKey108_read;
reg RoundKey109_read;
reg RoundKey110_read;
reg RoundKey111_read;
reg[7:0] ap_return_0;
reg[7:0] ap_return_1;
reg[7:0] ap_return_2;
reg[7:0] ap_return_3;
reg[7:0] ap_return_4;
reg[7:0] ap_return_5;
reg[7:0] ap_return_6;
reg[7:0] ap_return_7;
reg[7:0] ap_return_8;
reg[7:0] ap_return_9;
reg[7:0] ap_return_10;
reg[7:0] ap_return_11;
reg[7:0] ap_return_12;
reg[7:0] ap_return_13;
reg[7:0] ap_return_14;
reg[7:0] ap_return_15;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    RoundKey96_blk_n;
reg    RoundKey97_blk_n;
reg    RoundKey98_blk_n;
reg    RoundKey99_blk_n;
reg    RoundKey100_blk_n;
reg    RoundKey101_blk_n;
reg    RoundKey102_blk_n;
reg    RoundKey103_blk_n;
reg    RoundKey104_blk_n;
reg    RoundKey105_blk_n;
reg    RoundKey106_blk_n;
reg    RoundKey107_blk_n;
reg    RoundKey108_blk_n;
reg    RoundKey109_blk_n;
reg    RoundKey110_blk_n;
reg    RoundKey111_blk_n;
reg    ap_block_state1;
wire   [7:0] xor_ln62_fu_276_p2;
wire   [7:0] xor_ln62_61_fu_282_p2;
wire   [7:0] xor_ln62_62_fu_288_p2;
wire   [7:0] xor_ln62_63_fu_294_p2;
wire   [7:0] xor_ln62_64_fu_300_p2;
wire   [7:0] xor_ln62_65_fu_306_p2;
wire   [7:0] xor_ln62_66_fu_312_p2;
wire   [7:0] xor_ln62_67_fu_318_p2;
wire   [7:0] xor_ln62_68_fu_324_p2;
wire   [7:0] xor_ln62_69_fu_330_p2;
wire   [7:0] xor_ln62_70_fu_336_p2;
wire   [7:0] xor_ln62_71_fu_342_p2;
wire   [7:0] xor_ln62_72_fu_348_p2;
wire   [7:0] xor_ln62_73_fu_354_p2;
wire   [7:0] xor_ln62_74_fu_360_p2;
wire   [7:0] xor_ln62_75_fu_366_p2;
reg   [7:0] ap_return_0_preg;
reg   [7:0] ap_return_1_preg;
reg   [7:0] ap_return_2_preg;
reg   [7:0] ap_return_3_preg;
reg   [7:0] ap_return_4_preg;
reg   [7:0] ap_return_5_preg;
reg   [7:0] ap_return_6_preg;
reg   [7:0] ap_return_7_preg;
reg   [7:0] ap_return_8_preg;
reg   [7:0] ap_return_9_preg;
reg   [7:0] ap_return_10_preg;
reg   [7:0] ap_return_11_preg;
reg   [7:0] ap_return_12_preg;
reg   [7:0] ap_return_13_preg;
reg   [7:0] ap_return_14_preg;
reg   [7:0] ap_return_15_preg;
reg   [0:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_return_0_preg = 8'd0;
#0 ap_return_1_preg = 8'd0;
#0 ap_return_2_preg = 8'd0;
#0 ap_return_3_preg = 8'd0;
#0 ap_return_4_preg = 8'd0;
#0 ap_return_5_preg = 8'd0;
#0 ap_return_6_preg = 8'd0;
#0 ap_return_7_preg = 8'd0;
#0 ap_return_8_preg = 8'd0;
#0 ap_return_9_preg = 8'd0;
#0 ap_return_10_preg = 8'd0;
#0 ap_return_11_preg = 8'd0;
#0 ap_return_12_preg = 8'd0;
#0 ap_return_13_preg = 8'd0;
#0 ap_return_14_preg = 8'd0;
#0 ap_return_15_preg = 8'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_0_preg <= xor_ln62_fu_276_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_10_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_10_preg <= xor_ln62_70_fu_336_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_11_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_11_preg <= xor_ln62_71_fu_342_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_12_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_12_preg <= xor_ln62_72_fu_348_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_13_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_13_preg <= xor_ln62_73_fu_354_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_14_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_14_preg <= xor_ln62_74_fu_360_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_15_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_15_preg <= xor_ln62_75_fu_366_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_1_preg <= xor_ln62_61_fu_282_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_2_preg <= xor_ln62_62_fu_288_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_3_preg <= xor_ln62_63_fu_294_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_4_preg <= xor_ln62_64_fu_300_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_5_preg <= xor_ln62_65_fu_306_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_6_preg <= xor_ln62_66_fu_312_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_7_preg <= xor_ln62_67_fu_318_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_8_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_8_preg <= xor_ln62_68_fu_324_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_9_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_9_preg <= xor_ln62_69_fu_330_p2;
        end
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey100_blk_n = RoundKey100_empty_n;
    end else begin
        RoundKey100_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey100_read = 1'b1;
    end else begin
        RoundKey100_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey101_blk_n = RoundKey101_empty_n;
    end else begin
        RoundKey101_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey101_read = 1'b1;
    end else begin
        RoundKey101_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey102_blk_n = RoundKey102_empty_n;
    end else begin
        RoundKey102_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey102_read = 1'b1;
    end else begin
        RoundKey102_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey103_blk_n = RoundKey103_empty_n;
    end else begin
        RoundKey103_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey103_read = 1'b1;
    end else begin
        RoundKey103_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey104_blk_n = RoundKey104_empty_n;
    end else begin
        RoundKey104_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey104_read = 1'b1;
    end else begin
        RoundKey104_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey105_blk_n = RoundKey105_empty_n;
    end else begin
        RoundKey105_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey105_read = 1'b1;
    end else begin
        RoundKey105_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey106_blk_n = RoundKey106_empty_n;
    end else begin
        RoundKey106_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey106_read = 1'b1;
    end else begin
        RoundKey106_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey107_blk_n = RoundKey107_empty_n;
    end else begin
        RoundKey107_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey107_read = 1'b1;
    end else begin
        RoundKey107_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey108_blk_n = RoundKey108_empty_n;
    end else begin
        RoundKey108_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey108_read = 1'b1;
    end else begin
        RoundKey108_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey109_blk_n = RoundKey109_empty_n;
    end else begin
        RoundKey109_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey109_read = 1'b1;
    end else begin
        RoundKey109_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey110_blk_n = RoundKey110_empty_n;
    end else begin
        RoundKey110_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey110_read = 1'b1;
    end else begin
        RoundKey110_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey111_blk_n = RoundKey111_empty_n;
    end else begin
        RoundKey111_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey111_read = 1'b1;
    end else begin
        RoundKey111_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey96_blk_n = RoundKey96_empty_n;
    end else begin
        RoundKey96_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey96_read = 1'b1;
    end else begin
        RoundKey96_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey97_blk_n = RoundKey97_empty_n;
    end else begin
        RoundKey97_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey97_read = 1'b1;
    end else begin
        RoundKey97_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey98_blk_n = RoundKey98_empty_n;
    end else begin
        RoundKey98_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey98_read = 1'b1;
    end else begin
        RoundKey98_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey99_blk_n = RoundKey99_empty_n;
    end else begin
        RoundKey99_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        RoundKey99_read = 1'b1;
    end else begin
        RoundKey99_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_0 = xor_ln62_fu_276_p2;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_1 = xor_ln62_61_fu_282_p2;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_10 = xor_ln62_70_fu_336_p2;
    end else begin
        ap_return_10 = ap_return_10_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_11 = xor_ln62_71_fu_342_p2;
    end else begin
        ap_return_11 = ap_return_11_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_12 = xor_ln62_72_fu_348_p2;
    end else begin
        ap_return_12 = ap_return_12_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_13 = xor_ln62_73_fu_354_p2;
    end else begin
        ap_return_13 = ap_return_13_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_14 = xor_ln62_74_fu_360_p2;
    end else begin
        ap_return_14 = ap_return_14_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_15 = xor_ln62_75_fu_366_p2;
    end else begin
        ap_return_15 = ap_return_15_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_2 = xor_ln62_62_fu_288_p2;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_3 = xor_ln62_63_fu_294_p2;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_4 = xor_ln62_64_fu_300_p2;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_5 = xor_ln62_65_fu_306_p2;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_6 = xor_ln62_66_fu_312_p2;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_7 = xor_ln62_67_fu_318_p2;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_8 = xor_ln62_68_fu_324_p2;
    end else begin
        ap_return_8 = ap_return_8_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_9 = xor_ln62_69_fu_330_p2;
    end else begin
        ap_return_9 = ap_return_9_preg;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (1'b0 == RoundKey110_empty_n) | (1'b0 == RoundKey109_empty_n) | (1'b0 == RoundKey108_empty_n) | (1'b0 == RoundKey107_empty_n) | (1'b0 == RoundKey106_empty_n) | (1'b0 == RoundKey105_empty_n) | (1'b0 == RoundKey104_empty_n) | (1'b0 == RoundKey103_empty_n) | (1'b0 == RoundKey102_empty_n) | (1'b0 == RoundKey101_empty_n) | (1'b0 == RoundKey100_empty_n) | (1'b0 == RoundKey99_empty_n) | (1'b0 == RoundKey98_empty_n) | (1'b0 == RoundKey97_empty_n) | (1'b0 == RoundKey96_empty_n) | (1'b0 == RoundKey111_empty_n) | (ap_done_reg == 1'b1));
end

assign xor_ln62_61_fu_282_p2 = (p_read1 ^ RoundKey97_dout);

assign xor_ln62_62_fu_288_p2 = (p_read2 ^ RoundKey98_dout);

assign xor_ln62_63_fu_294_p2 = (p_read3 ^ RoundKey99_dout);

assign xor_ln62_64_fu_300_p2 = (p_read4 ^ RoundKey100_dout);

assign xor_ln62_65_fu_306_p2 = (p_read5 ^ RoundKey101_dout);

assign xor_ln62_66_fu_312_p2 = (p_read6 ^ RoundKey102_dout);

assign xor_ln62_67_fu_318_p2 = (p_read7 ^ RoundKey103_dout);

assign xor_ln62_68_fu_324_p2 = (p_read8 ^ RoundKey104_dout);

assign xor_ln62_69_fu_330_p2 = (p_read9 ^ RoundKey105_dout);

assign xor_ln62_70_fu_336_p2 = (p_read10 ^ RoundKey106_dout);

assign xor_ln62_71_fu_342_p2 = (p_read11 ^ RoundKey107_dout);

assign xor_ln62_72_fu_348_p2 = (p_read12 ^ RoundKey108_dout);

assign xor_ln62_73_fu_354_p2 = (p_read13 ^ RoundKey109_dout);

assign xor_ln62_74_fu_360_p2 = (p_read14 ^ RoundKey110_dout);

assign xor_ln62_75_fu_366_p2 = (p_read15 ^ RoundKey111_dout);

assign xor_ln62_fu_276_p2 = (p_read ^ RoundKey96_dout);

endmodule //AES_ECB_encrypt_AddRoundKey81
